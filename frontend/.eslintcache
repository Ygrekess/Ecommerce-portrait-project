[{"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/index.js":"1","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/store.js":"2","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/reportWebVitals.js":"3","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/App.js":"4","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/reducers/productReducers.js":"5","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/reducers/userReducers.js":"6","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/reducers/dataReducers.js":"7","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/reducers/cartReducers.js":"8","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/reducers/orderReducers.js":"9","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/actions/userActions.js":"10","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Dashboard/Dashboard.js":"11","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Home_Page.js":"12","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/actions/cartActions.js":"13","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Cart/Cart.js":"14","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Cart/useVisible.js":"15","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Modele/Modele_Page.js":"16","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Modele/Modeles_Page.js":"17","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Connexion/Connexion.js":"18","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Order/PlaceOrder_Page.js":"19","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Order/Upload_Page.js":"20","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Admin_dashboard.js":"21","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Dashboard/Account.js":"22","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Dashboard/Menu.js":"23","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Dashboard/UserOrders.js":"24","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Dashboard/Infos.js":"25","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Dashboard/Upload_Photo_Dashboard.js":"26","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Dashboard/OrderDetails_Page.js":"27","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/actions/productActions.js":"28","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/actions/dataActions.js":"29","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Modele/Filter.js":"30","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Pagination.js":"31","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Connexion/Register_Page.js":"32","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Modele/Modele_Card.js":"33","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Connexion/Signin_Page.js":"34","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Order_page.js":"35","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/AddProduct_page.js":"36","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/User_page.js":"37","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Product_page.js":"38","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Stats.js":"39","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Menu.js":"40","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Products.js":"41","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Orders.js":"42","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Users.js":"43","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/actions/orderActions.js":"44","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Order/components/Upload_Part.js":"45","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Order/components/UploadBar.js":"46","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/helpers/formatBytes.js":"47"},{"size":572,"mtime":1607347866066,"results":"48","hashOfConfig":"49"},{"size":2155,"mtime":1610449066740,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":1607192535869,"results":"51","hashOfConfig":"49"},{"size":6873,"mtime":1612113189637,"results":"52","hashOfConfig":"49"},{"size":1325,"mtime":1612024200167,"results":"53","hashOfConfig":"49"},{"size":4172,"mtime":1610449777341,"results":"54","hashOfConfig":"49"},{"size":413,"mtime":1607465987480,"results":"55","hashOfConfig":"49"},{"size":2671,"mtime":1609944012284,"results":"56","hashOfConfig":"49"},{"size":2666,"mtime":1610399379969,"results":"57","hashOfConfig":"49"},{"size":4528,"mtime":1610487299179,"results":"58","hashOfConfig":"49"},{"size":2363,"mtime":1612093804300,"results":"59","hashOfConfig":"49"},{"size":12648,"mtime":1612110452225,"results":"60","hashOfConfig":"49"},{"size":3410,"mtime":1612094677974,"results":"61","hashOfConfig":"49"},{"size":6293,"mtime":1612107162161,"results":"62","hashOfConfig":"49"},{"size":601,"mtime":1609538332481,"results":"63","hashOfConfig":"49"},{"size":5024,"mtime":1612106720092,"results":"64","hashOfConfig":"49"},{"size":4540,"mtime":1612105194238,"results":"65","hashOfConfig":"49"},{"size":2088,"mtime":1612104145331,"results":"66","hashOfConfig":"49"},{"size":28678,"mtime":1612112345123,"results":"67","hashOfConfig":"49"},{"size":3247,"mtime":1612109041434,"results":"68","hashOfConfig":"49"},{"size":2737,"mtime":1612035411992,"results":"69","hashOfConfig":"49"},{"size":9955,"mtime":1612110296789,"results":"70","hashOfConfig":"49"},{"size":2003,"mtime":1610143000824,"results":"71","hashOfConfig":"49"},{"size":2462,"mtime":1612088794515,"results":"72","hashOfConfig":"49"},{"size":10314,"mtime":1612087459590,"results":"73","hashOfConfig":"49"},{"size":1640,"mtime":1612089760605,"results":"74","hashOfConfig":"49"},{"size":4670,"mtime":1612103297589,"results":"75","hashOfConfig":"49"},{"size":3714,"mtime":1612030526047,"results":"76","hashOfConfig":"49"},{"size":403,"mtime":1610404132971,"results":"77","hashOfConfig":"49"},{"size":2779,"mtime":1612114155331,"results":"78","hashOfConfig":"49"},{"size":774,"mtime":1610920993918,"results":"79","hashOfConfig":"49"},{"size":2939,"mtime":1610485618520,"results":"80","hashOfConfig":"49"},{"size":1133,"mtime":1612031855865,"results":"81","hashOfConfig":"49"},{"size":2255,"mtime":1610486441387,"results":"82","hashOfConfig":"49"},{"size":4660,"mtime":1610564760883,"results":"83","hashOfConfig":"49"},{"size":8420,"mtime":1610359879259,"results":"84","hashOfConfig":"49"},{"size":6826,"mtime":1610486915143,"results":"85","hashOfConfig":"49"},{"size":9344,"mtime":1610558074589,"results":"86","hashOfConfig":"49"},{"size":115,"mtime":1610213094225,"results":"87","hashOfConfig":"49"},{"size":1803,"mtime":1612035402290,"results":"88","hashOfConfig":"49"},{"size":2737,"mtime":1611937337794,"results":"89","hashOfConfig":"49"},{"size":1980,"mtime":1610920605703,"results":"90","hashOfConfig":"49"},{"size":2078,"mtime":1610920616033,"results":"91","hashOfConfig":"49"},{"size":3185,"mtime":1612109606188,"results":"92","hashOfConfig":"49"},{"size":6330,"mtime":1612110090178,"results":"93","hashOfConfig":"49"},{"size":607,"mtime":1609865239643,"results":"94","hashOfConfig":"49"},{"size":767,"mtime":1609867125917,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"snlk84",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"98"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"98"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"98"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"98"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"98"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"98"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"98"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"98"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"98"},"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/index.js",[],["224","225"],"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/store.js",[],"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/reportWebVitals.js",[],"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/App.js",["226","227","228"],"import './App.css';\nimport { BrowserRouter, Route, Link, NavLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Home_Page from './components/Home_Page';\nimport Modeles_Page from './components/Modele/Modeles_Page';\nimport { logout } from './actions/userActions';\nimport { FiShoppingCart } from 'react-icons/fi';\nimport { VscAccount } from 'react-icons/vsc';\nimport Modele_Page from './components/Modele/Modele_Page';\nimport { useEffect, useState } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport useVisible from \"./components/Cart/useVisible\"\nimport PlaceOrder_Page from './components/Order/PlaceOrder_Page';\nimport { loadStripe } from '@stripe/stripe-js';\nimport {Elements} from '@stripe/react-stripe-js';\nimport Upload_Page from './components/Order/Upload_Page';\nimport { recupCartDetails } from './actions/cartActions';\nimport Admin_dashboard from './components/Admin/Admin_dashboard';\nimport Connexion from './components/Connexion/Connexion';\n\nconst stripePromise = loadStripe('pk_test_51I5SwjCkP1aIaUis7r9xPfgttfwYd9Dbz6joX9VcgV4KX1PnxFofxQS0Z1vSHZ1Q4UMUqO5ZIVBMiNYLFuILznKd00ElOrsevC');\n\nfunction App() {\n\n  const { ref, isVisible, setIsVisible } = useVisible(false);\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems, cookieItems } = cart;\n\n  const dispatch = useDispatch()\n    \n  const numbItemsCart = () => {\n    return cartItems.reduce((total, cartItems) => {\n    return total + (1 * cartItems.qty)\n    }, 0)\n  }\n\n  useEffect(() => {\n    dispatch(recupCartDetails())\n\n  }, [cookieItems])\n\n  const handleLogout = () => {\n    dispatch(logout());\n  }\n\n  return (\n    <BrowserRouter>\n      <Elements stripe={stripePromise}>\n      <div className=\"app container-fluid d-flex flex-column justify-content-start min-vh-100\">\n        <header className=\"header justify-content-between w-100\">\n            <nav className=\"navbar navbar-expand-lg navbar-light row align-items-start\">\n              <a className=\"navbar-brand col-3 text-left\" href=\"/\"><img className='logo' src='/photos-site/logo2.png'/></a>\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div className=\"collapse navbar-collapse col-9 p-0 ml-auto mt-2\" id=\"navbarNav\">\n                <ul className=\"navbar-nav col-md-12 d-flex justify-content-around align-items-start\">\n                    <li className=\"nav-item active d-flex align-items-center col-md-2 col-3 ml-auto p-0\">\n                      <NavLink exact to=\"/\" className=\"\" activeClassName=\"selected\">Accueil</NavLink>\n                    </li>\n                    <li className=\"nav-item d-flex align-items-center col-md-2 col-3 ml-auto p-0\">\n                      <NavLink to=\"/modeles\" className=\"\" activeClassName=\"selected \">Nos modèles</NavLink>\n                    </li>\n                    <li className=\"nav-item d-flex align-items-center col-md-2 col-3 ml-auto p-0\">\n                      <NavLink to=\"/contact\" className=\"\" activeClassName=\"selected \">Nous contacter</NavLink>\n                    </li>\n                  {\n                  userInfo ?\n                    <li className=\"nav-item d-flex align-items-center col-md-2 col-3 ml-auto p-0\">\n                      <NavLink to=\"/admin/liste-utilisateurs\" className=\"\" activeClassName=\"selected \">Admin</NavLink>\n                    </li>\n                    : null\n                  }\n                  {\n                  userInfo ?\n                    <li className=\"d-flex align-items-center col-md-1 col-3 ml-auto p-0\">\n                      <NavLink to=\"/mon-compte\" className=\"\" activeClassName=\"selected \"><VscAccount size={22} /></NavLink>\n                    </li> \n                    : null\n                  }\n                    <li className=\"nav-item d-flex align-items-center col-md-1 col-3 ml-auto p-0\">\n                      <div className=\"cart p-0 d-flex flex-column align-items-center \" onClick={e => setIsVisible(!isVisible)}><div className=\"div-icon-cart\"><FiShoppingCart size={22}/></div><span className=\"numbitemscart\">{numbItemsCart()}</span></div>\n                    </li>\n                  {userInfo ? \n                    <li className=\"d-flex align-items-center col-md-2 col-3 ml-auto p-0\">\n                      <Link className=\"\" to=\"#\" onClick={handleLogout}>Déconnexion</Link>\n                    </li> :\n                    <li className=\"d-flex align-items-center col-md-2 col-3 ml-auto p-0\">\n                      <NavLink to=\"/connexion\" className=\"\" activeClassName=\"selected \">Connexion</NavLink>\n                    </li>\n                    }\n                </ul>\n              </div>\n            </nav>\n\n{/*             {userInfo && userInfo.isAdmin && (\n              <div className=\"dropdown\">\n                <a href=\"#\">Admin</a>\n                <ul className=\"dropdown-content\">\n                  <li>\n                    <Link to=\"/orders\">Orders</Link>\n                    <Link to=\"/products\">Products</Link>\n                  </li>\n                </ul>\n              </div>\n            )} */}\n        </header>\n\n      {isVisible && <div ref={ref}>\n        <Cart isVisible={isVisible} setIsVisible={setIsVisible} />\n      </div>}\n\n          <Route path=\"/\" exact component={Home_Page} />\n        <div className=\"page-content d-flex justify-content-center align-items-start\">\n          \n          <Route path=\"/connexion\" component={Connexion} />\n          <Route path=\"/modeles/:page?/:style?/:size?/:max?/:min?\" component={Modeles_Page} />\n          <Route path=\"/modele/:slug/:person/:face/:id\" component={Modele_Page} />\n          <Route path=\"/commande\" component={PlaceOrder_Page} />\n          <Route path=\"/envoyer-photos/:id\" component={Upload_Page} />\n          <Route path=\"/mon-compte\" component={Dashboard} />\n          <Route path=\"/admin\" component={Admin_dashboard} />\n        </div>\n        <footer id=\"footer\" className='mt-auto d-flex align-items-center justify-content-around'>\n              <ul>\n                <li>Lorem ipsum</li>\n                <li>Lorem ipsum</li>\n                <li>Lorem ipsum</li>\n              </ul>\n              <ul>\n                <li>Lorem ipsum</li>\n                <li>Lorem ipsum</li>\n                <li>Lorem ipsum</li>\n              </ul>\n              <ul>\n                <li>Lorem ipsum</li>\n                <li>Lorem ipsum</li>\n                <li>Lorem ipsum</li>\n              </ul>\n        </footer>\n      </div>\n    </Elements>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/reducers/productReducers.js",[],"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/reducers/userReducers.js",[],"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/reducers/dataReducers.js",[],"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/reducers/cartReducers.js",[],"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/reducers/orderReducers.js",[],"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/actions/userActions.js",["229","230"],"import Axios from \"axios\";\nimport Cookie from 'js-cookie';\n\n/* export const userSignin = (infos) => {\n    return {\n        type: 'USER_SIGNIN',\n        payload: infos\n    }\n} */\nconst listUsers = (offset, per_page) => async (dispatch) => {\n    dispatch({ type: \"USER_LIST_REQUEST\" });\n    try {\n      const { data } = await Axios.get('/api/users/list', { params: { offset: offset, per_page: per_page } });\n      dispatch({ type: \"USER_LIST_SUCCESS\", payload: data });\n  } catch (error) {\n      dispatch({ type: \"USER_LIST_FAIL\", payload: error.message });\n  }\n}\nconst resetListUsers = () => (dispatch) => {\n    dispatch({ type: \"USER_LIST_RESET\" });\n}\n\nconst getInfos = (userId) => async (dispatch) => {\n  dispatch({ type: \"USER_INFOS_REQUEST\"});\n  try {\n    const { data } = await Axios.get(`/api/users/user/${userId}`);\n    dispatch({ type: \"USER_INFOS_SUCCESS\", payload: data });\n  } catch (error) {\n    dispatch({ type: \"USER_INFOS_FAIL\", payload: error.message });\n  }\n}\n\nconst resetInfos = () => (dispatch) => {\n  dispatch({ type: \"USER_INFOS_RESET\" });\n    dispatch({ type: \"USER_UPDATE_INFOS_RESET\" });\n}\n\nconst getDetails = (userId) => async (dispatch) => {\n  dispatch({ type: \"USER_DETAILS_REQUEST\"});\n  try {\n    const { data } = await Axios.get(`/api/users/user/details/${userId}`);\n    dispatch({ type: \"USER_DETAILS_SUCCESS\", payload: data });\n  } catch (error) {\n    dispatch({ type: \"USER_DETAILS_FAIL\", payload: error.message });\n  }\n}\n\nconst updateInfos = (userId, lastname, firstname, email, phone, newsletter) => async (dispatch) => {\n  dispatch({ type: \"USER_UPDATE_INFOS_REQUEST\"});\n  try {\n    await Axios.put(`/api/users/${userId}/updateinfos`, { lastname, firstname, email, phone, newsletter });\n    dispatch({ type: \"USER_UPDATE_INFOS_SUCCESS\" });\n  } catch (error) {\n    dispatch({ type: \"USER_UPDATE_INFOS_FAIL\", payload: error.message });\n  }\n}\n\nconst register = (username, email, password, newsletter) => async (dispatch) => {\n  dispatch({ type: \"USER_REGISTER_REQUEST\", payload: { username, email, password, newsletter } });\n  try {\n    const { data } = await Axios.post(\"/api/users/register\", { username, email, password, newsletter });\n    dispatch({ type: \"USER_REGISTER_SUCCESS\", payload: data });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({ type: \"USER_REGISTER_FAIL\", payload: error.message });\n  }\n}\n\nconst signin = (username, password) => async (dispatch) => {\n  dispatch({ type: \"USER_SIGNIN_REQUEST\", payload: { username, password } });\n  try {\n    const { data } = await Axios.post(\"/api/users/login\", { username, password });\n    dispatch({ type: \"USER_SIGNIN_SUCCESS\", payload: data });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({ type: \"USER_SIGNIN_FAIL\", payload: error.message });\n  }\n}\n\nconst checkPassword = (userId, password) => async (dispatch) => {\n  dispatch({ type: \"CHECK_PASSWORD_REQUEST\", payload: { userId, password } });\n  try {\n    const { data } = await Axios.post(\"/api/users/passwordcheck\", { userId, password });\n    dispatch({ type: \"CHECK_PASSWORD_SUCCESS\", payload: data });\n  } catch (error) {\n    dispatch({ type: \"CHECK_PASSWORD_FAIL\", payload: error.message });\n  }\n}\n\nconst updatePassword = (userId, newPassword) => async (dispatch) => {\n  dispatch({ type: \"UPDATE_PASSWORD_REQUEST\" });\n  try {\n    const { data } = await Axios.put(`/api/users/${userId}/updatepassword`, { newPassword });\n    dispatch({ type: \"UPDATE_PASSWORD_SUCCESS\" });\n    dispatch({ type: \"CHECK_PASSWORD_RESET\"}); \n  } catch (error) {\n    dispatch({ type: \"UPDATE_PASSWORD_FAIL\", payload: error.message });\n  } \n}\n\nconst passwordCheckReset = () => (dispatch) => {\n    dispatch({ type: \"CHECK_PASSWORD_RESET\"});  \n}\n\nconst updateUserName = (userId, newUserName) => async (dispatch) => {\n  dispatch({ type: \"UPDATE_USERNAME_REQUEST\" });\n  try {\n    const { data } = await Axios.put(`/api/users/${userId}/updateusername`, { newUserName });\n    dispatch({ type: \"UPDATE_USERNAME_SUCCESS\" });\n    dispatch({ type: \"UPDATE_USERNAME_RESET\" });\n    dispatch({ type: \"CHECK_PASSWORD_RESET\"});\n  } catch (error) {\n    dispatch({ type: \"UPDATE_USERNAME_FAIL\", payload: { message : \"Nom d'utilisateur déjà utilisé.\" } });\n  }\n}\n\nconst logout = () => (dispatch) => {\n  Cookie.remove(\"userInfo\");\n  dispatch({ type: \"USER_LOGOUT\" })\n}\n\nexport { listUsers, getDetails, resetListUsers, getInfos, updateInfos, resetInfos, signin, register, checkPassword, passwordCheckReset, logout, updatePassword, updateUserName};","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Dashboard/Dashboard.js",["231","232","233"],"import React, { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Menu from './Menu'\nimport Account from './Account'\nimport UserOrders from './UserOrders'\nimport \"../css/Dashboard.css\"\nimport { Route } from 'react-router-dom'\nimport Infos from './Infos'\nimport OrderDetails_Page from './OrderDetails_Page'\nimport Upload_Photo from './Upload_Photo_Dashboard'\nimport { getInfos, resetInfos } from '../../actions/userActions'\nimport { ImSpinner8 } from \"react-icons/im\"\n\n\nexport default function Dashboard(props) {\n    \n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const userInfos = useSelector(state => state.userInfos)\n    const { loading, userDetails } = userInfos;\n\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        if (!userInfo) {\n            props.history.push(\"/\");\n        }\n        if (userInfo) {\n/*             console.log(\"getInfos\")\n            if (Object.keys(userDetails).length === 0) {\n                \n            } */\n            dispatch(getInfos(userInfo._id))\n        }\n        return () => {\n/*             dispatch(resetInfos())\n */        }\n    }, [userInfo])\n\n    return ( loading ? <div className=\"col-8 loading-spinner-div d-flex justify-content-center align-items-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n        <div className=\"dashboard-container container mt-5\">\n            <div className=\"dashboard-menu-container col-md-2 col-12\">\n                <Menu props={props} />\n            </div>\n            { loading ? <div className=\"col-8 loading-spinner-div d-flex justify-content-center align-items-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n            <Fragment>\n                <Route path=\"/mon-compte\" exact component={Account} />\n                <Route path=\"/mon-compte/infos-perso\" component={Infos} />\n                <Route path=\"/mon-compte/mes-commandes\" exact component={UserOrders} />\n                <Route path=\"/mon-compte/mes-commandes/:id\" component={OrderDetails_Page} />\n                <Route path=\"/mon-compte/envoyer-photo\" component={Upload_Photo} />\n                <div className=\"col-2 d-flex justify-content-center\">\n                </div>\n            </Fragment>\n            }\n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Home_Page.js",["234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"import React, { useEffect } from 'react';\nimport \"../App.css\";\nimport './css/Home_page.css';\nimport { BsChatSquareDots } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\nimport Modele_Card from './Modele/Modele_Card';\nimport { listProducts, resetListProducts } from '../actions/productActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function Home_Page() {\n\n    const dispatch = useDispatch();\n    const productList = useSelector(state => state.listProducts);\n    const { error, loading, products } = productList;\n    \n    useEffect(() => {\n        console.log(products)\n        dispatch(listProducts());\n        return () => {\n            dispatch(resetListProducts());\n        };\n    }, []);\n\n    return (\n            <div className=\"homepage-content\">\n                <section id=\"intro\">\n                    <img id=\"banniere-img\" src=\"/photos-site/homepagetest.png\"></img>\n                    <div className=\"intro-content mb-5\" >\n                        <h1> Offrez le portrait de votre choix. </h1>\n                        <p> On sait depuis longtemps que travailler avec du texte lisible et contenant du sens est source de distractions, et empêche de se concentrer sur la mise en page elle-même..</p>\n                        <div>\n                            <button className=\"intro_btn_creerMonModele my-5 px-4 py-1 text-uppercase\">Voir les modèles</button>\n                        </div>\n                    </div>\n                    <div id=\"div_presentation\" className=\"m-auto \">\n                        <div className=\"div_presentation_1 m-auto d-flex flex-column justify-content-center align-items-center\">\n                            <img src=\"https://www.icone-png.com/png/13/13482.png\" alt=\"\"/>\n                            <h1> Un cadeau original</h1>\n                            <p>Offrez à vos proches un cadeau qu'il ne trouveront nulle part ailleurs.</p>\n                        </div>\n                        <div className=\"div_presentation_2 m-auto d-flex flex-column justify-content-center align-items-center\">\n                            <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fimage.flaticon.com%2Ficons%2Fpng%2F512%2F492%2F492688.png&f=1&nofb=1\" alt=\"\"/>\n                            <h1> Un tableau 100% personnalisé </h1>\n                            <p>Commandez et affichez chez vous un tableau unique.</p>\n                        </div> \n                        <div className=\"div_presentation_3 m-auto d-flex flex-column justify-content-center align-items-center\">\n                            <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fimage.flaticon.com%2Ficons%2Fpng%2F512%2F492%2F492713.png&f=1&nofb=1\" alt=\"\"/>\n                            <h1> Une photo </h1>\n                            <p> Envoyez nous une simple photo et nos designers se chargeront du reste. </p>\n                        </div>\n                    </div>  \n                </section>\n\n                <section id=\"boutique-header\">\n                    <div className=\"section-header row\">\n                        <h2 className=\"m-auto\">Des portraits selon vos envies</h2>\n                    </div>\n                    <div className=\"photo_boutique_content row justify-content-between my-5 pt-3\">\n                        <div className=\"m-auto d-flex flex-column justify-content-center align-items-center\">\n                            <div className=\"div_boutique\">\n                                <img src=\"/photos-site/pop-art.png\"></img>\n                                <div className='div-title m-auto d-flex align-items-center'>\n                                    <h4 className='m-auto text-white p-2'>Pop art</h4>\n                                </div>\n                            </div> \n                            <p>Pour offrir à vos amis ou à vous même.</p> \n                            <ul>\n                                <li>loremlorel</li>\n                                <li>loremlorel</li>\n                                <li>loremlorel</li>\n                            </ul>\n                            <button className=\"boutique_btn_voirplus my-5 px-4 py-1 text-uppercase\">En savoir plus</button>\n                        </div>\n                        <div className=\"m-auto d-flex flex-column justify-content-center align-items-center\">\n                            <div className=\"div_boutique\">\n                                <img src=\"/photos-site/tete-cartoon-1.png\"></img>\n                                <div className='div-title m-auto d-flex align-items-center'>\n                                    <h4 className='m-auto text-white p-2'>Cartoon</h4>\n                                </div>\n                            </div>\n                            <p className=\"\">Pour offrir à vos amis ou à vous même.</p> \n                            <ul className=\"w-100\">\n                                <li>loremlorel</li>\n                                <li>loremlorel</li>\n                                <li>loremlorel</li>\n                            </ul>\n                            <button className=\"boutique_btn_voirplus my-5 px-4 py-1 text-uppercase\">En savoir plus</button>\n                        </div> \n                        <div className=\"m-auto d-flex flex-column justify-content-center align-items-center\">\n                            <div className=\"div_boutique\">\n                                <img src=\"/photos-site/portrait-design.jpeg\"></img>\n                                <div className='div-title m-auto d-flex align-items-center'>\n                                    <h4 className='m-auto text-white p-2'>Autres</h4>\n                                </div>\n                            </div>\n                            <p>Pour offrir à vos amis ou à vous même.</p> \n                            <ul>\n                                <li>loremlorel</li>\n                                <li>loremlorel</li>\n                                <li>loremlorel</li>\n                            </ul>\n                            <button className=\"boutique_btn_voirplus my-5 px-4 py-1 text-uppercase\">En savoir plus</button>\n                        </div>\n                    </div>\n                </section>\n\n                {\n                !loading &&\n                <section id=\"modele\">\n                    <div className=\"section-header row my-5\">\n                        <h2 className=\"m-auto\"> Nos modèles </h2>\n                    </div>    \n                    <div className=\"modele-content row\">\n                        <div className=\"left-content\">\n                            <div className=\"top d-flex flex-column justify-content-around align-items-center\">\n                                {\n                                    <Modele_Card product={products[0]}/>\n                                }\n                            </div>\n                            <div className=\"bottom mt-5 d-flex flex-column justify-content-around align-items-center\">\n                                {\n                                    <Modele_Card product={products[1]}/>\n                                }                              \n                            </div>\n                        </div>\n                        <div className=\"middle-content d-flex flex-column justify-content-around align-items-center\">\n                            <div className=\"top d-flex flex-column justify-content-around align-items-center\">\n                                {\n                                    <Modele_Card product={products[6]}/>\n                                }                      \n                            </div>\n                            <div className=\"bottom mt-5 d-flex flex-column justify-content-around align-items-center\">\n                                {\n                                    <Modele_Card product={products[7]}/>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"right-content\">\n                            <div className=\"top d-flex flex-column justify-content-around align-items-center\">\n                                {\n                                    <Modele_Card product={products[3]}/>\n                                }                      \n                            </div>\n                            <div className=\"bottom mt-5 d-flex flex-column justify-content-around align-items-center\">\n                                {\n                                    <Modele_Card product={products[4]}/>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                }\n            \n                <section id=\"reviews\" className=\"my-5\">\n                    <div className=\"reviews-content\" >\n                        <div className=\"section-header\">\n                            <h2> Que pensent nos clients </h2>\n                        </div>\n                        <div className=\"section-reviews mt-4\">\n                            <div id=\"displayReviews\" className=\"d-flex flex-column justify-content-around align-items-center mx-auto py-3\">\n                                <BsChatSquareDots size={50}/>\n                                <p>C'était parfait !</p>\n                                <p><strong>Anne-Sophie</strong></p>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n                <section id=\"about\" className=\"my-5\">\n                    <div className=\"about-content\">\n                        <div className=\"section-header\">\n                            <h2> A propos </h2>\n                        </div>\n                        <div className=\"section-body\">\n                            <div id=\"about_presentation\">\n                                <div className=\"about_photoFilter my-3 mr-5 mx-sm-5\">\n                                    <img src=\"photos-site/bureau_homepage.jpg\"></img>\n                                </div>\n                                <p>\n                                    On sait depuis longtemps que travailler avec du texte lisible et contenant du sens est source de distractions, et empêche de se concentrer sur la mise en page elle-même. L'avantage du Lorem Ipsum sur un texte générique comme 'Du texte. Du texte. Du texte.' est qu'il possède une distribution de lettres plus ou moins normale, et en tout cas comparable avec celle du français standard. De nombreuses suites logicielles de mise en page ou éditeurs de sites Web ont fait du Lorem Ipsum leur faux texte par défaut, et une recherche pour 'Lorem Ipsum' vous conduira vers de nombreux sites qui n'en sont encore qu'à leur phase de construction. Plusieurs versions sont apparues avec le temps, parfois par accident, souvent intentionnellement (histoire d'y rajouter de petits clins d'oeil, voire des phrases embarassantes).\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n                <section id=\"prefooter\">\n                    <div id=\"div_prefooter\">\n                        <div className=\"div_prefooter_1\">\n                            <img src=\"https://image.flaticon.com/icons/png/512/86/86034.png\" className=\"m-auto\" alt=\"\"/>\n                            <h1> Paiement sécurisé </h1>\n                            <p>On sait depuis longtemps que travailler avec du texte lisible et contenant du sens est source de distractions.</p>\n                        </div>\n                        <div className=\"div_prefooter_2\">\n                            <img src=\"https://cdn.icon-icons.com/icons2/1456/PNG/512/mbridelivery_99588.png\" className=\"m-auto\" alt=\"\"/>\n                            <h1> Livraison </h1>\n                            <p>On sait depuis longtemps que travailler avec du texte lisible et contenant du sens est source de distractions.</p>\n                        </div> \n                        <div className=\"div_prefooter_3\">\n                            <img src=\"https://icons.iconarchive.com/icons/icons8/windows-8/512/Messaging-Chat-icon.png\" className=\"m-auto\" alt=\"\"/>\n                            <h1> Avis clients </h1>\n                            <p>On sait depuis longtemps que travailler avec du texte lisible et contenant du sens est source de distractions.</p>\n                        </div>\n                    </div>  \n                </section>\n            </div> \n    )\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/actions/cartActions.js",["248"],"import Axios from 'axios';\nimport Cookie from 'js-cookie';\nimport uniqid from 'uniqid';\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n    try {\n        const { data } = await Axios.get('/api/products/details', { params: { productId: productId } });\n        dispatch({\n        type: \"CART_ADD_ITEM\",\n        payload: {\n            _id: data.product._id,\n            cartItemId: uniqid(),\n            qty\n        }\n        });  \n        dispatch({ type: \"CHECK_QTY_ITEM_NULL\" })\n        const { cart: { cookieItems } } = getState();\n        Cookie.set(\"cartItems\", JSON.stringify(cookieItems));\n    } catch (error) {\n        //\n    }\n}\n\nconst recupCartDetails = () => async (dispatch, getState) => {\n    const { cart: { cookieItems } } = getState();\n    let payload = []\n    let ids = [];\n    for (let i = 0; i < cookieItems.length; i++) {\n        let item = cookieItems[i];\n        ids = [...ids, item._id]\n    }\n\n    try {\n        const { data } = await Axios.get('/api/products/cartDetails', { params: { ids: ids } })\n        for (let i = 0; i < data.products.length; i++) {\n            cookieItems.map(x => x._id === data.products[i]._id ?\n                payload = [...payload,\n                {\n                    _id: data.products[i]._id,\n                    cartItemId: x.cartItemId,\n                    name: data.products[i].name,\n                    slug: data.products[i].slug,\n                    face: data.products[i].face,\n                    category: data.products[i].category,\n                    image: data.products[i].image,\n                    price: data.products[i].price,\n                    qty: x.qty\n                }]\n                : payload\n            )\n        }\n        dispatch({\n            type: \"CART_DETAILS_ITEM\",\n            payload: payload\n        });    \n    } catch (error) {\n        //\n    }\n}\n\nconst setQty = (cartItemId, qty) => (dispatch, getState) => {\n    try {\n        dispatch({\n        type: \"CART_SET_QTY\",\n        payload: {\n            cartItemId: cartItemId,\n            qty\n        }\n        });    \n        dispatch({ type: \"CHECK_QTY_ITEM_NULL\" })\n        const { cart: { cookieItems } } = getState();\n        Cookie.set(\"cartItems\", JSON.stringify(cookieItems));\n    } catch (error) {\n        //\n    }\n}\n\nconst removeFromCart = (product) => (dispatch, getState) => {\n    dispatch({\n        type: \"CART_REMOVE_ITEM\",\n        payload: {\n            cartItemId: product.cartItemId,\n        }\n    });\n    const { cart: { cookieItems } } = getState();\n\n    Cookie.set(\"cartItems\", JSON.stringify(cookieItems));\n}\n\nconst saveShipping = (data) => (dispatch, getState) => {\n    dispatch({\n        type: \"CART_SAVE_SHIPPING\",\n        payload: data,\n    });\n    const { cart: { shipping } } = getState();\n    console.log(shipping)\n    Cookie.set(\"shipping\", JSON.stringify(shipping));\n}\n\nconst savePayment = (data) => (dispatch, getState) => {\n    dispatch({\n        type: \"CART_SAVE_PAYMENT\",\n        payload: data,\n    });\n    const { cart: { payment } } = getState();\n    Cookie.set(\"payment\", JSON.stringify(payment));\n}\n\nconst resetCart = () => (dispatch, getState) => {\n    dispatch({ type: \"CART_RESET_ITEMS\" })\n    const { cart: { cookieItems } } = getState();\n    Cookie.set(\"cartItems\", JSON.stringify(cookieItems));\n}\n\nexport { addToCart, removeFromCart, setQty, saveShipping, savePayment, resetCart, recupCartDetails };","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Cart/Cart.js",["249","250","251","252"],"import React, { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { removeFromCart, addToCart, setQty } from '../../actions/cartActions'\nimport { IoMdAdd } from \"react-icons/io\"\nimport { BiMinus } from \"react-icons/bi\"\nimport { GoTrashcan } from 'react-icons/go'\nimport '../css/Cart.css'\n\nexport default function Cart({isVisible, setIsVisible}) {\n\n    const dispatch = useDispatch();\n\n    const cart = useSelector((state) => state.cart);\n    const { cartItems, shipping, payment, cookieItems} = cart;\n        \n    const totalCart = () => {\n        return cartItems.reduce((total, cartItems) => {\n            return total + (cartItems.price * cartItems.qty)\n        }, 0).toFixed(2)\n    }\n\n    const numbItemsInCart = () => {\n        return cartItems.reduce((total, cartItems) => {\n        return total + (1 * cartItems.qty)\n        }, 0)\n    }\n\n    const itemsNumb = numbItemsInCart();\n    const tva = ((Number(totalCart()) / 120) * 20).toFixed(2);\n    const shippingPrice = Number(totalCart()) > 50 ? 0 : 4.99;\n    const total = (Number(totalCart()) + Number(shippingPrice)).toFixed(2);\n\n    useEffect(() => {\n        return () => {\n        }\n    }, [])\n\n    const removeCartItem = (product) => {\n        dispatch(removeFromCart(product))\n    }\n\n    return (\n        <div className=\"cart-component row flex-column align-items-center p-0\">\n            <h3 className=\"cart-title px-2 m-0 my-2 font-weight-normal col-12 text-left\">Votre panier <span>({numbItemsInCart()} article{numbItemsInCart() > 1 ? \"s\" : \"\"})</span></h3>\n            {\n            cartItems.length > 0 ?\n            <Fragment>\n            <table className=\"table table-bordered text-left m-0\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Produit{numbItemsInCart() > 1 ? \"s\" : \"\"} <span className=\"font-weight-light\">({itemsNumb} article{numbItemsInCart() > 1 ? \"s\" : \"\"})</span></th>\n                        <th scope=\"col\">Total</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {                \n                    cartItems.map((product) => ( \n                        product.qty > 0 &&\n                        <tr className=\"table-product-row\" key={product.cartItemId}>\n                            <td className=\"cart-product-row d-flex align-items-center justify-content-around\">\n                                <div className='cart-product-name'>\n                                    <Link to={`/modele/${product.slug}/${product.person}-pers`} className=\"text-left text-uppercase\">{product.name}\n                                        <span className=\"font-weight-light text-lowercase\"><br/>- {product.person} pers.</span>\n                                    </Link >\n                                </div>\n                                <span className=\"span-qty font-weight-bold\">(x {product.qty})</span>\n                                <div className=\"cart-product-qty d-flex justify-content-around align-items-center p-0\">\n                                    <IoMdAdd size={40} className=\"add-icon\" onClick={() => dispatch(setQty(product.cartItemId, 1))}/>\n                                    <BiMinus size={40} className=\"minus-icon\" onClick={() => dispatch(setQty(product.cartItemId, -1))}/>\n                                </div>\n                            </td>\n                            <td className=\"p-0 text-center\">\n                                <span>{product.price}€</span>\n                                <GoTrashcan size={22} className=\"icon-close ml-3\" onClick={() => removeCartItem(product)} />\n                            </td>\n                        </tr>\n                        ))\n                    }\n\n                    <tr>\n                        <th scope=\"row\">Sous-total</th>\n                        <td>{Number(total - shippingPrice).toFixed(2)}€</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Expédition</th>\n                        <td>{Number(shippingPrice).toFixed(2)}€</td>\n                    </tr>\n                    <tr>\n                        <th className=\"table-total-th\" scope=\"row\">Total</th>\n                        <td className=\"table-total-td font-weight-bold\">{Number(total).toFixed(2)}€ <br/><span className=\"span-tva\">(dont {tva}€ TVA)</span></td>\n                    </tr>\n                </tbody>\n            </table>     \n            <div className=\"cart-total col-12 p-0\"><Link  to=\"/connexion?redirect=commande\" onClick={() => setIsVisible(!isVisible)} className=\"btn btn-dark border-0 text-white rounded-0 p-3 text-uppercase col-12\">Valider mon panier</Link></div>\n            </Fragment>\n            :\n            <h4 className=\"empty-cart col-12 m-0 my-5 font-weight-light text-center\">Votre panier est vide.</h4>\n        } \n\n\n\n\n\n\n\n\n\n\n\n{/*         {\n            cartItems.length > 0 ?\n            <div className=\"col-12 p-0\">\n                <div className=\"cart-item-container p-0 mt-2 mb-3\">\n                    {                \n                        cartItems.map((product) => (    \n                        <CartItems product={product} key={product._id}/>\n                        ))\n                    }\n                </div>\n                <div className=\"cart-total col-12\"><h4 className=\"text-left font-weight-lighter\"><span className=\"font-weight-bold\">TVA : </span>{ tva }€</h4></div>\n                <div className=\"cart-total col-12\"><h4 className=\"text-left font-weight-lighter\"><span className=\"font-weight-bold\">Livraison : </span>{ shippingPrice }€</h4></div>\n                <div className=\"cart-total col-12\"><h4 className=\"text-left font-weight-lighter\"><span className=\"font-weight-bold\">Total : </span>{ total }€ TTC</h4></div>\n                <div className=\"cart-total col-12 p-0\"><Link  to=\"/connexion?redirect=shipping\"  to=\"/commande\" onClick={() => setIsVisible(!isVisible)} className=\"btn btn-dark text-white rounded-0 p-3 text-uppercase col-12\">Valider mon panier</Link></div>\n                </div>\n            :\n            <h4 className=\"empty-cart col-12 m-0 my-5 font-weight-light text-center\">Votre panier est vide.</h4>\n        } */}\n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Cart/useVisible.js",[],"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Modele/Modele_Page.js",["253","254","255","256","257","258","259"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { productDetails, resetListProducts } from '../../actions/productActions';\nimport { FiShoppingCart } from 'react-icons/fi'\nimport { addToCart } from '../../actions/cartActions';\nimport '../css/Modele_Page.css'\nimport { Link } from 'react-router-dom';\nimport { ImSpinner8 } from \"react-icons/im\"\nimport Modele_Card from './Modele_Card';\n\nexport default function Modele_Page(props) {\n\n\n    const productId = props.match.params.id.split('=')[1];\n    const details = useSelector((state) => state.detailsProduct);\n    const { loading, product, similarProducts, error } = details;\n    const [add, setAdd] = useState(false)\n\n    const dispatch = useDispatch();\n\n    const handleAddToCart = () => {\n        addItem();\n        dispatch(addToCart(product._id, 1));\n    }\n\n    const addItem = () => {\n        setAdd(true);\n        setTimeout(() => setAdd(false), 3000);\n    }\n\n    useEffect(() => {\n        dispatch(productDetails(productId, props.match.params.slug))\n        return () => {\n        }\n    }, [productId])\n\n    return ( loading ? <div className=\"loading-spinner-div d-flex justify-content-center w-100\">{/* <ImSpinner8 className=\"loading-spinner my-3\" size={60}/> */}</div> :\n        <div className=\"model-page-container\">\n            { add ? \n                <div className=\"add-test rounded d-flex justify-content-center align-items-center\">\n                    <div className=\"add-border rounded border-success\">\n                        <h5 className=\"m-0 text-success\">Ajouté au panier !</h5>\n                    </div>\n                </div>\n                :\n                null\n            }\n{/*             <div className=\"row\">\n                {loading && <h4 className=\"text-center mx-auto\">Chargement...</h4>}\n                {error && <h4 className=\"text-center mx-auto\">{error}</h4>}\n            </div> */}\n\n            <div className=\"modele-page-content w-100 mt-5\">\n                <div className=\"modele-page-img col-md-4 col-12 p-2\">\n                    <img src={product.image}></img>\n                </div>\n                <div className=\"modele-page-details col-md-5 col-12 py-5 d-flex flex-column align-items-start justify-content-around\">\n                    <div className=\"row text-left m-0\"><h2 className=\"m-0 font-weight-bold text-uppercase\">{product.name.split('-')[0]}<span className='font-weight-lighter'> - {product.name.split('-')[1]}</span></h2></div>\n{/*                     <div className=\"row text-left category-style\">\n                    {product.category.style.map((category, i ) => (\n                        <span key={i} className=\"badge badge-warning m-0 p-2 rounded-0 text-uppercase\">{category}</span>\n                    ))}\n                    </div> */}\n                    <div className=\"row text-left m-0\"><h2 className=\"m-0 font-weight-lighter text-lowercase\">{product.face} pers.</h2></div>\n                    <div className=\"row text-left category-colors\">\n                    {product.category.colors.map((color, i ) => (\n                        <div key={i} className=\"m-0 mr-1 p-2 text-uppercase\" style={{ backgroundColor: `${color}`, height:\"1.5rem\", width:\"1.5rem\", borderRadius:\"50%\"}}></div>\n                    ))}\n                    </div>\n                    <div className=\"row text-left\">\n                        <h2 className=\"m-0 price\">{String(product.price).split('.')[0]}<span>.{String(product.price).split('.')[1]}€</span></h2>\n                    </div>\n                    <div className=\"d-flex justify-content-between align-items-center w-100\">\n                        <div className=\"modele-page-cart-button row justify-content-center align-items-center my-4\" onClick={() => handleAddToCart()}>\n                            <FiShoppingCart className=\"cart-icon text-white\" size={20} />\n                            <h6 className=\"add-to-cart text-uppercase m-0 text-white ml-4\">Ajouter au panier</h6>\n                        </div>\n                        <Link to={\"#\"} onClick={() => props.history.goBack()}>Retour</Link>\n                    </div>\n                    <div className=\"row text-left\"><span className=\"font-weight-bold text-uppercase\">Description : </span><br/><p className=\"m-0 \">{product.description}</p></div>\n                </div>\n            </div>\n            \n            {similarProducts.length > 0 &&\n                <Fragment>\n                <h2 className='text-left ml-5 mt-5'><u>Produits apparentés</u></h2>\n                <div className='similar-products-container'>\n                    <div className=\"similar-products mt-5 mb-5\">\n                        {similarProducts.map((numb, i) => {\n                            if (i < 3) {\n                                return <Modele_Card key={i} product={numb}/>\n                            }\n                        })}\n                    </div>\n                </div>\n                </Fragment>\n            }\n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Modele/Modeles_Page.js",["260","261","262","263","264","265","266","267","268","269"],"import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { countCollection } from '../../actions/dataActions';\nimport { countProducts, listProducts, resetListProducts } from '../../actions/productActions';\nimport Modele_Card from './Modele_Card';\nimport { ImSpinner8 } from \"react-icons/im\";\nimport '../css/Modeles_Page.css'\nimport Pagination from '../Pagination';\nimport Filter from './Filter';\n\nexport default function Modeles_Page(props) {\n\n    const productList = useSelector(state => state.listProducts);\n    const { error, loading, products } = productList;\n    const dispatch = useDispatch();\n\n    /* Filter */\n    const { \n        page = 'page=1', \n        style = 'style=all', \n        size = 'size=all',\n        max = 'max=100',\n        min = 'min=0'\n    } = useParams();\n    const test = useParams();\n\n    const pageQuery = Number(page.split(\"=\")[1]);\n    const styleQuery = style.split(\"=\")[1];\n    const sizeQuery = size.split(\"=\")[1]; \n    const maxQuery = max.split(\"=\")[1]; \n    const minQuery = min.split(\"=\")[1];\n\n    /** Pagination */ \n    const countDb = useSelector(state => state.countData)\n    const { count } = countDb;\n    const totalProductsInDb = count.count;\n    const per_page = 9;\n    const skip = (pageQuery * per_page) - per_page\n    \n    useEffect(() => {\n        console.log(products)\n        dispatch(countProducts(styleQuery, sizeQuery, null, maxQuery, minQuery));\n        dispatch(listProducts(skip, per_page, styleQuery, sizeQuery, null, maxQuery, minQuery));\n        return () => {\n        dispatch(resetListProducts());\n        };\n    }, [pageQuery, styleQuery, sizeQuery, maxQuery, minQuery]);\n    \n    return (\n        <div className=\"container modeles-page-container\">\n            <div className=\"modeles-page-content\">\n                <h2 className=\"text-left font-weight-light ml-5 mt-5\">Nos modèles</h2>\n                <div className=\"row justify-content-center my-5\">\n                    <div className='filter-style pop-art-filter col-md-3 col-10' onClick={() => props.history.push('/modeles/page=1/style=pop%20art/size=all/max=100/min=0')}>\n                        <img src=\"/photos-site/pop-art.png\"></img>\n                        <div className='div-title col-11 m-auto d-flex align-items-center'>\n                            <h4 className='m-auto text-white p-2'>Pop art</h4>\n                        </div>\n                    </div>\n                    <div className='filter-style cartoon-filter col-md-3 col-10' onClick={() => props.history.push('/modeles/page=1/style=cartoon/size=all/max=100/min=0')}>\n                        <img src=\"/photos-site/tete-cartoon-1.png\"></img>\n                        <div className='div-title col-11 m-auto d-flex align-items-center'>\n                            <h4 className='m-auto text-white p-2'>Cartoon</h4>\n                        </div>\n                    </div>\n                    <div className='filter-style funny-filter col-md-3 col-10' onClick={() => props.history.push('/modeles/page=1/style=autre/size=all/max=100/min=0')}>\n                        <img src=\"/photos-site/portrait-design.jpeg\"></img>\n                        <div className='div-title col-11 m-auto d-flex align-items-center'>\n                            <h4 className='m-auto text-white p-2'>Autres</h4>\n                        </div>\n                    </div>\n                </div>\n                <Filter props={props} productStyle={styleQuery} productSize={sizeQuery} />\n                <div className=\"row\">\n                    {loading ? <div className=\"loading-spinner-div d-flex justify-content-center w-100\">{/* <ImSpinner8 className=\"loading-spinner my-3\" size={60}/> */}</div> : null }\n                    {error && <h4 className=\"text-center mx-auto\">{error}</h4>}\n                </div>\n                <div className=\"row d-flex justify-content-between align-items-start flex-wrap\">\n                    {\n                    products.map(product => (\n                        <div className=\"col-md-4 col-sm-6 col-12 mb-5 d-flex justify-content-center align-items-center\" key={product._id}>\n                            <Modele_Card product={product}/>\n                        </div>\n                    ))\n                    }\n                </div>\n                <Pagination url={props.location.pathname} pageName={\"modeles\"} page={pageQuery} totalInDb={totalProductsInDb} per_page={per_page}/>\n            </div>\n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Connexion/Connexion.js",["270","271","272"],"import React, { useEffect, useState } from 'react'\nimport Register_Page from './Register_Page';\nimport Signin_Page from './Signin_Page';\nimport '../css/Connexion.css'\nimport { useSelector } from 'react-redux';\n\nexport default function Connexion(props) {\n\n  const userSignin = useSelector(state => state.userSignin);\n  const { userInfo } = userSignin;\n  const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\n\n\tconst [mode, setMode] = useState('sign-in');\n\n  useEffect(() => {\n      if (userInfo) {\n        props.history.push(redirect);\n      }\n      return () => {\n        //\n      };\n  }, [userInfo]);\n  \n\treturn (\n    <div className={\"container-page \" + (mode === \"sign-up\" ? \"sign-up-mode\" : \"\")}>\n      <div className=\"forms-container\">\n        <div className=\"signin-signup\">\n\t\t  <Signin_Page/>\n\t\t  <Register_Page/>\n        </div>\n      </div>\n\n      <div className=\"panels-container\">\n        <div className=\"panel left-panel d-flex flex-column align-items-center\">\n          <div className=\"content\">\n            <h3>1ère visite ?</h3>\n            <p>\n              Créez rapidement votre compte en cliquant sur le bouton ci dessous.\n            </p>\n            <button className=\"btn transparent rounded-0 text-uppercase\" onClick={() => setMode(\"sign-up\")} id=\"sign-up-btn\">\n              M'inscrire\n            </button>\n          </div>\n{/*           <img src=\"/photos-site/tableau.png\" className=\"image cartoon-tab\" id=\"cartoon-tab\" alt=\"\" />\n */}        </div>\n        <div className=\"panel right-panel d-flex flex-column align-items-center\">\n          <div className=\"content\">\n            <h3>Déjà venu ?</h3>\n            <p>\n              Accédez à votre compte en cliquant sur le bouton ci dessous.\n            </p>\n            <button className=\"btn transparent rounded-0 text-uppercase\" onClick={() => setMode(\"sign-in\")} id=\"sign-in-btn\">\n              Me connecter\n            </button>\n          </div>\n{/*           <img src=\"/photos-site/painttest.svg\" className=\"image\" alt=\"\" />\n */}        </div>\n      </div>\n    </div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Order/PlaceOrder_Page.js",["273","274","275","276","277","278"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeFromCart, savePayment, saveShipping } from '../../actions/cartActions';\nimport { useForm } from \"react-hook-form\";\nimport {PayPalButton} from 'react-paypal-button-v2';\nimport \"../css/Order.css\"\nimport { CgDanger } from \"react-icons/cg\"\nimport { GoTrashcan } from 'react-icons/go'\nimport { createOrder, resetOrder } from '../../actions/orderActions';\nimport { CardNumberElement, CardExpiryElement, CardCvcElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport Axios from 'axios';\nimport { FiCheckSquare } from \"react-icons/fi\";\nimport { ImSpinner8 } from \"react-icons/im\"\n\nexport default function PlaceOrder_Page(props) {\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n    \n    const orderCreate = useSelector((state) => state.orderCreate);\n    const { success, order } = orderCreate;\n\n    const dispatch = useDispatch();\n    const [modal, setModal] = useState(false)\n    const [orderIsValidate, setOrderIsValidate] = useState(false);////// REMETTRE A FALSE\n\n/* CARTITEMS */\n    const cart = useSelector((state) => state.cart);\n    const { cartItems, shipping, payment } = cart;\n\n    const removeItemFromCart = (product) => {\n        dispatch(removeFromCart(product))\n    }\n    const cancelOrder = () => {\n        console.log(\"Annuler la commande\") ///////////////////\n    }\n/* ///////////////////////////// */\n/* SHIPPING */\n    const { register, handleSubmit, errors } = useForm();\n    const onSubmit = data => {\n        setOrderIsValidate(true)\n        //console.log(data)\n        dispatch(saveShipping({ address: data.address, city: data.city, postalCode: data.postalCode, country: data.country }));\n        //dispatch(savePayment({ paymentMethod }))\n    };\n/* ///////////////////////////// */\n/* ORDER */\n    const totalItemsInCart = () => {\n        return cartItems.reduce((total, cartItems) => {\n            return total + (cartItems.price * cartItems.qty)\n        }, 0).toFixed(2)\n    }\n    const numbItemsInCart = () => {\n        return cartItems.reduce((total, cartItems) => {\n        return total + (1 * cartItems.qty)\n        }, 0)\n    }\n    const itemsNumb = numbItemsInCart();\n    const tva = ((Number(totalItemsInCart()) / 120) * 20).toFixed(2);\n    const shippingPrice = Number(totalItemsInCart()) > 50 ? 0 : 4.99;\n    const total = ((Number(totalItemsInCart()) + Number(shippingPrice))).toFixed(2);\n/* ///////////////////////////// */\n/* PAIEMENT STRIPE */\n    const stripe = useStripe();\n    const element = useElements();\n    const [isProcessingCard, setIsProcessingCard] = useState(false);\n    const [paymentMethod, setPaymentMethod] = useState(''); \n    const [checkErrorMessage, setCheckErrorMessage] = useState('');\n\n    const handlerErrors = (e) => {\n        if (e.error) {\n            return setCheckErrorMessage(e.error.message)\n        }\n        setCheckErrorMessage('');\n    }\n    \n    const onSubmitCheckout = async (e) => {\n        e.preventDefault();\n        setIsProcessingCard(true);\n        const amount = Number(total);\n\n        try {\n            \n            //Got our client secret\n            const paymentIntent = await Axios.post('/api/orders/checkout', { amount: amount * 100 })\n\n            //Create PaymentMethod Object\n            const paymentMethodObject = await stripe.createPaymentMethod({\n                type: \"card\",\n                card: element.getElement('cardNumber'),\n                billing_details: {\n                    name: \"Youssef\",\n                }\n            })\n\n            //Confirm Payment Method\n            const confirmPayment = await stripe.confirmCardPayment(paymentIntent.data, {\n                payment_method: paymentMethodObject.paymentMethod.id\n            })\n\n            if (confirmPayment) {\n                setIsProcessingCard(false);\n                dispatch(createOrder({\n                    orderItems: cartItems, \n                    shipping, \n                    payment : { paymentMethod : paymentMethod }, \n                    itemsNumb, \n                    tva, \n                    shippingPrice, \n                    total\n                }))\n                \n                //setTimeout(() => props.history.push(`/envoyer-photos/${order._id}`), 4000)\n            }\n        } catch (error) {\n            setIsProcessingCard(false);\n        }\n    }\n/* ///////////////////////////// */\n/* PAIEMENT PAYPAL */\n    const [isProcessingPaypal, setIsProcessingPaypal] = useState(false);\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const handleSuccessPayment = (paymentResult) => {\n        dispatch(createOrder({\n            orderItems: cartItems,\n            shipping, \n            payment : { paymentMethod : paymentMethod }, \n            itemsNumb, \n            tva, \n            shippingPrice, \n            total\n        }))\n        \n    }\n    \n    const setPayment = () => {\n        setIsProcessingPaypal(true);\n    }\n\n    const cancelPayment = () => {\n        setIsProcessingPaypal(false); \n    }\n/* ///////////////////////////// */\n    \n    useEffect(() => {\n        if (!userInfo) {\n            props.history.push('/connexion?redirect=commande')\n        }\n        const addPaypalScript = async () => {\n            const { data } = await Axios.get('/api/config/paypal');\n            const script = document.createElement('script');\n            script.type = \"text/javascript\";\n            script.src = `https://www.paypal.com/sdk/js?client-id=${data}&disable-funding=credit,card`;\n            script.async = true;\n            script.onload = () => {\n                setSdkReady(true);\n            };\n            document.body.appendChild(script);\n        }\n        if (!window.paypal) {\n            addPaypalScript();\n        } else {\n            setSdkReady(true)\n        }\n        if (order) {\n            if (Object.entries(order).length !== 0) {\n                setTimeout(() => props.history.push(`/envoyer-photos/${order._id}`), 4000)\n            }\n        }\n        if (success) {\n            setModal(true)\n        }\n        return () => {\n        }\n    }, [userInfo, orderIsValidate, sdkReady, order, cartItems, success])\n\n    return (\n        <div className=\"checkout-page container\">\n            { modal ? \n                <div className=\"modal-background\">\n                    <div className=\"modal-test m-auto rounded d-flex flex-column justify-content-center align-items-center p-3\">\n                        <h3>Votre commande a bien été validée !</h3>\n                        <div className=\"order-check-icon text-success my-3 d-flex justify-content-center w-100\"><FiCheckSquare size={60}/></div>\n                        <p>Veuillez patienter, vous allez être redirigé...</p>\n                    </div>\n                </div>\n                :\n                null\n            }\n            <h2 className=\"text-left\">Validation de la commande</h2>\n            <div className=\"cart-resume row align-items-start p-5\">\n                <table className=\"table table-bordered text-left\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\" ></th>\n                            <th scope=\"col\" >Produit</th>\n                            <th scope=\"col\" >Prix</th>\n                            <th scope=\"col\" >Quantité</th>\n                            <th scope=\"col\" >Total</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {                \n                        cartItems.map((product) => (  \n                            <tr key={product.cartItemId}>\n                                <td className=\"text-danger\"><GoTrashcan style={{cursor:\"pointer\"}} size={20} onClick={() => removeItemFromCart(product)}/></td>\n                                <td>{product.name}</td>\n                                <td>{product.price}€</td>\n                                <td>{product.qty}</td>\n                                <td>{(product.price * product.qty).toFixed(2)}€</td>\n                            </tr>\n                            ))\n                        }\n                    </tbody>\n                </table>\n                <div className=\"col-12 d-flex flex-column p-0\">\n                    <button className=\"py-3 text-uppercase btn btn-dark rounded-0 font-weight-light ml-auto\">Poursuivre mes achats</button>\n                </div>\n            </div>\n            <div className=\"order-content row mt-5\">\n                <div className=\"shipping-form col-7\">\n                    <form id=\"shipping-form\" className=\"d-flex flex-column p-0\" onSubmit={handleSubmit(onSubmit)}>\n                        <h4 className=\"text-left px-3 font-weight-light\">Détails de livraison</h4>\n                        <div className=\"input-group row\">\n                            <div className=\"col-8 d-flex flex-column my-2\">\n                                <label htmlFor=\"lastName\" className=\"text-left\">Nom <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.lastName ? \"border-danger\" : \"\")}\n                                    defaultValue=\"\"\n                                    name=\"lastName\"\n                                    placeholder=\"\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.lastName && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre nom.</p></div>}\n                            </div>\n                            <div className=\"col-4 d-flex flex-column my-2\">\n                                <label htmlFor=\"firstName\" className=\"text-left\">Prénom <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.firstName ? \"border-danger\" : \"\")}\n                                    defaultValue=\"\"\n                                    name=\"firstName\"\n                                    placeholder=\"\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.firstName && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre prénom.</p></div>}\n                            </div>\n                        </div>\n                        <div className=\"input-group row\">\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"address\" className=\"text-left\">Numéro et nom de rue <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.address ? \"border-danger\" : \"\")}\n                                    defaultValue={ shipping.address ? shipping.address : \"\"}\n                                    name=\"address\"\n                                    placeholder=\"\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.address && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre adresse.</p></div>}\n                            </div>\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"addressDetails\" className=\"text-left\"></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.addressDetails ? \"border-danger\" : \"\")}\n                                    defaultValue=\"\"\n                                    name=\"addressDetails\"\n                                    placeholder=\"Appartement, bureau, etc. (optionnel) \"\n                                    ref={register}\n                                />\n                            </div>\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"postalCode\" className=\"text-left\">Code postal <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + (errors.postalCode ? \"border-danger\" : \"\")}\n                                    defaultValue={ shipping.postalCode ? shipping.postalCode : \"\"}\n                                    name=\"postalCode\"\n                                    type=\"number\"\n                                    ref={register({ required: true })}\n\n                                />\n                                {errors.postalCode && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de saisir votre code postal.</p></div>}\n                            </div>\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"city\" className=\"text-left\">Ville <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.city ? \"border-danger\" : \"\")}\n                                    defaultValue={ shipping.city ? shipping.city : \"\"}\n                                    name=\"city\"\n                                    placeholder=\"\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.city && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre ville.</p></div>}\n                            </div>\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"country\" className=\"text-left\">Ville <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.country ? \"border-danger\" : \"\")}\n                                    defaultValue={ shipping.country ? shipping.country : \"\"}\n                                    name=\"country\"\n                                    placeholder=\"\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.country && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre pays.</p></div>}\n                            </div>\n                        </div>\n                        <div className=\"input-group row\">\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"phone\" className=\"text-left\">Téléphone <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.phone ? \"border-danger\" : \"\")}\n                                    defaultValue=\"\"\n                                    name=\"phone\"\n                                    placeholder=\"\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.phone && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre numéro de téléphone.</p></div>}\n                            </div>\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"email\" className=\"text-left\">Adresse de messagerie <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.email ? \"border-danger\" : \"\")}\n                                    defaultValue=\"\"\n                                    name=\"email\"\n                                    type=\"email\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.email && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre adresse de messagerie.</p></div>}\n                            </div>\n                        </div>\n  \n                    </form>\n                </div>        \n                <div className=\"order-resume col-5\">\n                    <h4 className=\"text-left font-weight-light\">Votre commande</h4>\n                    <table className=\"table table-bordered text-left\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\" >Produit{numbItemsInCart() > 1 ? \"s\" : \"\"} <span className=\"font-weight-light\">({itemsNumb} articles)</span></th>\n                                <th scope=\"col\" >Total</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {                \n                            cartItems.map((product) => (  \n                                <tr className=\"table-product-row\" key={product.cartItemId}>\n                                    <td >{product.name} <span className=\"span-qty font-weight-bold\">(x {product.qty})</span></td>\n                                    <td >{product.price.toFixed(2)}€</td>\n                                </tr>\n                                ))\n                            }\n\n                            <tr>\n                                <th scope=\"row\">Sous-total</th>\n                                <td>{Number(total - shippingPrice).toFixed(2)}€</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\">Expédition</th>\n                                <td>{shippingPrice.toFixed(2)}€</td>\n                            </tr>\n                            <tr>\n                                <th className=\"table-total-th\" scope=\"row\">Total</th>\n                                <td className=\"table-total-td font-weight-bold\">{Number(total).toFixed(2)}€ <br/><span className=\"span-tva\">(dont {Number(tva).toFixed(2)}€ TVA)</span></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    \n                    <div className=\"input-group row\">\n                        {\n                        orderIsValidate &&\n                        <div className=\"order-pay-div col-12 p-0\">\n                            <div onClick={() => setPaymentMethod(\"Paypal\")} className=\"paypal-button-div d-flex align-items-center p-3\">\n                                <div className=\"paypal-icons d-flex align-items-center justify-content-around w-100\">\n                                    <h6 className=\"m-0 mr-auto\">Paypal</h6>\n                                    {\n                                        isProcessingPaypal &&\n                                        <div className=\"loading-spinner-div d-flex justify-content-center\"><ImSpinner8 className=\"loading-spinner my-3\" size={40} /></div>\n                                    }\n                                    {\n                                    paymentMethod === \"Paypal\" &&      \n                                        sdkReady &&\n                                            <PayPalButton\n                                                amount={total}\n                                                shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\n                                                onClick={() => setPayment()}\n                                                onSuccess={handleSuccessPayment} \n                                                onCancel={cancelPayment}\n                                            />        \n                                    }\n                                </div>\n                            </div>\n                            <div onClick={() => setPaymentMethod(\"Carte bancaire\")} className=\"credit-card-button d-flex flex-column justify-content-center align-items-center p-3\">\n                                <div className=\"credit-card-icons d-flex align-items-center w-100\">\n                                    <h6 className=\"m-0 mr-auto\">Carte bancaire</h6>\n                                    <img src=\"../../../images/creditCards/mc.png\"/>\n                                    <img src=\"../../../images/creditCards/visa.png\"/>\n                                </div>\n                                {\n                                paymentMethod === \"Carte bancaire\" && \n                                    <div className=\"credit-card-input d-flex flex-wrap align-items-center justify-content-around my-3 w-100\">\n                                        <form className=\"d-flex flex-wrap align-items-center justify-content-center p-0 w-100\" onSubmit={onSubmitCheckout}>\n                                        <div className=\"col-12  \">\n                                            <p className=\"mx-auto col-11 text-left px-0 mb-1\">Numéro de carte 4242 4242 4242 4242<span className=\"text-danger\">*</span></p>\n                                                <CardNumberElement  \n                                                className={\"border col-11 p-2 bg-white mx-auto \" + (!checkErrorMessage &&  \"mb-4\")}\n                                                options={{\n                                                    style: {\n                                                        base: {\n                                                            fontSize: '16px',\n                                                            color: '#424770',\n                                                            '::placeholder': {\n                                                                fontWeight: \"200\",\n                                                                color: '#aab7c4',\n                                                            },\n                                                        },\n                                                        invalid: {\n                                                            color: '#9e2146',\n                                                        },\n                                                    },\n                                                }}\n                                                onChange={handlerErrors}\n                                                />\n                                            {checkErrorMessage && <div className=\"d-flex align-items-center text-danger mb-3 my-1\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">{checkErrorMessage}</p></div>}\n                                        </div>\n                                        <div className=\"d-flex col-12\">\n                                            <div className=\"d-flex flex-column col-6\">\n                                                <p className=\"text-left px-0 mb-1\">Date d'expiration <span className=\"text-danger\">*</span></p>\n                                                    <CardExpiryElement\n                                                    className=\"border col-12 p-2 mr-auto bg-white mb-3\"\n                                                    options={{\n                                                        style: {\n                                                            base: {\n                                                                fontSize: '16px',\n                                                                color: '#424770',\n                                                                '::placeholder': {\n                                                                    fontWeight: \"200\",\n                                                                    color: '#aab7c4',\n                                                                },\n                                                            },\n                                                            invalid: {\n                                                                color: '#9e2146',\n                                                            },\n                                                        },\n                                                    }}\n                                                    />\n                                            </div>\n                                            <div className=\"d-flex flex-column col-6\">\n                                                <p className=\"text-left px-0 mb-1\">Cryptogramme visuel <span className=\"text-danger\">*</span></p>\n                                                    <CardCvcElement\n                                                    className=\"border col-12 p-2 bg-white mb-3\"\n                                                    options={{\n                                                        style: {\n                                                            base: {\n                                                                fontSize: '16px',\n                                                                color: '#424770',\n                                                                '::placeholder': {\n                                                                    fontWeight: \"200\",\n                                                                    color: '#aab7c4',\n                                                                },\n                                                            },\n                                                            invalid: {\n                                                                color: '#9e2146',\n                                                            },\n                                                        },\n                                                    }}\n                                                    />\n                                            </div> \n                                        </div>\n                                        <div className=\"d-flex flex-column col-11\">\n                                            <button disabled={isProcessingCard} className=\"btn btn-dark rounded-0 col-12 my-3\" type=\"submit\">{!isProcessingCard ? \"Payer\" : \"Paiement en cours...\"}</button>\n                                        </div> \n                                        {\n                                            isProcessingCard &&\n                                            <div className=\"loading-spinner-div d-flex justify-content-center col-12\"><ImSpinner8 className=\"loading-spinner my-3\" size={40} /></div>\n                                        }\n                                        </form>                                     \n                                    </div>\n                                }\n                            </div>\n                        </div>\n                        }\n                        <div className=\"col-12 d-flex flex-column p-0\">\n                            {\n                            orderIsValidate ?\n                            <button className=\"cancel-order-button py-3 mt-3 text-uppercase btn btn-outline-dark rounded-0 font-weight-light\" onClick={() => cancelOrder()} >Annuler ma commande</button>\n                            :\n                            <button form=\"shipping-form\" className=\"py-3 text-uppercase btn btn-dark rounded-0 font-weight-light\" type=\"submit\">Valider ma commande</button>\n                            }\n                        </div>\n                    </div> \n                </div>\n            </div>\n        </div>\n    )   \n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Order/Upload_Page.js",["279","280","281","282","283"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { detailsOrder, resetOrder } from '../../actions/orderActions'\nimport { ImSpinner8 } from \"react-icons/im\"\nimport '../css/Upload_Page.css';\nimport Upload_Part from './components/Upload_Part';\nimport { resetCart } from '../../actions/cartActions';\nimport { AiOutlineArrowRight } from 'react-icons/ai';\nimport { TiTick } from 'react-icons/ti';\nimport { ImCross } from 'react-icons/im';\nimport { CgDanger } from 'react-icons/cg';\nimport { getInfos } from '../../actions/userActions';\nimport { Link } from 'react-router-dom';\n\nexport default function Upload_Page(props) {\n\n\tconst orderDetails = useSelector(state => state.orderDetails);\n\tconst { loading, order } = orderDetails;\n\n\tconst [ orderPhotoToUpload, setOrderPhotoToUpload ] = useState(null)\n\tconst [allUpload, setAllUpload] = useState(false)\n\t\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (order) {\n\t\t\tsetOrderPhotoToUpload(order.orderItems.filter( x => x.photoUpload === false))\n\t\t} else {\n\t\t\tdispatch(resetCart());\n\t\t\tdispatch(detailsOrder(props.match.params.id));\n\t\t}\n\t\tif (orderPhotoToUpload) {\n\t\t\tif (orderPhotoToUpload.length === 0) {\n\t\t\t\tsetAllUpload(true)\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t\tdispatch(resetOrder())\n\t\t}\n\t}, [orderPhotoToUpload])\n\n\treturn ( loading ? <div className=\"loading-spinner-div d-flex justify-content-center\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :  \n\t\t<div className=\"upload-container py-2 container d-flex flex-column align-items-center mb-5\">\n\t\t\t<div className=\"upload-advice d-flex w-100 align-items-around my-5 border-bottom pb-5\">\n\t\t\t\t<div className=\"d-flex flex-column justify-content-center align-items-center col-8\">\n\t\t\t\t\t<div className=\"bad-way-upload d-flex align-items-center justify-content-around pb-3\">\n\t\t\t\t\t\t<div className=\"bad-way-photo\">\n\t\t\t\t\t\t\t<img src=\"/photos-site/bad-portrait.png\"></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<AiOutlineArrowRight size={60} className=\"cross\"/>\n\t\t\t\t\t\t<ImCross size={40} className=\"sign-icon text-danger p-5\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"good-way-upload d-flex align-items-center justify-content-around\">\n\t\t\t\t\t\t<div className=\"good-way-photo\">\n\t\t\t\t\t\t\t<img src=\"/photos-site/good-portrait.png\"></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<AiOutlineArrowRight size={60} className=\"cross\"/>\n\t\t\t\t\t\t<TiTick size={140} className=\"sign-icon text-success p-3\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"advice-list text-left col-4 d-flex flex-column justify-content-center\">\n\t\t\t\t\t<h3><CgDanger className=\"text-danger mr-1\"/>Rappel</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Evitez les photos sombres.</li>\n\t\t\t\t\t\t<li>Pas de photos floues.</li>\n\t\t\t\t\t\t<li>Tout votre visage doit être visible.</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{\n\t\t\t\torder.orderItems.map((item, i) => (\n\t\t\t\t\t<Upload_Part order={order} key={i} item={item} orderId={order._id} userId={order.user}/>\n\t\t\t\t))\n\t\t\t}\n\t\t\t{\n\t\t\t\tallUpload ?\n\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t<Link to=\"/mon-compte/mes-commandes\">Accéder à mon compte client.</Link>\n\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t\t:\n\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t<Link to=\"/mon-compte/mes-commandes\">Envoyer mes photos plus tard.</Link>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Admin_dashboard.js",["284","285"],"import React, { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Menu from './Menu'\nimport \"../css/Dashboard.css\"\nimport { Route } from 'react-router-dom'\nimport { getInfos, resetInfos } from '../../actions/userActions'\nimport { ImSpinner8 } from \"react-icons/im\"\nimport Orders from './Orders'\nimport Users from './Users'\nimport Products from './Products'\nimport Stats from './Stats'\nimport Product_page from './Product_page'\nimport AddProduct_page from './AddProduct_page'\nimport Order_page from './Order_page'\nimport User_page from './User_page'\n\nexport default function Admin_dashboard(props) {\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const userInfos = useSelector(state => state.userInfos)\n    const { loading, userDetails } = userInfos;\n\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        if (!userInfo) {\n            props.history.push(\"/\");\n        }\n        if (userInfo) {\n            console.log(\"getInfos\")\n            if (Object.keys(userDetails).length === 0) {\n                dispatch(getInfos(userInfo._id))\n            }\n        }\n        return () => {\n/*             dispatch(resetInfos())\n */        }\n\t}, [userInfo])\n\t\n    return ( loading ? <div className=\"col-8 loading-spinner-div d-flex justify-content-center align-items-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n        <div className=\"container col-12 d-flex justify-content-center mt-5\">\n            <div className=\"col-2 d-flex justify-content-center\">\n                <Menu props={props} />\n            </div>\n            { loading ? <div className=\"col-8 loading-spinner-div d-flex justify-content-center align-items-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n            <Fragment>\n                <Route path=\"/admin/liste-commandes/:page?\" exact component={Orders} />\n                <Route path=\"/admin/liste-commandes/commande/id=:id\" component={Order_page} />\n                <Route path=\"/admin/liste-utilisateurs/:page?\" exact component={Users} />\n\t\t\t\t<Route path=\"/admin/liste-utilisateurs/utilisateur/id=:id\" component={User_page} />\n                <Route path=\"/admin/liste-produits/:page?\" exact component={Products} />\n\t\t\t\t<Route path=\"/admin/liste-produits/produit/id=:id\" component={Product_page} />\n                <Route path=\"/admin/liste-produits/produit/ajouter-produit\" component={AddProduct_page} />\n                <Route path=\"/admin/statistiques\" component={Stats} />\n                <div className=\"col-2 d-flex justify-content-center\">\n                </div>\n            </Fragment>\n            }\n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Dashboard/Account.js",["286","287","288"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { checkPassword, getInfos, passwordCheckReset, resetUpdateUserName, signin, updatePassword, updateUserName } from '../../actions/userActions';\nimport { ImSpinner8 } from 'react-icons/im';\nimport { useForm } from 'react-hook-form';\nimport { CgDanger } from 'react-icons/cg';\nimport { Link } from 'react-router-dom';\n\nexport default function Account() {\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const userInfos = useSelector(state => state.userInfos)\n    const { loading, userDetails } = userInfos;\n\n    const checkPasswordState = useSelector(state => state.checkPassword)\n    const { error: passwordVerifyError, validate } = checkPasswordState;\n\n    const updateUsernameState = useSelector(state => state.updateUserName)\n    const { error: usernameAlreadyUse, success } = updateUsernameState;\n\n    const dispatch = useDispatch();\n\n    const { register, handleSubmit, errors } = useForm();\n    const { register: register1, handleSubmit: handleSubmit1, errors: errors1 } = useForm(); \n\n    const [updateUsername, setUpdateUsername] = useState(false)\n    const [successUsernameUpdate, setSuccessUsernameUpdate] = useState(\"\")\n    const [errorUsernameUpdate, setErrorUsernameUpdate] = useState(\"\")\n    const [errorPassword, setErrorPassword] = useState(\"\")\n    const [successPassword, setSuccessPassword] = useState(\"\")\n    const [passwordCheck, setPasswordCheck] = useState(\"\")\n    const [newPassword1, setNewPassword1] = useState(\"\")\n    const [newPassword2, setNewPassword2] = useState(\"\")\n\n    const onSubmitUsername = data => {\n        dispatch(updateUserName(userInfo._id, data.username))\n    };\n\n    const onSubmitPassword = data => {\n        if (data.newPassword1 === data.newPassword2) {\n            console.log(\"OK\")\n            dispatch(checkPassword(userInfo._id, data.passwordCheck))\n        } else {\n            setErrorPassword(\"Merci de saisir deux mots de passe identiques.\")\n        }\n    };\n\n    useEffect(() => {\n        if (!userDetails) {\n            dispatch(getInfos(userInfo._id))\n        }\n        if (passwordVerifyError) {\n            setErrorPassword(\"Mot de passe incorrect.\")\n        }\n        if (validate) {\n            dispatch(updatePassword(userInfo._id, newPassword2))\n            dispatch(passwordCheckReset())\n            setSuccessPassword(\"Votre mot de passe a été mis à jour.\")\n            setPasswordCheck(\"\")\n            setNewPassword1(\"\")\n            setNewPassword2(\"\")\n            setTimeout(() => setSuccessPassword(\"\"), 4000)\n        }\n        if (success) {\n            setErrorUsernameUpdate(\"\");\n            setSuccessUsernameUpdate(\"Votre identifiant a été mis à jour.\");\n            setUpdateUsername(!updateUsername);\n            setTimeout(() => setSuccessUsernameUpdate(\"\"), 4000)\n        }\n        if (usernameAlreadyUse) {\n            setErrorUsernameUpdate(\"L'identifiant est déjà utilisé.\");\n        }\n        return () => {\n        }\n    }, [validate, passwordVerifyError, usernameAlreadyUse, success, userInfo])\n\n    return ( loading ? <div className=\"col-md-8 col-12 loading-spinner-div d-flex justify-content-center align-items-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n        <div className=\"user-account-page col-md-8 col-12\">\n            <div className=\"form d-flex flex-column justify-content-start align-items-center col-12\">\n                <h4 className=\"text-left font-weight-light align-self-start\">Mon compte</h4>\n                <form id=\"username-update-form\" className=\"d-flex flex-column col-md-8 col-12\" onSubmit={handleSubmit1(onSubmitUsername)}>\n                    <div className=\"input-group row flex-column align-items-center\">\n                        <div className=\"col-md-8 col-12 d-flex flex-column my-2\">\n                            <label htmlFor=\"username\" className=\"text-left\">Identifiant de connexion<span className=\"text-danger\">*</span></label>\n                            <input\n                                className={\"p-2 \" + ( errors1.username ? \"border-danger\" : \"\")}\n                                defaultValue={userDetails.username}\n                                name=\"username\"\n                                disabled={updateUsername ? false : true}\n                                onChange={() => { setSuccessUsernameUpdate(\"\"); setErrorUsernameUpdate(\"\")}}\n                                placeholder=\"\"\n                                ref={register1({\n                                validate: value => value !== \"\"\n                                })}\n                            />\n                            {errors1.username && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre nom.</p></div>}\n                        </div>\n                    </div>\n                    {successUsernameUpdate && <div className=\"row my-2 pt-1 text-success \"><p className=\"m-auto\">{successUsernameUpdate}</p></div>}\n                    {errorUsernameUpdate && <div className=\"row my-2 pt-1 text-danger \"><p className=\"m-auto\">{errorUsernameUpdate}</p></div>}\n                    {\n                        updateUsername &&\n                        <div className=\"submit-update-username col-12 mt-4 mb-4\">\n                            <button form=\"username-update-form\" className={\"submit-update-username btn btn-outline-dark rounded-0 p-2 col-8\"}>Modifier l'identifiant de connexion.</button>\n                        </div>\n                    }\n                    <Link className=\"mt-2\" to=\"#\" onClick={() => { setUpdateUsername(!updateUsername); setSuccessUsernameUpdate(\"\")}}>{updateUsername ? \"Annuler la modification.\" : \"Modifier l'identifiant de connexion.\"}</Link>\n                </form>\n                <form id=\"password-update-form\" className=\"d-flex flex-column col-md-8 col-12 px-4 py-2 mt-4\" onSubmit={handleSubmit(onSubmitPassword)}>\n                    <h6 className=\"font-weight-bold mb-3\">Modifier mon mot de passe</h6>\n                    <div className=\"input-group row flex-column align-items-center\">\n                        <div className=\"col-md-8 col-12 d-flex flex-column my-2\">\n                            <label htmlFor=\"passwordCheck\" className=\"text-left\">Mot de passe actuel<span className=\"text-danger\">*</span></label>\n                            <input\n                                className={\"p-2 \" + ( errors.passwordCheck ? \"border-danger\" : \"\")}\n                                name=\"passwordCheck\"\n                                type=\"password\"\n                                value={passwordCheck}\n                                onChange={(e) => { setPasswordCheck(e.target.value); setErrorPassword(\"\"); setSuccessPassword(\"\"); }}\n                                placeholder=\"\"\n                                ref={register({\n                                validate: value => value !== \"\"\n                                })}\n                            />\n                        </div>\n                        <div className=\"col-md-8 col-12 d-flex flex-column my-2\">\n                            <label htmlFor=\"newPassword1\" className=\"text-left\">Nouveau mot de passe<span className=\"text-danger\">*</span></label>\n                            <input\n                                className={\"p-2 \" + ( errors.newPassword1 ? \"border-danger\" : \"\")}\n                                name=\"newPassword1\"\n                                type=\"password\"\n                                value={newPassword1}\n                                onChange={(e) => { setNewPassword1(e.target.value); setErrorPassword(\"\"); }}\n                                ref={register({\n                                validate: value => value !== \"\"\n                                })}\n                            />\n                            {errors.newPassword1 && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de saisir un mot de passe dans les deux champs.</p></div>}\n                        </div>\n                        <div className=\"col-md-8 col-12 d-flex flex-column my-2\">\n                            <label htmlFor=\"newPassword2\" className=\"text-left\">Confirmation du nouveau mot de passe<span className=\"text-danger\">*</span></label>\n                            <input\n                                className={\"p-2 \" + ( errors.newPassword2 ? \"border-danger\" : \"\")}\n                                name=\"newPassword2\"\n                                type=\"password\"\n                                value={newPassword2}\n                                onChange={(e) => { setNewPassword2(e.target.value); setErrorPassword(\"\");}}\n                                ref={register({\n                                validate: value => value !== \"\"\n                                })}\n                            />\n                            {errors.newPassword2 && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de saisir un mot de passe dans les deux champs.</p></div>}\n                        </div>\n                        {errorPassword && <div className=\"d-flex align-items-center mt-2 pt-1 text-danger\"><CgDanger size={20} /><p className=\"m-0 ml-1\">{errorPassword}</p></div>}\n                        {successPassword && <div className=\"d-flex align-items-center mt-2 pt-1 text-success\"><p className=\"m-0 ml-1\">{successPassword}</p></div>}\n\n                        <div className=\"col-12 mt-4 mb-4\">\n                            <button form=\"password-update-form\" className={\"btn btn-outline-dark rounded-0 p-2 col-8\"}>Modifier le mot de passe.</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Dashboard/Menu.js",["289"],"import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { logout } from '../../actions/userActions';\n\nexport default function Menu({props}) {\n\n    const dispatch = useDispatch();\n    \n    const handleLogout = () => {\n        dispatch(logout());\n    }\n\n  const checkActive = (url) => {\n    console.log(props.location.pathname.split('/'))\n        if (props.location.pathname.split('/')[2] === url) {\n            return true\n        } \n        return false\n    }\n\n  useEffect(() => {\n    }, [])\n\n    return (\n        <div className=\"dashboard-menu col-12 d-flex align-items-center\">\n          <div className=\"dashboard-menu-links w-100 h-100\">\n            <ul className=\"d-flex flex-column justify-content-center align-items-center h-100 w-100 py-5 p-0\">\n              <li className=\"d-flex border-top w-100\">\n                <Link className={\"py-2 text-left w-100 \" /* + (checkActive(\"compte\") ? \"active\" : \"\") */} to=\"/mon-compte\">Mon compte</Link>\n              </li>\n              <li className=\"d-flex border-top w-100\">\n                <Link className={\"py-2 text-left w-100 \" /* + (checkActive(\"infos-perso\") ? \"active\" : \"\") */} to=\"/mon-compte/infos-perso\">Mes infos</Link>\n              </li>\n              <li className=\"d-flex border-top w-100\">\n                <Link className={\"py-2 text-left w-100 \" /* + (checkActive(\"mes-commandes\") ? \"active\" : \"\") */} to=\"/mon-compte/mes-commandes\">Mes commandes</Link>\n              </li>\n              <li className=\"d-flex border-top w-100\">\n                <Link className={\"py-2 text-left w-100 \" /* + (checkActive(\"envoyer-photo\") ? \"active\" : \"\") */} to=\"/mon-compte/envoyer-photo\">Envoyer mes photos</Link>\n              </li>\n              <li className=\"d-flex border-top w-100\">\n                <Link className={\"py-2 text-left w-100 \"} to=\"#\" onClick={handleLogout}>Déconnexion</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Dashboard/UserOrders.js",["290","291","292"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { ImSpinner8 } from 'react-icons/im';\n\nexport default function UserOrders() {\n\n    const userInfos = useSelector(state => state.userInfos);\n    const { loading, userDetails, userOrders } = userInfos;\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        return () => {\n        }\n    }, [])\n\n    return ( loading ? <div className=\"col-md-8 col-12 loading-spinner-div d-flex justify-content-center align-items-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n        <div className=\"user-orders-page col-md-8 col-12\">\n            <div className=\"d-flex flex-column justify-content-start col-12\">\n                <h4 className=\"text-left font-weight-light\">Mes commandes</h4>\n                <div className={\"user-orders-container mt-2 px-3 col-12\"}>\n                { userOrders.length === 0 ? \n                    <div>Vous n'avez passé aucune commande.</div> :\n                    userOrders.map((order, i) => (\n                        order.orderItems.map((item, i) => (\n                            <div key={i} className=\"user-order mb-2 p-3\">\n                                <img src={item.image} className=\"col-md-3 col-xsm-12 m-auto\"/>\n                                <div className=\"col-md-7 col-xsm-12 p-3 order-infos d-flex flex-column justify-content-center text-left\">\n                                    <h4>{item.name}</h4>\n                                    <p className=\"order-number\">Quantité : {item.qty}</p>\n                                    <p className=\"order-number\">Commande : {order._id}</p>\n                                    <p className=\"order-date font-italic\">{\"Le \" + order.created_at.split('T')[0] + \" à \" + order.created_at.split('T')[1].split('.')[0]}</p>\n                                    <p className=\"order-statut\">Statut : {!item.photoUpload ? <span className=\"text-danger\">En attente</span> : <span className=\"text-success\">Complet</span>}</p>\n                                </div>\n                                <Link to={`/mon-compte/mes-commandes/${order._id}`} className=\"col-md-2 col-xsm-12 btn btn-outline-dark rounded-0 my-auto\">Plus d'infos</Link>\n                            </div>\n                        ))\n                    ))\n                }\n                </div>\n            </div>  \n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Dashboard/Infos.js",["293"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from \"react-hook-form\";\nimport { getInfos, resetInfos, updateInfos } from '../../actions/userActions';\nimport { CgDanger } from \"react-icons/cg\"\nimport { ImSpinner8 } from \"react-icons/im\"\n\nexport default function Infos(props) {\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const userInfos = useSelector(state => state.userInfos)\n    const { loading, userDetails } = userInfos;\n\n    const updateUserInfos = useSelector(state => state.updateUserInfos)\n    const { success } = updateUserInfos;\n\n    const [newsletter, setNewsletter] = useState(userDetails.newsletter)\n\n    const dispatch = useDispatch();\n\n    const { register, handleSubmit, errors } = useForm();\n\n    const onSubmit = data => {\n        console.log(data)\n        dispatch(updateInfos(userDetails._id, data.lastname, data.firstname, data.email, data.phone, newsletter))\n    };\n\n    useEffect(() => { \n        if (success) {\n            dispatch(resetInfos());\n            dispatch(getInfos(userInfo._id))\n        }\n        return () => {\n        }\n    }, [userDetails, success])\n\n\n    return ( loading ? <div className=\"col-md-8 col-12 loading-spinner-div d-flex justify-content-center align-items-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n        <div className=\"user-infos-page-update col-md-8 col-12\">\n            <div className=\"form d-flex flex-column justify-content-start col-12\">\n                <h4 className=\"text-left font-weight-light\">Infos personnelles</h4>\n\n                <div className=\"user-form col-12\">\n                    <form id=\"user-form\" className=\"d-flex flex-column\" onSubmit={handleSubmit(onSubmit)}>\n                        <div className=\"input-group row\">\n                            <div className=\"col-md-8 col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"lastname\" className=\"text-left\">Nom <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.lastname ? \"border-danger\" : \"\")}\n                                    defaultValue={ userDetails.lastname }\n                                    name=\"lastname\"\n                                    placeholder=\"\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.lastname && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre nom.</p></div>}\n                            </div>\n                            <div className=\"col-md-4 col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"firstname\" className=\"text-left\">Prénom <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.firstname ? \"border-danger\" : \"\")}\n                                    defaultValue={ userDetails.firstname }\n                                    name=\"firstname\"\n                                    placeholder=\"\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.firstname && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre prénom.</p></div>}\n                            </div>\n                        </div>\n                        <div className=\"input-group row\">\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"phone\" className=\"text-left\">Téléphone <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.phone ? \"border-danger\" : \"\")}\n                                    defaultValue={ userDetails.phone }\n                                    name=\"phone\"\n                                    placeholder=\"\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.phone && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre numéro de téléphone.</p></div>}\n                            </div>\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"email\" className=\"text-left\">Adresse de messagerie <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.email ? \"border-danger\" : \"\")}\n                                    defaultValue={ userDetails.email }\n                                    name=\"email\"\n                                    type=\"email\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.email && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre adresse de messagerie.</p></div>}\n                            </div>\n                            <div className=\"col-12 d-flex justify-content-center align-items-center my-2\">\n                                <label htmlFor=\"newsletter\" className=\"text-left m-0\">M'inscrire à la newsletter ?</label>\n                                <input\n                                    className={\"p-2 mx-3 \" + ( errors.newsletter ? \"border-danger\" : \"\")}\n                                    defaultValue={userDetails.newsletter}\n                                    type=\"checkbox\"\n                                    defaultChecked={ userDetails.newsletter ? true : false }\n                                    name=\"newsletter\"\n                                    placeholder=\"\"\n                                    onClick={() => setNewsletter(!newsletter)}\n                                    ref={register}\n                                />\n                                {errors.newsletter && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre nom.</p></div>}\n                            </div>\n                        </div>\n                        <div className=\"col-12 my-2\">\n                            <button className={\"btn btn-outline-dark rounded-0 col-12\"} /* onClick={() => handleUpdateInfos()} */>Enregistrer les modifications</button>\n                        </div>\n                    </form>\n                </div>        \n            </div>\n        </div>\n    )\n}\n/* \n<div className=\"input-group row\">\n    <div className=\"col-12 d-flex flex-column my-2\">\n        <label htmlFor=\"address\" className=\"text-left\">Numéro et nom de rue <span className=\"text-danger\">*</span></label>\n        <input\n            className={\"p-2 \" + ( errors.address ? \"border-danger\" : \"\")}\n            defaultValue={ userDetails.address ? userDetails.address : \"\"}\n            name=\"address\"\n            placeholder=\"\"\n            ref={register({required: false})}\n        />\n        {errors.address && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre adresse.</p></div>}\n    </div>\n    <div className=\"col-12 d-flex flex-column my-2\">\n        <label htmlFor=\"addressDetails\" className=\"text-left\"></label>\n        <input\n            className={\"p-2 \" + ( errors.addressDetails ? \"border-danger\" : \"\")}\n            defaultValue=\"\"\n            name=\"addressDetails\"\n            placeholder=\"Appartement, bureau, etc. (optionnel) \"\n            ref={register({required: false})}\n        />\n    </div>\n    <div className=\"col-12 d-flex flex-column my-2\">\n        <label htmlFor=\"postalCode\" className=\"text-left\">Code postal <span className=\"text-danger\">*</span></label>\n        <input\n            className={\"p-2 \" + (errors.postalCode ? \"border-danger\" : \"\")}\n            defaultValue={ userDetails.postalCode ? userDetails.postalCode : \"\"}\n            name=\"postalCode\"\n            type=\"number\"\n            ref={register({required: false})}\n        />\n        {errors.postalCode && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de saisir votre code postal.</p></div>}\n    </div>\n    <div className=\"col-12 d-flex flex-column my-2\">\n        <label htmlFor=\"city\" className=\"text-left\">Ville <span className=\"text-danger\">*</span></label>\n        <input\n            className={\"p-2 \" + ( errors.city ? \"border-danger\" : \"\")}\n            defaultValue={ userDetails.city ? userDetails.city : \"\"}\n            name=\"city\"\n            placeholder=\"\"\n            ref={register({required: false})}\n        />\n        {errors.city && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre ville.</p></div>}\n    </div>\n    <div className=\"col-12 d-flex flex-column my-2\">\n        <label htmlFor=\"country\" className=\"text-left\">Pays <span className=\"text-danger\">*</span></label>\n        <input\n            className={\"p-2 \" + ( errors.country ? \"border-danger\" : \"\")}\n            defaultValue={ userDetails.country ? userDetails.country : \"\"}\n            name=\"country\"\n            placeholder=\"\"\n            ref={register({required: false})}\n\n        />\n        {errors.country && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre pays.</p></div>}\n    </div>\n    </div>\n*/\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Dashboard/Upload_Photo_Dashboard.js",["294","295","296","297"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ImSpinner8 } from 'react-icons/im';\nimport Upload_Part from '../Order/components/Upload_Part';\n\nexport default function Upload_Photo() {\n\n    const userInfos = useSelector(state => state.userInfos);\n\tconst { loading, userDetails, userOrders } = userInfos;\n\t\n\tconst [photoToUpload, setPhotoToUpload] = useState(0);\n\n    const dispatch = useDispatch()\n\n\tuseEffect(() => {\n\t\tuserOrders.map((order, i) => (\n\t\t\torder.orderItems.map((item, i) => !item.photoUpload ? \n\t\t\t\tsetPhotoToUpload(photoToUpload + 1)\n\t\t\t\t:\n\t\t\t\tnull\n\t\t\t)\n\t\t))\n\t\treturn () => {\n\t\t}\n\t}, [])\n\t\n    return ( loading ? <div className=\"col-8 loading-spinner-div d-flex justify-content-center align-items-center w-100 h-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n\t\t<div className=\"col-md-8 col-12 h-100 m-auto\">\n\t\t\t{ photoToUpload > 0 ?\n            <div className=\"d-flex flex-column justify-content-start col-12\">\n                <h4 className=\"text-left font-weight-light\">Envoyer mes photos</h4>\n                <div className={\" mt-2\"}>{/* user-orders-container */}\n\t\t\t\t{\n\t\t\t\tuserOrders.map((order, i) => (\n\t\t\t\t\torder.orderItems.map((item, i) => !item.photoUpload ? \n\t\t\t\t\t\t<Upload_Part key={i} item={item} order={order} orderId={order._id} userId={order.user}/>\n\t\t\t\t\t\t:\n\t\t\t\t\t\tnull\n\t\t\t\t\t)\n\t\t\t\t))\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t:\n\t\t\t<div className=\"d-flex align-items-center justify-content-center h-100\">\n\t\t\t\t<h4 className=\"text-center font-weight-light\">Vous n'avez aucune photo à nous transmettre.</h4>\n\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Dashboard/OrderDetails_Page.js",["298","299","300"],"import React, { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { detailsOrder } from '../../actions/orderActions'\nimport { ImSpinner8 } from \"react-icons/im\"\n\nexport default function OrderDetails_page(props) {\n\n\tconst orderDetails = useSelector(state => state.orderDetails)\n\tconst { loading, order } = orderDetails;\n\n\tconst dispatch = useDispatch()\n\n\tuseEffect(() => {\n\t\tdispatch(detailsOrder(props.match.params.id))\n\t\treturn () => {\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<div className=\"col-md-8 col-12\">\n\t\t\t{\n\t\t\tloading ? <div className=\"col-md-8 col-12 loading-spinner-div d-flex justify-content-center align-items-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"d-flex justify-content-between w-100\">\n\t\t\t\t\t<h4 className=\"text-left mb-5\">Votre commande</h4>\n\t\t\t\t\t<button className=\"btn btn-outline-warning mb-auto\">Facture</button>\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"border-bottom py-4\">\n\t\t\t\t\t<h6 className=\"text-left mb-3\">Détails de commande</h6>\n\t\t\t\t\t<table>\n\t\t\t\t\t<tbody className=\"text-left\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Date de commande : {order.created_at.split('T')[0]}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>N° de commande : {order._id}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Total de la commande : EUR {order.totalPrice} ({order.itemsNumb} article{order.itemsNumb>1 && \"s\"})</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"border-bottom py-4\">\n\t\t\t\t\t<h6 className=\"text-left mb-3\">Produit{order.itemsNumb>1 && \"s\"}</h6>\n\t\t\t\t\t<div className=\"order-items-container d-flex flex-column flex-wrap\">\n\t\t\t\t\t{\n\t\t\t\t\t\torder.orderItems.map((item, i) => (\n\t\t\t\t\t\t\t<Fragment key={i}>\n\t\t\t\t\t\t\t<div className=\"order-item col-12 d-flex align-items-center m-2 p-2\">\n\t\t\t\t\t\t\t\t<div className=\"order-item-img\">\n\t\t\t\t\t\t\t\t\t<img src={item.image} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-7 order-item-infos d-flex flex-column justify-content-center text-left ml-3\">\n\t\t\t\t\t\t\t\t\t<h4 className=\"m-0\">{item.name}</h4>\n\t\t\t\t\t\t\t\t\t<div className=\"row text-left category-colors my-1\">\n\t\t\t\t\t\t\t\t\t\t{item.category[0].colors.map((color, k ) => (\n\t\t\t\t\t\t\t\t\t\t\t<div key={k} className=\"m-0 mr-1 p-2 text-uppercase\" style={{ backgroundColor: `${color}`, height:\".5rem\", width:\".5rem\", borderRadius:\"50%\"}}></div>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<p className=\"order-item-facenumber m-0\">{item.person} pers.</p>\n\t\t\t\t\t\t\t\t\t<p className=\"order-item-qty m-0\">Quantité : {item.qty}</p>\n\t\t\t\t\t\t\t\t\t<p className=\"order-item-price m-0\">Prix : {item.price}€</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"item-photos-container d-flex\">\n\t\t\t\t\t\t\t{item.photo.map((photo, k) => (\n\t\t\t\t\t\t\t<div key={k} className=\"item-photos d-flex p-3\">\n\t\t\t\t\t\t\t\t<div className=\"item-photos-img\">\n\t\t\t\t\t\t\t\t\t<img src={`/orders/order-${order._id}/${item.name}-${item.cartItemId}/${photo}`} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"border-bottom py-4\">\n\t\t\t\t\t<h6 className=\"text-left mb-3\">Adresse de livraison</h6>\n\t\t\t\t\t<table>\n\t\t\t\t\t<tbody className=\"text-left\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>{order.shipping.address}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>{order.shipping.postalCode}, {order.shipping.city}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>{order.shipping.country}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"border-bottom py-4\">\n\t\t\t\t\t<h6 className=\"text-left mb-3\">Adresse de facturation</h6>\n\t\t\t\t\t<table>\n\t\t\t\t\t<tbody className=\"text-left\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>{order.shipping.address}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>{order.shipping.postalCode}, {order.shipping.city}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>{order.shipping.country}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\t\t\n\t\t\t\t<div className=\"border-bottom py-4\">\n\t\t\t\t\t<h6 className=\"text-left mb-3\">Information sur le paiement</h6>\n\t\t\t\t\t<table>\n\t\t\t\t\t<tbody className=\"text-left\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Moyen de paiement : {order.payment.paymentMethod}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"border-bottom py-4\">\n\t\t\t\t\t<h6 className=\"text-left mb-3\">Récapitulatif de commande</h6>\n\t\t\t\t\t<table>\n\t\t\t\t\t<tbody className=\"text-left\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Nombre d'article{order.itemsNumb > 1 && \"s\"} : {order.itemsNumb}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Frais de livraison : EUR {order.shippingPrice}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>TVA : EUR {order.taxPrice}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td className=\"font-weight-bold\">Total : EUR {order.totalPrice}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\t\n\t\n\t\t\t</Fragment>\n\t\t\t}\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/actions/productActions.js",["301","302","303"],"import { DataSync } from 'aws-sdk';\nimport Axios from 'axios';\n\nconst listProducts = (offset = 0, per_page = 8, style = 'all' , size = 'all' , color = null, max = 100, min = 0) => async (dispatch) => {\n    dispatch({ type: \"PRODUCT_LIST_REQUEST\" });\n    try {\n      const { data } = await Axios.get('/api/products/list', { params: { style: style, size: size, color: color, max: max, min: min, offset: offset, per_page: per_page } });\n      dispatch({ type: \"PRODUCT_LIST_SUCCESS\", payload: data });\n  } catch (error) {\n      dispatch({ type: \"PRODUCT_LIST_FAIL\", payload: error.message });\n  }\n}\n\nconst countProducts = (style , size , color = null, max = 100, min = 0) => async (dispatch) => {\n    dispatch({ type: \"DATA_COUNT_REQUEST\" });\n    try {\n        const { data } = await Axios.get(`/api/products/count`, { params: { style: style, size: size, color: color, max: max, min: min } });\n        dispatch({ type: \"DATA_COUNT_SUCCESS\", payload: data });\n    } catch (error) {\n        dispatch({ type: \"DATA_COUNT_FAIL\", payload: error.message });\n  }\n}\n/* const sortListProducts = async (style, size, color, max, min) => {\n    try {\n        const { data } = await Axios.get('/api/products/sort', { style: style, size: size, color: color, max: max, min: min })\n        console.log(data)\n    } catch (error) {\n        console.log(error)\n    }\n} */\n\nconst resetListProducts = () => (dispatch) => {\n    dispatch({ type: \"PRODUCT_LIST_RESET\" });\n}\n\nconst productDetails = (productId, slug) => async (dispatch) => {\n    dispatch({ type: \"PRODUCT_DETAILS_REQUEST\" });\n    try {\n        const { data } = await Axios.get('/api/products/details', { params: { productId: productId, slug: slug} });\n      dispatch({ type: \"PRODUCT_DETAILS_SUCCESS\", payload: data });\n  } catch (error) {\n      dispatch({ type: \"PRODUCT_DETAILS_FAIL\", payload: error.message });\n  }\n}\n\nconst addProduct = (product) => async (dispatch) => {\n    dispatch({ type: \"PRODUCT_ADD_REQUEST\" });\n    try {\n        const { data } = await Axios.post(\"/api/products/\", { product })\n        console.log(data)\n        dispatch({ type: \"PRODUCT_ADD_SUCCESS\", payload: data });\n    } catch (error) {\n        dispatch({ type: \"PRODUCT_ADD_FAIL\", payload: error.message });\n    }  \n}\n\nconst updateProduct = (product) => async (dispatch) => {\n    dispatch({ type: \"PRODUCT_UPDATE_REQUEST\" });\n    try {\n        const { data } = await Axios.put(`/api/products/${product._id}`, { product })\n        dispatch({ type: \"PRODUCT_UPDATE_SUCCESS\", payload: data });\n    } catch (error) {\n        dispatch({ type: \"PRODUCT_UPDATE_FAIL\", payload: error.message });\n    }  \n}\n\nconst deleteProduct = (productId) => async (dispatch) => {\n    dispatch({ type: \"PRODUCT_DELETE_REQUEST\" });\n    try {\n        const { data } = await Axios.delete(`/api/products/${productId}`)\n        dispatch({ type: \"PRODUCT_DELETE_SUCCESS\" });\n    } catch (error) {\n        dispatch({ type: \"PRODUCT_DELETE_FAIL\", payload: error.message });\n    }  \n}\n\nconst importProductImage = (file) => async (dispatch) => {\n    const bodyFormData = new FormData();\n    bodyFormData.append('image', file)\n    dispatch({ type: \"PRODUCT_IMAGE_ADD_REQUEST\" });\n    try {\n        const { data } = await Axios.post(`/api/products/product-images/${file._id}`, bodyFormData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n        dispatch({ type: \"PRODUCT_IMAGE_ADD_SUCCESS\" });\n    } catch (error) {\n        dispatch({ type: \"PRODUCT_IMAGE_ADD_FAIL\", payload: error.message });\n    }      \n}\n\nexport { listProducts, productDetails, resetListProducts, countProducts, addProduct, importProductImage, updateProduct, deleteProduct, /* sortListProducts */ };","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/actions/dataActions.js",[],"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Modele/Filter.js",["304"],"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Pagination.js",["305"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Pagination({ url, pageName, page, totalInDb, per_page }) {\n\t\n\tconst queryFilter = url.split(`page=${page}`)[1] ? url.split(`page=${page}`)[1] : '';\n\n\tuseEffect(() => {\n\t\tconsole.log(queryFilter)\n\t\treturn () => {\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<div className=\"row justify-content-between my-5 mt-auto\">\n\t\t\t{Number(page) > 1 ?\n\t\t\t\t<Link to={`/${pageName}/page=` + (Number(page) - 1) + queryFilter} className=\"btn btn-primary\">Précedent</Link>\n\t\t\t\t: null\n\t\t\t}\n\t\t\t{ Number(page) < Math.round((totalInDb/per_page)) ? \n\t\t\t\t<Link to={`/${pageName}/page=` + (Number(page) + 1) + queryFilter} className=\"btn btn-outline-primary ml-auto\">Suivant</Link>\n\t\t\t\t: null\n\t\t\t}\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Connexion/Register_Page.js",["306"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register, signin } from '../../actions/userActions';\n\n\nexport default function Register_Page() {\n\n    const userRegister = useSelector(state => state.userRegister);\n    const { userInfo, error } = userRegister\n\n    const [email, setEmail] = useState('');\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [newsletter, setNewsletter] = useState(false);\n    const [registerError, setRegisterError] = useState('');\n\n    const dispatch = useDispatch();\n    \n    const registerUser = (e) => {\n        e.preventDefault();\n        dispatch(register(username, email, password, newsletter))\n    }\n\n    useEffect(() => {\n        if (error) {\n            setRegisterError('Adresse email déjà utilisée.')\n        }\n        if (userInfo) {\n            dispatch(signin(username, password)) \n        }\n        return () => {\n        }\n    }, [error, userInfo])\n\n    return (\n        <form className=\"sign-up-form col-12 d-flex flex-column align-items-center justify-content-center py-5\" id=\"addContact\" onSubmit={registerUser}>\n            <div className=\"row\">\n                <h2 className=\"font-weight-bold mb-4 mx-auto\">Inscription</h2>\n            </div>\n            <div className=\"d-flex flex-column justify-content-center align-items-center my-2\">\n                    <input placeholder=\"Nom de compte\" id=\"username\" type=\"text\" className=\"validate form-control text-center\" onChange={(e) => { setRegisterError(''); setUsername(e.target.value)}}/>\n            </div>\n            <div className=\"d-flex flex-column justify-content-center align-items-center my-2\">\n                    <input placeholder=\"Email\" id=\"email\" type=\"email\" className=\"validate form-control text-center\" onChange={(e) => { setRegisterError(''); setEmail(e.target.value)}}/>\n            </div>\n            <div className=\"d-flex flex-column justify-content-center align-items-center my-2\">\n                    <input placeholder=\"Mot de passe\" id=\"password\" type=\"password\" className=\"validate form-control text-center\" onChange={(e) => { setRegisterError(''); setPassword(e.target.value)}}/>\n            </div>\n            <div className=\"d-flex justify-content-center align-items-center my-2\">\n                    <label htmlFor=\"city\">M'inscrire à la newsletter ?</label>\n                    <input type=\"checkbox\" className=\"col-1\" onClick={() => setNewsletter(!newsletter)}/>\n            </div>\n            <div className=\"row mt-3 w-100\">\n                <button className=\"btn mx-auto p-2 rounded-0 text-uppercase border-0 col-2\" type=\"submit\" name=\"action\">Valider</button>\n            </div>\n            <div className=\"register-error\">\n                {error && <h6 className=\"text-center mx-auto my-4 text-danger\">{registerError}</h6>}\n            </div>\n        </form>\n    )\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Modele/Modele_Card.js",[],"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Connexion/Signin_Page.js",["307","308"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signin } from '../../actions/userActions';\n\nexport default function Signin_Page() {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { loading, error } = userSignin;\n    \n    const [signinError, setSigninError] = useState('');\n\n    const dispatch = useDispatch();\n\n    const signinUser = (e) => {\n        e.preventDefault();\n        dispatch(signin(username, password))\n    };\n\n    useEffect(() => {\n        if (error) {\n            setSigninError('Identifiant ou mot de passe incorrect.')\n        }\n        return () => {\n        }\n    }, [error])\n    return (\n        <form className=\"sign-in-form d-flex flex-column align-items-center justify-content-center\" id=\"addContact\" onSubmit={signinUser}> \n            <div className=\"row\">\n                <h2 className=\"font-weight-bold mb-4 mx-auto\">Connexion</h2>\n            </div>\n            {\n                loading || error &&\n                <div className=\"d-flex flex-column text-input\">\n                    {loading && <h4 className=\"text-center mx-auto\">Loading...</h4>}\n                </div>\n            }\n            <div className=\"d-flex flex-column justify-content-center align-items-center my-2\">\n                <input id=\"username\" type=\"text\" className=\"validate form-control text-center\" onChange={(e) => {setSigninError(''); setUsername(e.target.value)}}/>\n            </div>\n            <div className=\"d-flex flex-column justify-content-center align-items-center my-2\">\n                    <input id=\"password\" type=\"password\" className=\"validate form-control text-center\" onChange={(e) => {setSigninError(''); setPassword(e.target.value)}}/>\n            </div>\n            <div className=\"row mt-3 w-100\">\n                <button className=\"btn mx-auto p-2 rounded-0 text-uppercase col-2\" type=\"submit\" name=\"action\">Valider</button>\n            </div>\n            <div className=\"signin-error\">\n                {error && <h6 className=\"text-center mx-auto my-4 text-danger\">{signinError}</h6>}\n            </div>\n        </form>\n    )\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Order_page.js",["309","310","311"],"import React, { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { detailsOrder } from '../../actions/orderActions'\nimport { ImSpinner8 } from \"react-icons/im\"\n\nexport default function OrderDetails_page(props) {\n\n\tconst orderDetails = useSelector(state => state.orderDetails)\n\tconst { loading, order } = orderDetails;\n\n\tconst dispatch = useDispatch()\n\n\tuseEffect(() => {\n\t\tdispatch(detailsOrder(props.match.params.id))\n\t\treturn () => {\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<div className=\"col-8\">\n\t\t\t{\n\t\t\tloading ? <div className=\"col-8 loading-spinner-div d-flex justify-content-center align-items-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"d-flex justify-content-between w-100\">\n\t\t\t\t\t<h4 className=\"text-left mb-5\">Votre commande</h4>\n\t\t\t\t\t<button className=\"btn btn-outline-warning mb-auto\">Télécharger</button>\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"border-bottom py-4\">\n\t\t\t\t\t<h6 className=\"text-left mb-3\">Détails de commande</h6>\n\t\t\t\t\t<table>\n\t\t\t\t\t<tbody className=\"text-left\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Date de commande : {order.created_at.split('T')[0]}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>N° de commande : {order._id}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Total de la commande : EUR {order.totalPrice} ({order.itemsNumb} article{order.itemsNumb>1 && \"s\"})</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"border-bottom py-4\">\n\t\t\t\t\t<h6 className=\"text-left mb-3\">Produit{order.itemsNumb>1 && \"s\"}</h6>\n\t\t\t\t\t<div className=\"order-items-container d-flex flex-column flex-wrap\">\n\t\t\t\t\t{\n\t\t\t\t\t\torder.orderItems.map((item, i) => (\n\t\t\t\t\t\t\t<Fragment key={i}>\n\t\t\t\t\t\t\t<div className=\"order-item col-6 d-flex align-items-center m-2 p-2\">\n\t\t\t\t\t\t\t\t<div className=\"order-item-img\">\n\t\t\t\t\t\t\t\t\t<img src={item.image} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-7 order-item-infos d-flex flex-column justify-content-center text-left ml-3\">\n\t\t\t\t\t\t\t\t\t<h4 className=\"m-0\">{item.name}</h4>\n\t\t\t\t\t\t\t\t\t<div className=\"row text-left category-colors my-1\">\n\t\t\t\t\t\t\t\t\t\t{item.category[0].colors.map((color, k ) => (\n\t\t\t\t\t\t\t\t\t\t\t<div key={k} className=\"m-0 mr-1 p-2 text-uppercase\" style={{ backgroundColor: `${color}`, height:\".5rem\", width:\".5rem\", borderRadius:\"50%\"}}></div>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<p className=\"order-item-facenumber m-0\">{item.faceNumber} pers.</p>\n\t\t\t\t\t\t\t\t\t<p className=\"order-item-qty m-0\">Quantité : {item.qty}</p>\n\t\t\t\t\t\t\t\t\t<p className=\"order-item-price m-0\">Prix : {item.price}€</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"item-photos-container d-flex\">\n\t\t\t\t\t\t\t{item.photo.map((photo, k) => (\n\t\t\t\t\t\t\t<div key={k} className=\"item-photos d-flex p-3\">\n\t\t\t\t\t\t\t\t<div className=\"item-photos-img\">\n\t\t\t\t\t\t\t\t\t<img src={`/orders/order-${order._id}/${item.name}-${item.cartItemId}/${photo}`} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"border-bottom py-4\">\n\t\t\t\t\t<h6 className=\"text-left mb-3\">Adresse de livraison</h6>\n\t\t\t\t\t<table>\n\t\t\t\t\t<tbody className=\"text-left\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>{order.shipping.address}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>{order.shipping.postalCode}, {order.shipping.city}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>{order.shipping.country}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"border-bottom py-4\">\n\t\t\t\t\t<h6 className=\"text-left mb-3\">Adresse de facturation</h6>\n\t\t\t\t\t<table>\n\t\t\t\t\t<tbody className=\"text-left\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>{order.shipping.address}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>{order.shipping.postalCode}, {order.shipping.city}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>{order.shipping.country}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\t\t\n\t\t\t\t<div className=\"border-bottom py-4\">\n\t\t\t\t\t<h6 className=\"text-left mb-3\">Information sur le paiement</h6>\n\t\t\t\t\t<table>\n\t\t\t\t\t<tbody className=\"text-left\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Moyen de paiement : {order.payment.paymentMethod}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"border-bottom py-4\">\n\t\t\t\t\t<h6 className=\"text-left mb-3\">Récapitulatif de commande</h6>\n\t\t\t\t\t<table>\n\t\t\t\t\t<tbody className=\"text-left\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Nombre d'article{order.itemsNumb > 1 && \"s\"} : {order.itemsNumb}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Frais de livraison : EUR {order.shippingPrice}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>TVA : EUR {order.taxPrice}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td className=\"font-weight-bold\">Total : EUR {order.totalPrice}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\t\n\t\n\t\t\t</Fragment>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/AddProduct_page.js",["312","313","314","315"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from \"react-hook-form\";\nimport { CgDanger } from \"react-icons/cg\"\nimport { ImSpinner8 } from \"react-icons/im\"\nimport { addProduct, importProductImage, productDetails } from '../../actions/productActions';\nimport { IoMdAdd } from \"react-icons/io\"\nimport uniqid from 'uniqid'\n\nexport default function AddProduct_page(props) {\n\t\n\tconst [styles, setStyles] = useState([]);\n\tconst [colors, setColors] = useState([]);\n\tconst [file, setFile] = useState({})\n\n    const dispatch = useDispatch();\n\n    const { register, handleSubmit, errors, reset } = useForm();\n\n\tconst onSubmit = data => {\n\t\tconst id = uniqid();\n\t\tObject.assign(file, {\n\t\t\t_id: id\n\t\t})\n\t\tconst product = {\n\t\t\tname: data.name,\n\t\t\tslug: data.slug,\n\t\t\tprice: data.price,\n\t\t\timage: \"/product-images/\" + id + \".jpg\",\n\t\t\tcategory: {\n\t\t\t\tstyle: styles,\n\t\t\t\tsize: data.size,\n\t\t\t\tcolors: colors\n\t\t\t},\n\t\t\tfaceNumber: data.faceNumber,\n\t\t\tdescription: data.description\n\t\t}\n\t\tdispatch(addProduct(product))\n\t\tif (file) {\n\t\t\tdispatch(importProductImage(file))\n\t\t}\n\t\treset({})\n\t\tsetFile({})\n\t\tsetColors([])\n\t\tsetStyles([])\n\t};\n\n\tconst addStyle = (e) => {\n\t\te.preventDefault();\n\t\tlet style = document.getElementsByClassName('style-input')[0]\n\t\tif (style.value !== \"\") {\n\t\t\tsetStyles([...styles, style.value])\t\t\t\n\t\t}\n\t\tstyle.value = \"\";\n\t}\n\tconst addColor = (e) => {\n\t\te.preventDefault();\n\t\tlet color = document.getElementsByClassName('color-input')[0]\n\t\tsetColors([...colors, color.value])\n\t}\n\tconst deleteStyle = (style) => {\n\t\tlet newStyles = styles.filter(x => x !== style)\n\t\tsetStyles(newStyles)\n\t}\n\tconst deleteColor = (color) => {\n\t\tlet newColors = colors.filter(x => x !== color)\n\t\tsetColors(newColors)\n\t}\n\tconst addFile = (e) => {\n\t\tconsole.log(e.target.files[0])\n\t\tconst myFile = Object.assign(e.target.files[0], {\n\t\t\tpreview: URL.createObjectURL(e.target.files[0]),\n\t\t})\n\t\tsetFile(myFile)\n\t}\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t}\n\t}, [])\n\n    return (\n\t\t<div className=\"col-8\">\n\t\t\t<form id=\"user-form\" className=\"d-flex flex-column\" onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<h4 className=\"text-left font-weight-light\">Ajouter un produit</h4>\n\t\t\t\t<div className=\"input-group row my-4\">\n\t\t\t\t\t<div className=\"col-4 d-flex flex-column my-2\">\n\t\t\t\t\t\t<label htmlFor=\"name\" className=\"text-left\">Nom <span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={\"p-2 \" + ( errors.name ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\tvalidate: value => value !== \"\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.name && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner le nom.</p></div>}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-4 d-flex flex-column my-2\">\n\t\t\t\t\t\t<label htmlFor=\"slug\" className=\"text-left\">Slug <span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={\"p-2 \" + ( errors.slug ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\tname=\"slug\"\n\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\tvalidate: value => value !== \"\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.slug && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner le slug.</p></div>}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-4 d-flex flex-column my-2\">\n\t\t\t\t\t\t<label htmlFor=\"price\" className=\"text-left\">Prix <span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={\"p-2 \" + ( errors.price ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\tname=\"price\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\tvalidate: value => value !== \"\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.price && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner le prix.</p></div>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input-group row my-4\">\n\t\t\t\t\t<div className=\"col-12 d-flex flex-column my-2\">\n\t\t\t\t\t\t<label htmlFor=\"description\" className=\"text-left\">Description :<span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tclassName={\"p-2 \" + ( errors.description ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\trows={6}\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\tvalidate: value => value !== \"\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.description && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci d'ajouter une description.</p></div>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input-group row align-items-center my-4 row-category\">\n\t\t\t\t\t<div className=\"col-4 d-flex flex-column my-2 h-100\">\n\t\t\t\t\t\t<label htmlFor=\"size\" className=\"text-left\">Taille :<span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={\"p-2 \" + (errors.size ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\tname=\"size\"\n\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.size && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger size={20} /><p className=\"m-0 ml-1\">Merci de préciser la taille.</p></div>}\n\t\t\t\t\t</div>\t\n\t\t\t\t\t<div className=\"col-4 d-flex flex-column my-2 h-100\">\n\t\t\t\t\t\t<label htmlFor=\"style\" className=\"text-left\">Style(s) :<span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<div className=\"d-flex mb-2\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName={\"p-2 col-10 style-input \" + (errors.style ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\t\tname=\"style\"\n\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\t\trequire: false\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button className=\"btn btn-dark rounded-0 col-2 p-0\" onClick={(e) => addStyle(e)}><IoMdAdd className=\"m-auto\" size={20}/></button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstyles.map((style, i) => (\n\t\t\t\t\t\t\t\t<span key={i} className=\"style-badge badge rounded-0 badge-warning px-2 py-2 mr-1\" onClick={() => deleteStyle(style)}>{style}</span>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-4 d-flex flex-column align-items-center my-2 h-100\">\n\t\t\t\t\t\t<label htmlFor=\"color\" className=\"text-left\">Couleur(s) :<span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName={\"p-0 color-input rounded-0 \" + (errors.style ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\t\ttype=\"color\"\n\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\t\trequire: false\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button className=\"btn btn-dark rounded-0\" onClick={(e) => addColor(e)}><IoMdAdd className=\"m-auto\" size={20}/></button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"my-2 d-flex justify-content-center w-100\" >\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcolors.map((color, i) => (\n\t\t\t\t\t\t\t\t<div key={i} className=\"color-badge mr-1\" style={{backgroundColor:`${color}`, height:\"1.5rem\", width:\"1.5rem\", borderRadius:\"50%\"}} onClick={() => deleteColor(color)}></div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input-group row align-items-center my-4\">\n\t\t\t\t\t<div className=\"col-4 my-2\">\n\t\t\t\t\t\t<div className=\"product-img m-auto\">\n\t\t\t\t\t\t\t<img src={Object.keys(file).length > 0 ? file.preview : \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fnews.aut.ac.nz%2F__data%2Fassets%2Fimage%2F0006%2F92328%2Fplaceholder-image10.jpg&f=1&nofb=1\"}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-4 d-flex flex-column my-2\">\n\t\t\t\t\t\t<label htmlFor=\"image\" className=\"text-left\">Importer une image :<span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={( errors.image ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\tonChange={(e) => addFile(e)}\n\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\tref={register({})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"col-4 d-flex flex-column my-2\">\n\t\t\t\t\t\t<label htmlFor=\"price\" className=\"text-left\">Visage(s) : <span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={\"p-2 \" + ( errors.faceNumber ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname=\"faceNumber\"\n\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\tvalidate: value => value > 0\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.faceNumber && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner le nombre de visage(s).</p></div>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-12 my-2\">\n\t\t\t\t\t<button className={\"btn btn-outline-dark rounded-0 col-12\"} /* onClick={() => handleUpdateInfos()} */>Enregistrer les modifications</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/User_page.js",["316","317"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDetails } from '../../actions/userActions';\nimport { ImSpinner8 } from \"react-icons/im\";\n\nexport default function User_page(props) {\n\n\tconst userDetails = useSelector(state => state.userDetails)\n\tconst { loading, user, orders } = userDetails;\n\n\tconst dispatch = useDispatch()\n\n\tuseEffect(() => {\n\t\tdispatch(getDetails(props.match.params.id))\n\t\treturn () => {\n\t\t}\n\t}, [])\n\n\treturn ( loading ? <div className=\"col-8 loading-spinner-div d-flex justify-content-center align-items-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n        <div className=\"user-infos-page-update col-8\">\n            <div className=\"form d-flex flex-column justify-content-start col-12\">\n                <div className=\"user-form col-12\">\n                    <form id=\"user-form\" className=\"d-flex flex-column\">\n\t\t\t\t\t\t<h4 className=\"text-left font-weight-light\">Infos utilisateur</h4>\n\t\t\t\t\t\t<div className=\"input-group row\">\n\t\t\t\t\t\t\t<div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"userid\" className=\"text-left\">Id</label>\n                                <input\n                                    className={\"p-2 \"}\n                                    defaultValue={ user._id }\n                                    name=\"userid\"\n                                    disabled\n                                />\n                            </div>\n                            <div className=\"col-8 d-flex flex-column my-2\">\n                                <label htmlFor=\"username\" className=\"text-left\">Nom d'utilisateur</label>\n                                <input\n                                    className={\"p-2 \"}\n                                    defaultValue={ user.username }\n                                    name=\"username\"\n                                    disabled\n                                />\n                            </div>\n                            <div className=\"col-4 d-flex flex-column my-2\">\n                                <label htmlFor=\"isadmin\" className=\"text-left\">Statut</label>\n                                <input\n                                    className={\"p-2 \"}\n                                    defaultValue={ user.isAdmin ? \"Admin\" : \"Client\" }\n                                    name=\"isadmin\"\n                                    disabled\n                                />\n                            </div>\n                        </div>\n                        <div className=\"input-group row\">\n                            <div className=\"col-8 d-flex flex-column my-2\">\n                                <label htmlFor=\"lastname\" className=\"text-left\">Nom</label>\n                                <input\n                                    className={\"p-2 \"}\n                                    defaultValue={ user.lastname }\n                                    name=\"lastname\"\n                                    disabled\n                                />\n                            </div>\n                            <div className=\"col-4 d-flex flex-column my-2\">\n                                <label htmlFor=\"firstname\" className=\"text-left\">Prénom</label>\n                                <input\n                                    className={\"p-2 \"}\n                                    defaultValue={ user.firstname }\n                                    name=\"firstname\"\n                                    disabled\n                                />\n                            </div>\n                        </div>\n                        <div className=\"input-group row\">\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"phone\" className=\"text-left\">Téléphone</label>\n                                <input\n                                    className={\"p-2 \"}\n                                    defaultValue={ user.phone }\n                                    name=\"phone\"\n                                    disabled\n                                />\n                            </div>\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"email\" className=\"text-left\">Adresse de messagerie</label>\n                                <input\n                                    className={\"p-2 \"}\n                                    defaultValue={ user.email }\n                                    name=\"email\"\n                                    disabled={true}\n                                    type=\"email\"\n                                    disabled\n                                />\n                            </div>\n\t\t\t\t\t\t</div>\n                        <div className=\"input-group row\">\n                            <div className=\"col-8 d-flex flex-column my-2\">\n                                <label htmlFor=\"created_at\" className=\"text-left\">Date d'inscription</label>\n                                <input\n                                    className={\"p-2 \"}\n                                    defaultValue={ user.date.split(\"T\")[0] }\n                                    name=\"created_at\"\n                                    disabled\n                                />\n                            </div>\n                            <div className=\"col-4 d-flex flex-column my-2\">\n                                <label htmlFor=\"orders\" className=\"text-left\">Commande{orders.length > 1 && \"s\"} passée{orders.length > 1 && \"s\"}</label>\n                                <input\n                                    className={\"p-2 \"}\n                                    defaultValue={ orders.length }\n                                    name=\"orders\"\n                                    disabled\n                                />\n\t\t\t\t\t\t\t</div>\n                            <div className=\"col-12 d-flex justify-content-center align-items-center my-2\">\n                                <label htmlFor=\"newsletter\" className=\"text-left m-0\">Inscrit à la newsletter ?</label>\n                                <input\n                                    className={\"p-2 mx-3 \"}\n                                    defaultValue={user.newsletter}\n                                    type=\"checkbox\"\n                                    defaultChecked={ user.newsletter ? true : false }\n                                    name=\"newsletter\"\n                                    placeholder=\"\"\n                                    disabled\n                                />\n                            </div>\n                        </div>\n                    </form>\n                </div>        \n            </div>\n        </div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Product_page.js",["318","319","320","321"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from \"react-hook-form\";\nimport { CgDanger } from \"react-icons/cg\"\nimport { ImSpinner8 } from \"react-icons/im\"\nimport { addProduct, importProductImage, productDetails, updateProduct } from '../../actions/productActions';\nimport { IoMdAdd } from \"react-icons/io\"\nimport uniqid from 'uniqid'\n\nexport default function Product_page(props) {\n\n    const details = useSelector((state) => state.detailsProduct);\n\tconst { loading, product, error, updateSuccess } = details;\n\t\n\tconst [styles, setStyles] = useState([]);\n\tconst [colors, setColors] = useState([]);\n\tconst [file, setFile] = useState({})\n\n    const dispatch = useDispatch();\n\n    const { register, handleSubmit, errors } = useForm();\n\n\tconst onSubmit = data => {\n\t\tconsole.log(data)\n\t\tconst id = uniqid();\n\n\t\tconst productItem = {\n\t\t\t_id: product._id,\n\t\t\tname: data.name,\n\t\t\tslug: data.slug,\n\t\t\tprice: data.price,\n\t\t\timage: data.image[0] ? \"/product-images/\" + id + \".jpg\" : null,\n\t\t\tcategory: {\n\t\t\t\tstyle: styles,\n\t\t\t\tsize: data.size,\n\t\t\t\tcolors: colors\n\t\t\t},\n\t\t\tfaceNumber: data.faceNumber,\n\t\t\tdescription: data.description\n\t\t}\n\t\tconsole.log(productItem)\n\t\tdispatch(updateProduct(productItem))\n\t\tif (Object.keys(file).length > 0) {\n\t\t\tObject.assign(file, {\n\t\t\t\t_id: id\n\t\t\t})\n\t\t\tdispatch(importProductImage(file))\n\t\t}\n\t};\n\n\tconst onLoadState = () => {\n\t\tsetStyles(product.category.style)\n\t\tsetColors(product.category.colors)\n\t}\n\tconst addStyle = (e) => {\n\t\te.preventDefault();\n\t\tlet style = document.getElementsByClassName('style-input')[0]\n\t\tif (style.value !== \"\") {\n\t\t\tsetStyles([...styles, style.value])\t\t\t\n\t\t}\n\t\tstyle.value = \"\";\n\t}\n\tconst addColor = (e) => {\n\t\te.preventDefault();\n\t\tlet color = document.getElementsByClassName('color-input')[0]\n\t\tsetColors([...colors, color.value])\n\t}\n\tconst deleteStyle = (style) => {\n\t\tlet newStyles = styles.filter(x => x !== style)\n\t\tsetStyles(newStyles)\n\t}\n\tconst deleteColor = (color) => {\n\t\tlet newColors = colors.filter(x => x !== color)\n\t\tsetColors(newColors)\n\t}\n\tconst addFile = (e) => {\n\t\tconst myFile = Object.assign(e.target.files[0], {\n\t\t\tpreview: URL.createObjectURL(e.target.files[0]),\n\t\t})\n\t\tsetFile(myFile)\n\t}\n\n\tuseEffect(() => {\n\t\tconsole.log(\"recharge\")\n\t\tdispatch(productDetails(props.match.params.id, null, null))\n\t\treturn () => {\n\t\t}\n\t}, [updateSuccess])\n\n    return ( loading ? <div className=\"col-8 loading-spinner-div d-flex justify-content-center align-items-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n\t\t<div className=\"col-8\">\n\t\t\t<form id=\"user-form\" className=\"d-flex flex-column\" onLoad={() => onLoadState()} onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<h4 className=\"text-left font-weight-light\">Produit - {product._id}</h4>\n\t\t\t\t<div className=\"input-group row my-4\">\n\t\t\t\t\t<div className=\"col-4 d-flex flex-column my-2\">\n\t\t\t\t\t\t<label htmlFor=\"name\" className=\"text-left\">Nom <span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={\"p-2 \" + ( errors.name ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\tdefaultValue={product.name}\n\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\tvalidate: value => value !== \"\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.name && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner le nom.</p></div>}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-4 d-flex flex-column my-2\">\n\t\t\t\t\t\t<label htmlFor=\"slug\" className=\"text-left\">Slug <span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={\"p-2 \" + ( errors.slug ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\tname=\"slug\"\n\t\t\t\t\t\t\tdefaultValue={product.slug}\n\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\tvalidate: value => value !== \"\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.slug && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner le slug.</p></div>}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-4 d-flex flex-column my-2\">\n\t\t\t\t\t\t<label htmlFor=\"price\" className=\"text-left\">Prix <span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={\"p-2 \" + ( errors.price ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\tname=\"price\"\n\t\t\t\t\t\t\tdefaultValue={product.price}\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\tvalidate: value => value !== \"\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.price && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner le prix.</p></div>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input-group row my-4\">\n\t\t\t\t\t<div className=\"col-12 d-flex flex-column my-2\">\n\t\t\t\t\t\t<label htmlFor=\"description\" className=\"text-left\">Description :<span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tclassName={\"p-2 \" + ( errors.description ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\tdefaultValue={product.description}\n\t\t\t\t\t\t\trows={6}\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\tvalidate: value => value !== \"\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.description && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci d'ajouter une description.</p></div>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input-group row align-items-center my-4 row-category\">\n\t\t\t\t\t<div className=\"col-4 d-flex flex-column my-2 h-100\">\n\t\t\t\t\t\t<label htmlFor=\"size\" className=\"text-left\">Taille :<span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={\"p-2 \" + (errors.size ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\tname=\"size\"\n\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\tdefaultValue={product.category.size}\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\tvalidate: value => value !== \"\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.size && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger size={20} /><p className=\"m-0 ml-1\">Merci de préciser la taille.</p></div>}\n\t\t\t\t\t</div>\t\n\t\t\t\t\t<div className=\"col-4 d-flex flex-column my-2 h-100\">\n\t\t\t\t\t\t<label htmlFor=\"style\" className=\"text-left\">Style(s) :<span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<div className=\"d-flex mb-2\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName={\"p-2 col-10 style-input \" + (errors.style ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\t\tname=\"style\"\n\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\t\trequire: false\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{errors.style && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger size={20} /><p className=\"m-0 ml-1\">Merci d'indiquer le style.</p></div>}\n\t\t\t\t\t\t\t<button className=\"btn btn-dark rounded-0 col-2 p-0\" onClick={(e) => addStyle(e)}><IoMdAdd className=\"m-auto\" size={20}/></button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstyles.map((style, i) => (\n\t\t\t\t\t\t\t\t<span key={i} className=\"style-badge badge badge-warning rounded-0 px-2 py-2 mr-1\" onClick={() => deleteStyle(style)}>{style}</span>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-4 d-flex flex-column align-items-center my-2 h-100\">\n\t\t\t\t\t\t<label htmlFor=\"color\" className=\"text-left\">Couleur(s) :<span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName={\"p-0 color-input rounded-0 \" + (errors.style ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\t\ttype=\"color\"\n\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\t\trequire: false\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button className=\"btn btn-dark rounded-0\" onClick={(e) => addColor(e)}><IoMdAdd className=\"m-auto\" size={20}/></button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"my-2 d-flex justify-content-center w-100\" >\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcolors.map((color, i) => (\n\t\t\t\t\t\t\t\t<div key={i} className=\"color-badge mr-1\" style={{backgroundColor:`${color}`, height:\"1.5rem\", width:\"1.5rem\", borderRadius:\"50%\"}} onClick={() => deleteColor(color)}></div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input-group row align-items-center my-4\">\n\t\t\t\t\t<div className=\"col-4 my-2\">\n\t\t\t\t\t\t<div className=\"product-img m-auto\">\n\t\t\t\t\t\t\t<img src={ Object.keys(file).length === 0 ? product.image : file.preview } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\" col-4 d-flex flex-column my-2\">\n\t\t\t\t\t\t<label htmlFor=\"image\" className=\"text-left\">Changer l'image :<span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={\"input-image-import \" + ( errors.image ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\tonChange={(e) => addFile(e)}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\trequire: false\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"col-4 d-flex flex-column my-2\">\n\t\t\t\t\t\t<label htmlFor=\"price\" className=\"text-left\">Visage(s) : <span className=\"text-danger\">*</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={\"p-2 \" + ( errors.faceNumber ? \"border-danger\" : \"\")}\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tdefaultValue={product.faceNumber}\n\t\t\t\t\t\t\tname=\"faceNumber\"\n\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.faceNumber && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner le nombre de visage(s).</p></div>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-12 my-2\">\n\t\t\t\t\t<button className={\"btn btn-outline-dark rounded-0 col-12\"} /* onClick={() => handleUpdateInfos()} */>Enregistrer les modifications</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Stats.js",[],"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Menu.js",[],"/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Products.js",["322","323","324","325"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { countCollection } from '../../actions/dataActions';\nimport { deleteProduct, listProducts, resetListProducts } from '../../actions/productActions';\nimport Pagination from '../Pagination';\nimport { ImSpinner8 } from \"react-icons/im\";\nimport '../css/Admin.css'\nimport { Link } from 'react-router-dom';\nimport { GoTrashcan } from 'react-icons/go';\n\nexport default function Products(props) {\n\n    const productList = useSelector(state => state.listProducts);\n    const { error, loading, products, deleteSuccess } = productList;\n    const [add, setAdd] = useState(false)\n\n    /** Pagination */ \n    const countDb = useSelector(state => state.countData)\n    const { count } = countDb;\n    const totalProductsInDb = count.count;\n    const page = props.match.params.page ? props.match.params.page.split(\"=\")[1] : 1;    \n    const per_page = 8;\n    const skip = (page * per_page) - per_page\n\n\tconst dispatch = useDispatch();\n\t\n\tconst onDelete = (productId) => {\n\t\tdispatch(deleteProduct(productId))\n\t}\n    \n\tuseEffect(() => {\n        dispatch(countCollection(\"products\"));\n        dispatch(listProducts(skip, per_page));\n        return () => {\n        dispatch(resetListProducts());\n        };\n\t}, [page, deleteSuccess]);\n\t\n\treturn (\n\t\t<div className=\"col-8 d-flex flex-column products-page\">\n\t\t\t<div className=\"d-flex justify-content-between align-items-center mb-5\">\n\t\t\t\t<h4 className=\"text-left m-0\">Liste produits</h4>\n\t\t\t\t<Link to=\"/admin/liste-produits/produit/ajouter-produit\" className=\"btn btn-primary my-auto\">Ajouter</Link>\n\t\t\t</div>\n\t\t\t{\n            \tloading ? <div className=\"loading-spinner-div d-flex justify-content-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n\t\t\t\t<table className=\"table table-striped\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"col\">ID</th>\n\t\t\t\t\t<th scope=\"col\">Montant</th>\n\t\t\t\t\t<th scope=\"col\">Nom</th>\n\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{\n\t\t\t\t\t\tproducts.map((product, i) => (\n\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t<td>{product._id}</td>\n\t\t\t\t\t\t<td>{product.price}</td>\n\t\t\t\t\t\t<td>{product.name}</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<Link to={`/admin/liste-produits/produit/id=${product._id}`} className=\"btn btn-outline-dark\">Détails</Link >\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button className=\"btn btn-outline-danger\" onClick={() => onDelete(product._id)}><GoTrashcan size={20}/></button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t}\t\n            <Pagination url={props.location.pathname} pageName={\"admin/liste-produits\"} page={page} totalInDb={totalProductsInDb} per_page={per_page}/>\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Orders.js",["326","327","328","329","330"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { countCollection } from '../../actions/dataActions';\nimport { listOrders, resetListOrders } from '../../actions/orderActions';\nimport { ImSpinner8 } from \"react-icons/im\";\nimport Pagination from '../Pagination';\nimport { Link } from 'react-router-dom';\n\nexport default function Orders(props) {\n\n    const orderList = useSelector(state => state.listOrders);\n    const { error, loading, orders, deleteSuccess } = orderList;\n\n    /** Pagination */ \n    const countDb = useSelector(state => state.countData)\n\tconst { count } = countDb;\n\t\n    const totalOrdersInDb = count.count;\n    const page = props.match.params.page ? props.match.params.page.split(\"=\")[1] : 1;    \n    const per_page = 8;\n    const skip = (page * per_page) - per_page\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n        dispatch(countCollection(\"orders\"));\n        dispatch(listOrders(skip, per_page));\n\t\treturn () => {\n\t\t\tdispatch(resetListOrders())\n\t\t}\n\t}, [page, ]);\n\n\treturn (\n\t\t<div className=\"col-8 d-flex flex-column orders-page\">\n\t\t\t<h4 className=\"text-left mb-5\">Liste commandes</h4>\n\t\t\t{\n\t\t\t\t<table className=\"table table-striped\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th scope=\"col\">ID</th>\n\t\t\t\t\t\t\t<th scope=\"col\">Montant</th>\n\t\t\t\t\t\t\t<th scope=\"col\">Date</th>\n\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\torders.map((order, i) => (\n\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t<td>{order._id}</td>\n\t\t\t\t\t\t\t\t<td>{order.totalPrice}€</td>\n\t\t\t\t\t\t\t\t<td>{order.created_at.split('T')[0]}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Link to={`/admin/liste-commandes/commande/id=${order._id}`} className=\"btn btn-outline-dark\">Détails</Link >\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t}\t\n            <Pagination url={props.location.pathname} pageName={\"admin/liste-commandes\"} page={page} totalInDb={totalOrdersInDb} per_page={per_page}/>\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Admin/Users.js",["331","332"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { countCollection } from '../../actions/dataActions';\nimport { listUsers, resetListUsers } from '../../actions/userActions';\nimport { ImSpinner8 } from \"react-icons/im\";\nimport Pagination from '../Pagination';\nimport { Link } from 'react-router-dom';\n\nexport default function Users(props) {\n\n    const userList = useSelector(state => state.listUsers);\n\tconst { error, loading, users } = userList;\n\t\n    /** Pagination */ \n    const countDb = useSelector(state => state.countData)\n\tconst { count } = countDb;\n\t\n    const totalUsersInDb = count.count;\n    const page = props.match.params.page ? props.match.params.page.split(\"=\")[1] : 1;    \n    const per_page = 8;\n    const skip = (page * per_page) - per_page\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n        dispatch(countCollection(\"users\"));\n        dispatch(listUsers(skip, per_page));\n\t\treturn () => {\n\t\t\tdispatch(resetListUsers())\n\t\t}\n\t}, [page]);\n\t\n\treturn (\n\t\t<div className=\"col-8 d-flex flex-column users-page\">\n\t\t\t<h4 className=\"text-left mb-5\">Liste utilisateurs</h4>\n\t\t\t{\n\t\t\tloading ? <div className=\"loading-spinner-div d-flex justify-content-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60} /></div> :\n\t\t\t<table className=\"table table-striped\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t<th scope=\"col\">ID</th>\n\t\t\t\t<th scope=\"col\">Prénom</th>\n\t\t\t\t<th scope=\"col\">Nom</th>\n\t\t\t\t<th scope=\"col\">Statut</th>\n\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{\n\t\t\t\t\tusers.map((user, i)=> (\n\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t<td>{user._id}</td>\n\t\t\t\t\t\t<td>{user.lastname}</td>\n\t\t\t\t\t\t<td>{user.firstname}</td>\n\t\t\t\t\t\t<td>Client</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<Link to={`/admin/liste-utilisateurs/utilisateur/id=${user._id}`} className=\"btn btn-outline-dark\">Détails</Link>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t}\n            <Pagination url={props.location.pathname} pageName={\"admin/liste-utilisateurs\"} page={page} totalInDb={totalUsersInDb} per_page={per_page}/>\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/actions/orderActions.js",["333"],"import Axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { getInfos } from \"./userActions\";\n\nconst createOrder = (order) => async (dispatch, getState) => {\n    const { userSignin: { userInfo } } = getState();\n    dispatch({ type: \"ORDER_CREATE_REQUEST\", payload : {order: order, userInfo: userInfo} })\n    try {        \n        const { data: { data: newOrder } } = await Axios.post(\"/api/orders\", { order: order, userInfo: userInfo });\n        dispatch({ type: \"ORDER_CREATE_SUCCESS\", payload: newOrder });\n    } catch (error) {\n        dispatch({ type: \"ORDER_CREATE_FAIL\", payload: error.message });\n    }\n}\n\nconst listOrders = (offset, per_page) => async (dispatch) => {\n    dispatch({ type: \"ORDER_LIST_REQUEST\" });\n    try {\n      const { data } = await Axios.get('/api/orders/list', { params: { offset: offset, per_page: per_page } });\n      dispatch({ type: \"ORDER_LIST_SUCCESS\", payload: data });\n  } catch (error) {\n      dispatch({ type: \"ORDER_LIST_FAIL\", payload: error.message });\n  }\n}\n\nconst resetListOrders = () => (dispatch) => {\n    dispatch({ type: \"ORDER_LIST_RESET\" });\n}\n\nconst resetOrder = () => (dispatch) => {\n    dispatch({ type: \"ORDER_RESET\" });\n} \n\n/* const recupUserOrders = (userId) => async (dispatch, getState) => {\n    dispatch({ type: \"ORDERS_USER_REQUEST\" })\n    try {        \n        const { data } = await Axios.get(`http://localhost:5000/api/orders/user/${userId}`);\n        dispatch({ type: \"ORDERS_USER_SUCCESS\", payload: data });\n    } catch (error) {\n        dispatch({ type: \"ORDERS_USER_FAIL\", payload: error.message });\n    }\n} */\n\nconst importImage = (userId, orderId, folderName, filesName) => async (dispatch, getState) => {\n    dispatch({ type: \"ORDER_PHOTO_REQUEST\" })\n    try {\n        const { data } = await Axios.put(`/api/orders/photoupload/${orderId}&${folderName}`, { filesName: filesName });\n        dispatch({ type: \"ORDER_PHOTO_SUCCESS\", payload: data });\n        dispatch(detailsOrder(orderId));\n        dispatch(getInfos(userId));\n    } catch (error) {\n        dispatch({ type: \"ORDER_PHOTO_FAIL\", payload: error.message });\n    }\n}\n\nconst detailsOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: \"ORDER_DETAILS_REQUEST\", payload : orderId })\n    try {\n        const { data } = await Axios.get(`/api/orders/${orderId}`);\n        dispatch({ type: \"ORDER_DETAILS_SUCCESS\", payload: data });\n    } catch (error) {\n        dispatch({ type: \"ORDER_DETAILS_FAIL\", payload: error.message });\n    }\n}\n\n/* const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  try {\n        dispatch({ type: \"ORDER_PAY_REQUEST\", payload: paymentResult });\n        const { data } = await Axios.put(\"http://localhost:5000/api/orders/\" + order._id + \"/pay\", paymentResult );\n        dispatch({ type: \"ORDER_PAY_SUCCESS\", payload: data })\n  } catch (error) {\n    dispatch({ type: \"ORDER_PAY_FAIL\", payload: error.message });\n  }\n}\n\nconst resetPayOrder = () => (dispatch) => {\n    dispatch({ type: \"ORDER_PAY_RESET\" })\n} */\n\nexport { createOrder, /* resetPayOrder, */ resetListOrders, listOrders, detailsOrder, resetOrder, importImage, /*recupUserOrders, listMyOrders, listOrders, deleteOrder  */};","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Order/components/Upload_Part.js",["334","335","336","337","338"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport uniqid from 'uniqid';\nimport { GoTrashcan } from 'react-icons/go'\nimport { IoMdAdd } from \"react-icons/io\"\nimport {GoCloudUpload} from 'react-icons/go'\nimport Axios from 'axios';\nimport UploadBar from './UploadBar';\nimport { formatBytes } from '../../../helpers/formatBytes';\nimport { MdPhotoSizeSelectActual } from 'react-icons/md'\nimport { GrTextAlignLeft } from 'react-icons/gr';\nimport { FiCheckSquare } from 'react-icons/fi';\nimport { importImage } from '../../../actions/orderActions';\nimport { useDispatch } from 'react-redux';\nimport '../../css/Upload_Part.css'\n\n\nexport default function Upload_Part({order, item, orderId, userId}) {\n\n\tconst dispatch = useDispatch();\n/* FILES */\n\tconst [files, setFiles] = useState([]);\n\tconst [compteur, setCompteur] = useState(item.photoUpload === true ? 0 : item.face);\n\tconst [progress, setProgress] = useState(item.photoUpload === true ? 100 : 0);\n\n\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({\n\t\taccept: \"image/*\",\n\t\tonDrop: (acceptedFiles) => {\n\t\t\tsetFiles(\n\t\t\t\tacceptedFiles.concat(files).map((file, i) => Object.assign(file, {\n\t\t\t\t\tpreview: URL.createObjectURL(file),\n\t\t\t\t\t_id: uniqid()\n\t\t\t\t}))\t\n\t\t\t)\n\t\t}\n\t})\n    const removeFile = (fileId) => {\n\t\tsetFiles(files.filter(file => file._id !== fileId));\n    }\n\n\tconst images = files.map((file, i) => (\n\t\t<div className=\"upload-zone-img d-flex justify-content-around align-items-center border-bottom\" key={i}>\n\t\t\t<img src={file.preview} className=\"col-md-4\"/>\n\t\t\t<div className=\"img-detail text-left col-md-6\">\n\t\t\t\t<h6 className=\"img-name\">Nom : {file.name}</h6>\n\t\t\t\t<h6 className=\"\">Format : {file.type.split('/')[1]}</h6>\n\t\t\t\t<h6>Taille : {formatBytes(file.size)}</h6>\n\t\t\t</div>\n\t\t\t<GoTrashcan size={24} className=\"icon-close col-2\" onClick={() => removeFile(file._id)} />\n\t\t</div>\n\t))\n\n\tconst sendFiles = async () => {\n\t\tconst folderName = `${item.name}-${item.cartItemId}`\n\t\tconst bodyFormData = new FormData();\n\t\tconst filesName = [];\n\t\tfiles.map(file => {\n\t\t\tfilesName.push(file.name)\n\t\t\tbodyFormData.append('image', file)\n\t\t})\n\t\n\t\ttry {\n\t\t\tconst { data } = await Axios.post(`/api/upload/${orderId}&${folderName}`, bodyFormData, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t},\n\t\t\t\tonUploadProgress: progressEvent => {\n\t\t\t\t\tsetProgress(parseInt(Math.round((progressEvent.loaded * 100) / progressEvent.total)));\n\t\t\t\t}\n\t\t\t});\n\t\t\tconsole.log(filesName)\n\t\t\tdispatch(importImage(userId, orderId, folderName, filesName))\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t}\n\n\tconst example = () => {\n\t\tconst myDiv = []\n\t\tfor (let i = 0; i < compteur; i++) {\n\t\t\tmyDiv.push(\n\t\t\t\t<div key={i} className=\"upload-zone-exemple d-flex align-items-center justify-content-around border-bottom\">\n\t\t\t\t\t<MdPhotoSizeSelectActual size={80} />\n\t\t\t\t\t<GrTextAlignLeft size={80} />\n\t\t\t\t\t<GoTrashcan size={24} />\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn myDiv\n\t}\n\tuseEffect(() => {\n\t\tif (!item.photoUpload) {\n\t\t\tsetCompteur(item.face - files.length)\n\t\t}\n\t}, [files])\n\n\treturn (\n\t\t<Fragment>\n\t\t<div className=\"upload-part w-100 d-flex flex-column align-items-center justify-content-center p-0 mb-5 border-bottom\">\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"upload-part-order-resume d-flex p-3 mb-5\">\n\t\t\t\t\t<div className=\"upload-part-order-resume-img m-auto\">\n\t\t\t\t\t\t<img src={item.image} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-7 col-12 p-3 order-infos d-flex flex-column justify-content-center text-left ml-3\">\n\t\t\t\t\t\t<h4>{item.name.split('-')[0]}<span className='font-weight-lighter text-capitalize'> - {item.name.split('-')[1]}</span></h4>\n\t\t\t\t\t\t<p className=\"order-number m-1\">Quantité : {item.qty}</p>\n\t\t\t\t\t\t<p className=\"order-number m-1\">Commande : {order._id}</p>\n\t\t\t\t\t\t<p className=\"order-statut m-1\">Statut : {!item.photoUpload ? <span className=\"text-danger\">En attente</span> : <span className=\"text-success\">Complet</span>}</p>\n\t\t\t\t\t\t<p className=\"order-date font-italic m-1\">{\"Le \" + order.created_at.split('T')[0] + \" à \" + order.created_at.split('T')[1].split('.')[0]}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\titem.photoUpload &&\n                        <div className=\"order-check-icon text-success my-3 d-flex justify-content-center align-items-center\">\n\t\t\t\t\t\t\t<FiCheckSquare size={60}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t!item.photoUpload &&\n\t\t\t\t<div className=\"upload-part-content d-flex align-items-center justify-content-between col-12 mx-0 my-5\">\n\t\t\t\t\t<div {...getRootProps()} onSubmit={() => console.log(\"submit\")} className=\"upload-zone col-md-5 col-12 d-flex flex-column align-items-center justify-content-center\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t{ compteur === 0 ?\n\t\t\t\t\t\tprogress === 0 ?\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<GoCloudUpload size={80} className=\"\"/>\n\t\t\t\t\t\t\t<button className=\"btn btn-dark p-2 text-uppercase rounded-0 mt-3\" onClick={(e) => {e.preventDefault(); sendFiles()}}>Envoyer</button>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<UploadBar progress={progress}/>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<input {...getInputProps()} className=\"col-12\"/>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisDragActive ?\n\t\t\t\t\t\t\t<p>Déposez {item.face > 1 ? \"vos photos\" : \"votre photo\"} ici.</p> :\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<IoMdAdd size={80} className=\"\"/>\n\t\t\t\t\t\t\t\t<p>Cliquez ou déposez {item.face > 1 ? \"vos photos\" : \"votre photo\"} ici.</p>\n\t\t\t\t\t\t\t\t<p>Photo{files.length > 1 && \"s\"} : {files.length}/{item.face}</p>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"upload-details d-flex flex-column col-md-6 col-12 p-0\">\n\t\t\t\t\t\t<div className=\"upload-title text-white p-2  bg-dark d-flex justify-content-between align-items-center\">\n\t\t\t\t\t\t\t<h2 className=\"text-uppercase font-weight-lighter text-justify\">{item.name.split('-')[0]}<span className='font-weight-lighter text-capitalize'> - {item.name.split('-')[1]}</span><br/><span className=\"span-number-file text-lowercase\">{item.face > 1 ? `(${item.face} photos)` : `(${item.face} photo)` }</span></h2>\n\t\t\t\t\t\t\t<h6 className={\"m-0 \" + (item.photoUpload ? \"text-success\" : \"text-danger\")}>{ item.photoUpload ? \"Complet\" : \"En attente\"}</h6>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"upload-img-container d-flex flex-column align-self-stretch\">\n\t\t\t\t\t\t\t{images}\n\t\t\t\t\t\t\t{example()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</Fragment>\t\t\n\t\t</div>\n\t\t\n\t\t</Fragment>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/components/Order/components/UploadBar.js",["339"],"import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux';\n\nexport default function UploadBar({progress}) {\n\n    useEffect(() => {\n        return () => {\n        }\n    }, [progress])\n\n    return (\n        <div className=\"w-100\">\n            {\n                progress > 0 ? \n                <div className=\"progress-bar-div w-75 m-auto\">\n                    <div style={{ width: `${progress}%` }} className=\"progress-bar-span p-2 bg-primary text-center text-white\">{progress}%</div>\n                </div>\n                :\n                null\n            }\n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/Projet info/E-commerce Portfolio/frontend/src/helpers/formatBytes.js",["340"],"function formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nfunction formatSeconds(timeStamp) {\n    let time = timeStamp;\n    if (time < 60) {\n        time = parseFloat(timeStamp).toFixed(0);\n        return time + ' ' + 's';\n    }\n    else {\n        time = parseFloat(timeStamp / 60).toFixed(2);\n        const mn = time.split('.')[0];\n        const s = (time.split('.')[1] / 10) * 60\n        return mn + 'mn ' + s + 's'\n    }\n}\n\nexport { formatBytes, formatSeconds}",{"ruleId":"341","replacedBy":"342"},{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","severity":1,"message":"346","line":10,"column":21,"nodeType":"347","messageId":"348","endLine":10,"endColumn":29},{"ruleId":"349","severity":1,"message":"350","line":45,"column":6,"nodeType":"351","endLine":45,"endColumn":19,"suggestions":"352"},{"ruleId":"353","severity":1,"message":"354","line":57,"column":68,"nodeType":"355","endLine":57,"endColumn":120},{"ruleId":"345","severity":1,"message":"356","line":93,"column":13,"nodeType":"347","messageId":"348","endLine":93,"endColumn":17},{"ruleId":"345","severity":1,"message":"356","line":108,"column":13,"nodeType":"347","messageId":"348","endLine":108,"endColumn":17},{"ruleId":"345","severity":1,"message":"357","line":11,"column":20,"nodeType":"347","messageId":"348","endLine":11,"endColumn":30},{"ruleId":"345","severity":1,"message":"358","line":21,"column":22,"nodeType":"347","messageId":"348","endLine":21,"endColumn":33},{"ruleId":"349","severity":1,"message":"359","line":39,"column":8,"nodeType":"351","endLine":39,"endColumn":18,"suggestions":"360"},{"ruleId":"345","severity":1,"message":"361","line":5,"column":10,"nodeType":"347","messageId":"348","endLine":5,"endColumn":14},{"ruleId":"345","severity":1,"message":"362","line":14,"column":13,"nodeType":"347","messageId":"348","endLine":14,"endColumn":18},{"ruleId":"349","severity":1,"message":"363","line":22,"column":8,"nodeType":"351","endLine":22,"endColumn":10,"suggestions":"364"},{"ruleId":"353","severity":1,"message":"354","line":27,"column":21,"nodeType":"355","endLine":27,"endColumn":80},{"ruleId":"353","severity":1,"message":"354","line":61,"column":33,"nodeType":"355","endLine":61,"endColumn":69},{"ruleId":"353","severity":1,"message":"354","line":76,"column":33,"nodeType":"355","endLine":76,"endColumn":76},{"ruleId":"353","severity":1,"message":"354","line":91,"column":33,"nodeType":"355","endLine":91,"endColumn":78},{"ruleId":"365","severity":1,"message":"366","line":117,"column":37,"nodeType":"355","endLine":117,"endColumn":73},{"ruleId":"365","severity":1,"message":"366","line":122,"column":37,"nodeType":"355","endLine":122,"endColumn":73},{"ruleId":"365","severity":1,"message":"366","line":129,"column":37,"nodeType":"355","endLine":129,"endColumn":73},{"ruleId":"365","severity":1,"message":"366","line":134,"column":37,"nodeType":"355","endLine":134,"endColumn":73},{"ruleId":"365","severity":1,"message":"366","line":141,"column":37,"nodeType":"355","endLine":141,"endColumn":73},{"ruleId":"365","severity":1,"message":"366","line":146,"column":37,"nodeType":"355","endLine":146,"endColumn":73},{"ruleId":"353","severity":1,"message":"354","line":177,"column":37,"nodeType":"355","endLine":177,"endColumn":80},{"ruleId":"367","severity":1,"message":"368","line":36,"column":29,"nodeType":"369","messageId":"370","endLine":49,"endColumn":26},{"ruleId":"345","severity":1,"message":"371","line":4,"column":26,"nodeType":"347","messageId":"348","endLine":4,"endColumn":35},{"ruleId":"345","severity":1,"message":"372","line":15,"column":24,"nodeType":"347","messageId":"348","endLine":15,"endColumn":32},{"ruleId":"345","severity":1,"message":"373","line":15,"column":34,"nodeType":"347","messageId":"348","endLine":15,"endColumn":41},{"ruleId":"345","severity":1,"message":"374","line":15,"column":43,"nodeType":"347","messageId":"348","endLine":15,"endColumn":54},{"ruleId":"345","severity":1,"message":"375","line":3,"column":26,"nodeType":"347","messageId":"348","endLine":3,"endColumn":43},{"ruleId":"345","severity":1,"message":"376","line":8,"column":10,"nodeType":"347","messageId":"348","endLine":8,"endColumn":20},{"ruleId":"345","severity":1,"message":"362","line":16,"column":48,"nodeType":"347","messageId":"348","endLine":16,"endColumn":53},{"ruleId":"349","severity":1,"message":"377","line":35,"column":8,"nodeType":"351","endLine":35,"endColumn":19,"suggestions":"378"},{"ruleId":"353","severity":1,"message":"354","line":55,"column":21,"nodeType":"355","endLine":55,"endColumn":46},{"ruleId":"379","severity":1,"message":"380","line":89,"column":56,"nodeType":"369","messageId":"381","endLine":89,"endColumn":58},{"ruleId":"365","severity":1,"message":"366","line":91,"column":40,"nodeType":"355","endLine":91,"endColumn":77},{"ruleId":"345","severity":1,"message":"346","line":1,"column":28,"nodeType":"347","messageId":"348","endLine":1,"endColumn":36},{"ruleId":"345","severity":1,"message":"361","line":2,"column":10,"nodeType":"347","messageId":"348","endLine":2,"endColumn":14},{"ruleId":"345","severity":1,"message":"382","line":4,"column":10,"nodeType":"347","messageId":"348","endLine":4,"endColumn":25},{"ruleId":"345","severity":1,"message":"376","line":7,"column":10,"nodeType":"347","messageId":"348","endLine":7,"endColumn":20},{"ruleId":"345","severity":1,"message":"383","line":26,"column":11,"nodeType":"347","messageId":"348","endLine":26,"endColumn":15},{"ruleId":"349","severity":1,"message":"384","line":48,"column":8,"nodeType":"351","endLine":48,"endColumn":62,"suggestions":"385"},{"ruleId":"353","severity":1,"message":"354","line":56,"column":25,"nodeType":"355","endLine":56,"endColumn":61},{"ruleId":"353","severity":1,"message":"354","line":62,"column":25,"nodeType":"355","endLine":62,"endColumn":68},{"ruleId":"353","severity":1,"message":"354","line":68,"column":25,"nodeType":"355","endLine":68,"endColumn":70},{"ruleId":"365","severity":1,"message":"366","line":83,"column":29,"nodeType":"355","endLine":83,"endColumn":61},{"ruleId":"349","severity":1,"message":"386","line":22,"column":6,"nodeType":"351","endLine":22,"endColumn":16,"suggestions":"387"},{"ruleId":"365","severity":1,"message":"388","line":28,"column":5,"nodeType":"355","endLine":28,"endColumn":19},{"ruleId":"365","severity":1,"message":"389","line":29,"column":5,"nodeType":"355","endLine":29,"endColumn":21},{"ruleId":"345","severity":1,"message":"390","line":3,"column":26,"nodeType":"347","messageId":"348","endLine":3,"endColumn":37},{"ruleId":"345","severity":1,"message":"391","line":9,"column":23,"nodeType":"347","messageId":"348","endLine":9,"endColumn":33},{"ruleId":"345","severity":1,"message":"373","line":29,"column":34,"nodeType":"347","messageId":"348","endLine":29,"endColumn":41},{"ruleId":"349","severity":1,"message":"392","line":176,"column":8,"nodeType":"351","endLine":176,"endColumn":72,"suggestions":"393"},{"ruleId":"353","severity":1,"message":"354","line":408,"column":37,"nodeType":"355","endLine":408,"endColumn":84},{"ruleId":"353","severity":1,"message":"354","line":409,"column":37,"nodeType":"355","endLine":409,"endColumn":86},{"ruleId":"345","severity":1,"message":"394","line":12,"column":10,"nodeType":"347","messageId":"348","endLine":12,"endColumn":18},{"ruleId":"349","severity":1,"message":"395","line":40,"column":5,"nodeType":"351","endLine":40,"endColumn":25,"suggestions":"396"},{"ruleId":"353","severity":1,"message":"354","line":48,"column":8,"nodeType":"355","endLine":48,"endColumn":49},{"ruleId":"353","severity":1,"message":"354","line":55,"column":8,"nodeType":"355","endLine":55,"endColumn":50},{"ruleId":"365","severity":1,"message":"397","line":72,"column":6,"nodeType":"355","endLine":72,"endColumn":94},{"ruleId":"345","severity":1,"message":"357","line":6,"column":20,"nodeType":"347","messageId":"348","endLine":6,"endColumn":30},{"ruleId":"349","severity":1,"message":"398","line":40,"column":5,"nodeType":"351","endLine":40,"endColumn":15,"suggestions":"399"},{"ruleId":"345","severity":1,"message":"400","line":3,"column":55,"nodeType":"347","messageId":"348","endLine":3,"endColumn":74},{"ruleId":"345","severity":1,"message":"401","line":3,"column":76,"nodeType":"347","messageId":"348","endLine":3,"endColumn":82},{"ruleId":"349","severity":1,"message":"402","line":77,"column":8,"nodeType":"351","endLine":77,"endColumn":78,"suggestions":"403"},{"ruleId":"345","severity":1,"message":"404","line":14,"column":9,"nodeType":"347","messageId":"348","endLine":14,"endColumn":20},{"ruleId":"345","severity":1,"message":"358","line":9,"column":22,"nodeType":"347","messageId":"348","endLine":9,"endColumn":33},{"ruleId":"345","severity":1,"message":"405","line":11,"column":11,"nodeType":"347","messageId":"348","endLine":11,"endColumn":19},{"ruleId":"353","severity":1,"message":"354","line":28,"column":33,"nodeType":"355","endLine":28,"endColumn":95},{"ruleId":"349","severity":1,"message":"406","line":37,"column":8,"nodeType":"351","endLine":37,"endColumn":30,"suggestions":"407"},{"ruleId":"345","severity":1,"message":"358","line":9,"column":19,"nodeType":"347","messageId":"348","endLine":9,"endColumn":30},{"ruleId":"345","severity":1,"message":"405","line":13,"column":11,"nodeType":"347","messageId":"348","endLine":13,"endColumn":19},{"ruleId":"349","severity":1,"message":"408","line":25,"column":5,"nodeType":"351","endLine":25,"endColumn":7,"suggestions":"409"},{"ruleId":"365","severity":1,"message":"397","line":36,"column":7,"nodeType":"355","endLine":36,"endColumn":95},{"ruleId":"349","severity":1,"message":"410","line":17,"column":5,"nodeType":"351","endLine":17,"endColumn":7,"suggestions":"411"},{"ruleId":"353","severity":1,"message":"354","line":52,"column":10,"nodeType":"355","endLine":52,"endColumn":34},{"ruleId":"353","severity":1,"message":"354","line":70,"column":10,"nodeType":"355","endLine":70,"endColumn":93},{"ruleId":"345","severity":1,"message":"412","line":1,"column":10,"nodeType":"347","messageId":"348","endLine":1,"endColumn":18},{"ruleId":"345","severity":1,"message":"356","line":70,"column":17,"nodeType":"347","messageId":"348","endLine":70,"endColumn":21},{"ruleId":"345","severity":1,"message":"356","line":82,"column":17,"nodeType":"347","messageId":"348","endLine":82,"endColumn":21},{"ruleId":"345","severity":1,"message":"413","line":1,"column":17,"nodeType":"347","messageId":"348","endLine":1,"endColumn":25},{"ruleId":"349","severity":1,"message":"414","line":12,"column":5,"nodeType":"351","endLine":12,"endColumn":7,"suggestions":"415"},{"ruleId":"349","severity":1,"message":"416","line":33,"column":8,"nodeType":"351","endLine":33,"endColumn":25,"suggestions":"417"},{"ruleId":"418","severity":1,"message":"419","line":35,"column":25,"nodeType":"420","messageId":"421","endLine":35,"endColumn":27},{"ruleId":"418","severity":1,"message":"419","line":35,"column":34,"nodeType":"420","messageId":"421","endLine":35,"endColumn":36},{"ruleId":"349","severity":1,"message":"410","line":17,"column":5,"nodeType":"351","endLine":17,"endColumn":7,"suggestions":"422"},{"ruleId":"353","severity":1,"message":"354","line":52,"column":10,"nodeType":"355","endLine":52,"endColumn":34},{"ruleId":"353","severity":1,"message":"354","line":70,"column":10,"nodeType":"355","endLine":70,"endColumn":93},{"ruleId":"345","severity":1,"message":"423","line":2,"column":23,"nodeType":"347","messageId":"348","endLine":2,"endColumn":34},{"ruleId":"345","severity":1,"message":"376","line":5,"column":10,"nodeType":"347","messageId":"348","endLine":5,"endColumn":20},{"ruleId":"345","severity":1,"message":"424","line":6,"column":42,"nodeType":"347","messageId":"348","endLine":6,"endColumn":56},{"ruleId":"353","severity":1,"message":"354","line":195,"column":8,"nodeType":"355","endLine":195,"endColumn":221},{"ruleId":"349","severity":1,"message":"410","line":17,"column":5,"nodeType":"351","endLine":17,"endColumn":7,"suggestions":"425"},{"ruleId":"426","severity":1,"message":"427","line":92,"column":37,"nodeType":"428","endLine":92,"endColumn":45},{"ruleId":"345","severity":1,"message":"429","line":6,"column":10,"nodeType":"347","messageId":"348","endLine":6,"endColumn":20},{"ruleId":"345","severity":1,"message":"362","line":13,"column":28,"nodeType":"347","messageId":"348","endLine":13,"endColumn":33},{"ruleId":"349","severity":1,"message":"410","line":88,"column":5,"nodeType":"351","endLine":88,"endColumn":20,"suggestions":"430"},{"ruleId":"353","severity":1,"message":"354","line":211,"column":8,"nodeType":"355","endLine":211,"endColumn":85},{"ruleId":"345","severity":1,"message":"362","line":14,"column":13,"nodeType":"347","messageId":"348","endLine":14,"endColumn":18},{"ruleId":"345","severity":1,"message":"431","line":15,"column":12,"nodeType":"347","messageId":"348","endLine":15,"endColumn":15},{"ruleId":"345","severity":1,"message":"432","line":15,"column":17,"nodeType":"347","messageId":"348","endLine":15,"endColumn":23},{"ruleId":"349","severity":1,"message":"433","line":37,"column":5,"nodeType":"351","endLine":37,"endColumn":26,"suggestions":"434"},{"ruleId":"345","severity":1,"message":"376","line":5,"column":10,"nodeType":"347","messageId":"348","endLine":5,"endColumn":20},{"ruleId":"345","severity":1,"message":"362","line":12,"column":13,"nodeType":"347","messageId":"348","endLine":12,"endColumn":18},{"ruleId":"345","severity":1,"message":"435","line":12,"column":20,"nodeType":"347","messageId":"348","endLine":12,"endColumn":27},{"ruleId":"345","severity":1,"message":"436","line":12,"column":37,"nodeType":"347","messageId":"348","endLine":12,"endColumn":50},{"ruleId":"349","severity":1,"message":"433","line":31,"column":5,"nodeType":"351","endLine":31,"endColumn":13,"suggestions":"437"},{"ruleId":"345","severity":1,"message":"362","line":12,"column":10,"nodeType":"347","messageId":"348","endLine":12,"endColumn":15},{"ruleId":"349","severity":1,"message":"433","line":31,"column":5,"nodeType":"351","endLine":31,"endColumn":11,"suggestions":"438"},{"ruleId":"345","severity":1,"message":"439","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":14},{"ruleId":"353","severity":1,"message":"354","line":43,"column":4,"nodeType":"355","endLine":43,"endColumn":50},{"ruleId":"379","severity":1,"message":"440","line":57,"column":18,"nodeType":"369","messageId":"441","endLine":57,"endColumn":20},{"ruleId":"345","severity":1,"message":"356","line":63,"column":12,"nodeType":"347","messageId":"348","endLine":63,"endColumn":16},{"ruleId":"349","severity":1,"message":"442","line":96,"column":5,"nodeType":"351","endLine":96,"endColumn":12,"suggestions":"443"},{"ruleId":"353","severity":1,"message":"354","line":104,"column":7,"nodeType":"355","endLine":104,"endColumn":31},{"ruleId":"345","severity":1,"message":"423","line":2,"column":10,"nodeType":"347","messageId":"348","endLine":2,"endColumn":21},{"ruleId":"444","severity":1,"message":"445","line":14,"column":27,"nodeType":"446","messageId":"447","endLine":14,"endColumn":28},"no-native-reassign",["448"],"no-negated-in-lhs",["449"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["450"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is assigned a value but never used.","'resetInfos' is defined but never used.","'userDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["451"],"'Link' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'products'. Either include them or remove the dependency array.",["452"],"react/jsx-pascal-case","Imported JSX component Modele_Card must be in PascalCase or SCREAMING_SNAKE_CASE","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'payload', 'payload', 'payload'.","ArrowFunctionExpression","unsafeRefs","'addToCart' is defined but never used.","'shipping' is assigned a value but never used.","'payment' is assigned a value but never used.","'cookieItems' is assigned a value but never used.","'resetListProducts' is defined but never used.","'ImSpinner8' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.slug'. Either include them or remove the dependency array.",["453"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'countCollection' is defined but never used.","'test' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'products', and 'skip'. Either include them or remove the dependency array.",["454"],"React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["455"],"Imported JSX component Signin_Page must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Register_Page must be in PascalCase or SCREAMING_SNAKE_CASE","'savePayment' is defined but never used.","'resetOrder' is defined but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["456"],"'getInfos' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'order', and 'props.match.params.id'. Either include them or remove the dependency array.",["457"],"Imported JSX component Upload_Part must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has missing dependencies: 'dispatch', 'props.history', and 'userDetails'. Either include them or remove the dependency array.",["458"],"'resetUpdateUserName' is defined but never used.","'signin' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'newPassword2', 'updateUsername', and 'userDetails'. Either include them or remove the dependency array. You can also do a functional update 'setUpdateUsername(u => ...)' if you only need 'updateUsername' in the 'setUpdateUsername' call.",["459"],"'checkActive' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userInfo._id'. Either include them or remove the dependency array.",["460"],"React Hook useEffect has missing dependencies: 'photoToUpload' and 'userOrders'. Either include them or remove the dependency array. You can also do a functional update 'setPhotoToUpload(p => ...)' if you only need 'photoToUpload' in the 'setPhotoToUpload' call.",["461"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["462"],"'DataSync' is defined but never used.","'Fragment' is defined but never used.","React Hook useEffect has a missing dependency: 'queryFilter'. Either include it or remove the dependency array.",["463"],"React Hook useEffect has missing dependencies: 'dispatch', 'password', and 'username'. Either include them or remove the dependency array.",["464"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator",["465"],"'useSelector' is defined but never used.","'productDetails' is defined but never used.",["466"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'addProduct' is defined but never used.",["467"],"'add' is assigned a value but never used.","'setAdd' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'skip'. Either include them or remove the dependency array.",["468"],"'loading' is assigned a value but never used.","'deleteSuccess' is assigned a value but never used.",["469"],["470"],"'Cookie' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'item.face' and 'item.photoUpload'. Either include them or remove the dependency array. If 'setCompteur' needs the current value of 'item.face', you can also switch to useReducer instead of useState and read 'item.face' in the reducer.",["471"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},{"desc":"492","fix":"493"},{"desc":"494","fix":"495"},{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"496","fix":"502"},{"desc":"496","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"508","fix":"510"},{"desc":"511","fix":"512"},"Update the dependencies array to be: [cookieItems, dispatch]",{"range":"513","text":"514"},"Update the dependencies array to be: [dispatch, props.history, userInfo]",{"range":"515","text":"516"},"Update the dependencies array to be: [dispatch, products]",{"range":"517","text":"518"},"Update the dependencies array to be: [dispatch, productId, props.match.params.slug]",{"range":"519","text":"520"},"Update the dependencies array to be: [pageQuery, styleQuery, sizeQuery, maxQuery, minQuery, products, dispatch, skip]",{"range":"521","text":"522"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"523","text":"524"},"Update the dependencies array to be: [userInfo, orderIsValidate, sdkReady, order, cartItems, success, props.history]",{"range":"525","text":"526"},"Update the dependencies array to be: [dispatch, order, orderPhotoToUpload, props.match.params.id]",{"range":"527","text":"528"},"Update the dependencies array to be: [dispatch, props.history, userDetails, userInfo]",{"range":"529","text":"530"},"Update the dependencies array to be: [validate, passwordVerifyError, usernameAlreadyUse, success, userInfo, userDetails, dispatch, newPassword2, updateUsername]",{"range":"531","text":"532"},"Update the dependencies array to be: [userDetails, success, dispatch, userInfo._id]",{"range":"533","text":"534"},"Update the dependencies array to be: [photoToUpload, userOrders]",{"range":"535","text":"536"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"537","text":"538"},"Update the dependencies array to be: [queryFilter]",{"range":"539","text":"540"},"Update the dependencies array to be: [dispatch, error, password, userInfo, username]",{"range":"541","text":"542"},{"range":"543","text":"538"},{"range":"544","text":"538"},"Update the dependencies array to be: [dispatch, props.match.params.id, updateSuccess]",{"range":"545","text":"546"},"Update the dependencies array to be: [page, deleteSuccess, dispatch, skip]",{"range":"547","text":"548"},"Update the dependencies array to be: [dispatch, page, skip]",{"range":"549","text":"550"},{"range":"551","text":"550"},"Update the dependencies array to be: [files, item.face, item.photoUpload]",{"range":"552","text":"553"},[1720,1733],"[cookieItems, dispatch]",[1199,1209],"[dispatch, props.history, userInfo]",[737,739],"[dispatch, products]",[1121,1132],"[dispatch, productId, props.match.params.slug]",[1688,1742],"[pageQuery, styleQuery, sizeQuery, maxQuery, minQuery, products, dispatch, skip]",[619,629],"[props.history, redirect, userInfo]",[6166,6230],"[userInfo, orderIsValidate, sdkReady, order, cartItems, success, props.history]",[1305,1325],"[dispatch, order, orderPhotoToUpload, props.match.params.id]",[1260,1270],"[dispatch, props.history, userDetails, userInfo]",[3079,3149],"[validate, passwordVerifyError, usernameAlreadyUse, success, userInfo, userDetails, dispatch, newPassword2, updateUsername]",[1206,1228],"[userDetails, success, dispatch, userInfo._id]",[668,670],"[photoToUpload, userOrders]",[492,494],"[dispatch, props.match.params.id]",[326,328],"[queryFilter]",[1004,1021],"[dispatch, error, password, userInfo, username]",[492,494],[477,479],[2380,2395],"[dispatch, props.match.params.id, updateSuccess]",[1304,1325],"[page, deleteSuccess, dispatch, skip]",[1041,1049],"[dispatch, page, skip]",[1012,1018],[3081,3088],"[files, item.face, item.photoUpload]"]