[{"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/index.js":"1","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/reportWebVitals.js":"2","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/App.js":"3","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/actions/userActions.js":"4","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/store.js":"5","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/reducers/userReducers.js":"6","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/reducers/productReducers.js":"7","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/actions/productActions.js":"8","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/reducers/cartReducers.js":"9","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/actions/cartActions.js":"10","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/reducers/dataReducers.js":"11","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/actions/dataActions.js":"12","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Cart/Cart.js":"13","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Modele/Modeles_Page.js":"14","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Modele/Modele_Page.js":"15","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Modele/Modele_Card.js":"16","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Connexion/Connexion_Page.js":"17","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Connexion/Register_Page.js":"18","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Connexion/Signin_Page.js":"19","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Home_Page.js":"20","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/actions/orderActions.js":"21","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/reducers/orderReducers.js":"22","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/Dashboard.js":"23","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/UserOrders.js":"24","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/OrderDetails_Page.js":"25","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Cart/useVisible.js":"26","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Order/Upload_Page.js":"27","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Order/PlaceOrder_Page.js":"28","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Cart/delete/CartItems.js":"29","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Order/components/Upload_Part.js":"30","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Order/components/UploadBar.js":"31","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/helpers/formatBytes.js":"32","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/Menu.js":"33","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/Account.js":"34","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/Infos.js":"35","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/delete/Password_Update.js":"36","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/Upload_Photo_Dashboard.js":"37","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Admin/Admin_dashboard.js":"38","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Admin/Menu.js":"39","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Admin/Users.js":"40","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Admin/Products.js":"41","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Admin/Stats.js":"42","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Admin/Orders.js":"43","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Pagination.js":"44","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Admin/Product_page.js":"45"},{"size":572,"mtime":1607347866066,"results":"46","hashOfConfig":"47"},{"size":362,"mtime":1607192535869,"results":"48","hashOfConfig":"47"},{"size":4970,"mtime":1610217460096,"results":"49","hashOfConfig":"47"},{"size":3827,"mtime":1610115193307,"results":"50","hashOfConfig":"47"},{"size":1998,"mtime":1610115198568,"results":"51","hashOfConfig":"47"},{"size":3287,"mtime":1610115055595,"results":"52","hashOfConfig":"47"},{"size":1094,"mtime":1610216534693,"results":"53","hashOfConfig":"47"},{"size":1137,"mtime":1610235621488,"results":"54","hashOfConfig":"47"},{"size":2671,"mtime":1609944012284,"results":"55","hashOfConfig":"47"},{"size":3457,"mtime":1609927527050,"results":"56","hashOfConfig":"47"},{"size":413,"mtime":1607465987480,"results":"57","hashOfConfig":"47"},{"size":424,"mtime":1607509594982,"results":"58","hashOfConfig":"47"},{"size":6269,"mtime":1609953341047,"results":"59","hashOfConfig":"47"},{"size":2741,"mtime":1610217154216,"results":"60","hashOfConfig":"47"},{"size":4695,"mtime":1610235624665,"results":"61","hashOfConfig":"47"},{"size":2683,"mtime":1610033962474,"results":"62","hashOfConfig":"47"},{"size":747,"mtime":1609441578354,"results":"63","hashOfConfig":"47"},{"size":3757,"mtime":1609442512533,"results":"64","hashOfConfig":"47"},{"size":1943,"mtime":1609442513368,"results":"65","hashOfConfig":"47"},{"size":2819,"mtime":1609955602004,"results":"66","hashOfConfig":"47"},{"size":2733,"mtime":1610139420659,"results":"67","hashOfConfig":"47"},{"size":2188,"mtime":1610122034446,"results":"68","hashOfConfig":"47"},{"size":2263,"mtime":1610143092500,"results":"69","hashOfConfig":"47"},{"size":2436,"mtime":1610197858304,"results":"70","hashOfConfig":"47"},{"size":503,"mtime":1609952768288,"results":"71","hashOfConfig":"47"},{"size":601,"mtime":1609538332481,"results":"72","hashOfConfig":"47"},{"size":3048,"mtime":1610145777325,"results":"73","hashOfConfig":"47"},{"size":28026,"mtime":1610124292884,"results":"74","hashOfConfig":"47"},{"size":4072,"mtime":1609805019511,"results":"75","hashOfConfig":"47"},{"size":6907,"mtime":1610145778123,"results":"76","hashOfConfig":"47"},{"size":607,"mtime":1609865239643,"results":"77","hashOfConfig":"47"},{"size":767,"mtime":1609867125917,"results":"78","hashOfConfig":"47"},{"size":2003,"mtime":1610143000824,"results":"79","hashOfConfig":"47"},{"size":9949,"mtime":1610113071797,"results":"80","hashOfConfig":"47"},{"size":10321,"mtime":1610235625708,"results":"81","hashOfConfig":"47"},{"size":4726,"mtime":1610065716856,"results":"82","hashOfConfig":"47"},{"size":1775,"mtime":1610198039430,"results":"83","hashOfConfig":"47"},{"size":2355,"mtime":1610235620764,"results":"84","hashOfConfig":"47"},{"size":1975,"mtime":1610213076565,"results":"85","hashOfConfig":"47"},{"size":1003,"mtime":1610213456586,"results":"86","hashOfConfig":"47"},{"size":2516,"mtime":1610235619983,"results":"87","hashOfConfig":"47"},{"size":115,"mtime":1610213094225,"results":"88","hashOfConfig":"47"},{"size":1023,"mtime":1610213541507,"results":"89","hashOfConfig":"47"},{"size":578,"mtime":1610218177749,"results":"90","hashOfConfig":"47"},{"size":7493,"mtime":1610235626988,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1cwcp8e",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"94"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/index.js",[],["203","204"],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/reportWebVitals.js",[],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/App.js",["205","206","207"],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/actions/userActions.js",["208","209"],"import Axios from \"axios\";\nimport Cookie from 'js-cookie';\n\n/* export const userSignin = (infos) => {\n    return {\n        type: 'USER_SIGNIN',\n        payload: infos\n    }\n} */\nconst getInfos = (userId) => async (dispatch) => {\n  dispatch({ type: \"USER_INFOS_REQUEST\"});\n  try {\n    const { data } = await Axios.get(`http://localhost:5000/api/users/${userId}`);\n    dispatch({ type: \"USER_INFOS_SUCCESS\", payload: data });\n  } catch (error) {\n    dispatch({ type: \"USER_INFOS_FAIL\", payload: error.message });\n  }\n}\n\nconst resetInfos = () => (dispatch) => {\n  dispatch({ type: \"USER_INFOS_RESET\" });\n    dispatch({ type: \"USER_UPDATE_INFOS_RESET\" });\n\n}\n\nconst updateInfos = (userId, lastname, firstname, phone, newsletter) => async (dispatch) => {\n  dispatch({ type: \"USER_UPDATE_INFOS_REQUEST\"});\n  try {\n    await Axios.put(`http://localhost:5000/api/users/${userId}/updateinfos`, { lastname, firstname, phone, newsletter });\n    dispatch({ type: \"USER_UPDATE_INFOS_SUCCESS\" });\n  } catch (error) {\n    dispatch({ type: \"USER_UPDATE_INFOS_FAIL\", payload: error.message });\n  }\n}\n\nconst register = (lastname, firstname, email, password, newsletter) => async (dispatch) => {\n  dispatch({ type: \"USER_REGISTER_REQUEST\", payload: { lastname, firstname, email, password, newsletter } });\n  try {\n    const { data } = await Axios.post(\"http://localhost:5000/api/users/register\", { lastname, firstname, email, password, newsletter });\n    dispatch({ type: \"USER_REGISTER_SUCCESS\", payload: data });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({ type: \"USER_REGISTER_FAIL\", payload: error.message });\n  }\n}\n\nconst signin = (email, password) => async (dispatch) => {\n  dispatch({ type: \"USER_SIGNIN_REQUEST\", payload: { email, password } });\n  try {\n    const { data } = await Axios.post(\"http://localhost:5000/api/users/login\", { email, password });\n    dispatch({ type: \"USER_SIGNIN_SUCCESS\", payload: data });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({ type: \"USER_SIGNIN_FAIL\", payload: error.message });\n  }\n}\n\nconst checkPassword = (userId, password) => async (dispatch) => {\n  dispatch({ type: \"CHECK_PASSWORD_REQUEST\", payload: { userId, password } });\n  try {\n    const { data } = await Axios.post(\"http://localhost:5000/api/users/passwordcheck\", { userId, password });\n    dispatch({ type: \"CHECK_PASSWORD_SUCCESS\", payload: data });\n  } catch (error) {\n    dispatch({ type: \"CHECK_PASSWORD_FAIL\", payload: error.message });\n  }\n}\n\nconst updatePassword = (userId, newPassword) => async (dispatch) => {\n  dispatch({ type: \"UPDATE_PASSWORD_REQUEST\" });\n  try {\n    const { data } = await Axios.put(`http://localhost:5000/api/users/${userId}/updatepassword`, { newPassword });\n    dispatch({ type: \"UPDATE_PASSWORD_SUCCESS\" });\n    dispatch({ type: \"CHECK_PASSWORD_RESET\"}); \n  } catch (error) {\n    dispatch({ type: \"UPDATE_PASSWORD_FAIL\", payload: error.message });\n  } \n}\n\nconst passwordCheckReset = () => (dispatch) => {\n    dispatch({ type: \"CHECK_PASSWORD_RESET\"});  \n}\n\nconst updateUserName = (userId, newUserName) => async (dispatch) => {\n  dispatch({ type: \"UPDATE_USERNAME_REQUEST\" });\n  try {\n    const { data } = await Axios.put(`http://localhost:5000/api/users/${userId}/updateusername`, { newUserName });\n    dispatch({ type: \"UPDATE_USERNAME_SUCCESS\" });\n    dispatch({ type: \"UPDATE_USERNAME_RESET\" });\n    dispatch({ type: \"CHECK_PASSWORD_RESET\"});\n  } catch (error) {\n    dispatch({ type: \"UPDATE_USERNAME_FAIL\", payload: { message : \"Nom d'utilisateur déjà utilisé.\" } });\n  }\n}\n\nconst logout = () => (dispatch) => {\n  Cookie.remove(\"userInfo\");\n  dispatch({ type: \"USER_LOGOUT\" })\n}\n\nexport { getInfos, updateInfos, resetInfos, signin, register, checkPassword, passwordCheckReset, logout, updatePassword, updateUserName};","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/store.js",[],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/reducers/userReducers.js",[],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/reducers/productReducers.js",[],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/actions/productActions.js",["210"],"import { DataSync } from 'aws-sdk';\nimport Axios from 'axios';\n\nconst listProducts = (offset, per_page) => async (dispatch) => {\n    dispatch({ type: \"PRODUCT_LIST_REQUEST\" });\n    try {\n      const { data } = await Axios.get('http://localhost:5000/api/products/list', { params: { offset: offset, per_page: per_page } });\n      dispatch({ type: \"PRODUCT_LIST_SUCCESS\", payload: data });\n  } catch (error) {\n      dispatch({ type: \"PRODUCT_LIST_FAIL\", payload: error.message });\n  }\n}\n\nconst resetListProducts = () => (dispatch) => {\n    dispatch({ type: \"PRODUCT_LIST_RESET\" });\n}\n\nconst productDetails = (productId, slug, faceNumber) => async (dispatch) => {\n    dispatch({ type: \"PRODUCT_DETAILS_REQUEST\" });\n    try {\n        const { data } = await Axios.get('http://localhost:5000/api/products/details', { params: { productId: productId, slug: slug, faceNumber: faceNumber } });\n        console.log(data)\n      dispatch({ type: \"PRODUCT_DETAILS_SUCCESS\", payload: data });\n  } catch (error) {\n      dispatch({ type: \"PRODUCT_DETAILS_FAIL\", payload: error.message });\n  }\n}\n\nexport { listProducts, productDetails, resetListProducts };","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/reducers/cartReducers.js",[],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/actions/cartActions.js",["211"],"import Axios from 'axios';\nimport Cookie from 'js-cookie';\nimport uniqid from 'uniqid';\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n    try {\n        const { data } = await Axios.get('http://localhost:5000/api/products/details', { params: { id: productId } });\n        dispatch({\n        type: \"CART_ADD_ITEM\",\n        payload: {\n            _id: data.product._id,\n            cartItemId: uniqid(),\n            qty\n        }\n        });  \n        dispatch({ type: \"CHECK_QTY_ITEM_NULL\" })\n        const { cart: { cookieItems } } = getState();\n        Cookie.set(\"cartItems\", JSON.stringify(cookieItems));\n    } catch (error) {\n        //\n    }\n}\n\nconst recupCartDetails = () => async (dispatch, getState) => {\n    const { cart: { cookieItems } } = getState();\n    let payload = []\n    let ids = [];\n    for (let i = 0; i < cookieItems.length; i++) {\n        let item = cookieItems[i];\n        ids = [...ids, item._id]\n    }\n\n    try {\n        const { data } = await Axios.get('http://localhost:5000/api/products/cartDetails', { params: { ids: ids } })\n        for (let i = 0; i < data.products.length; i++) {\n            cookieItems.map(x => x._id === data.products[i]._id ?\n                payload = [...payload,\n                {\n                    _id: data.products[i]._id,\n                    cartItemId: x.cartItemId,\n                    name: data.products[i].name,\n                    slug: data.products[i].slug,\n                    faceNumber: data.products[i].faceNumber,\n                    category: data.products[i].category,\n                    image: data.products[i].image,\n                    price: data.products[i].price,\n                    qty: x.qty\n                }]\n                : payload\n            )\n        }\n        dispatch({\n            type: \"CART_DETAILS_ITEM\",\n            payload: payload\n        });    \n    } catch (error) {\n        //\n    }\n}\n\nconst setQty = (cartItemId, qty) => (dispatch, getState) => {\n    try {\n        dispatch({\n        type: \"CART_SET_QTY\",\n        payload: {\n            cartItemId: cartItemId,\n            qty\n        }\n        });    \n        dispatch({ type: \"CHECK_QTY_ITEM_NULL\" })\n        const { cart: { cookieItems } } = getState();\n        Cookie.set(\"cartItems\", JSON.stringify(cookieItems));\n    } catch (error) {\n        //\n    }\n}\n\nconst removeFromCart = (product) => (dispatch, getState) => {\n    dispatch({\n        type: \"CART_REMOVE_ITEM\",\n        payload: {\n            cartItemId: product.cartItemId,\n        }\n    });\n    const { cart: { cookieItems } } = getState();\n\n    Cookie.set(\"cartItems\", JSON.stringify(cookieItems));\n}\n\nconst saveShipping = (data) => (dispatch, getState) => {\n    dispatch({\n        type: \"CART_SAVE_SHIPPING\",\n        payload: data,\n    });\n    const { cart: { shipping } } = getState();\n    console.log(shipping)\n    Cookie.set(\"shipping\", JSON.stringify(shipping));\n}\n\nconst savePayment = (data) => (dispatch, getState) => {\n    dispatch({\n        type: \"CART_SAVE_PAYMENT\",\n        payload: data,\n    });\n    const { cart: { payment } } = getState();\n    Cookie.set(\"payment\", JSON.stringify(payment));\n}\n\nconst resetCart = () => (dispatch, getState) => {\n    dispatch({ type: \"CART_RESET_ITEMS\" })\n    const { cart: { cookieItems } } = getState();\n    Cookie.set(\"cartItems\", JSON.stringify(cookieItems));\n}\n\nexport { addToCart, removeFromCart, setQty, saveShipping, savePayment, resetCart, recupCartDetails };","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/reducers/dataReducers.js",[],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/actions/dataActions.js",[],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Cart/Cart.js",["212","213","214","215","216","217","218"],"import React, { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { removeFromCart, addToCart, setQty } from '../../actions/cartActions'\nimport { IoMdAdd } from \"react-icons/io\"\nimport { BiMinus } from \"react-icons/bi\"\nimport { GoTrashcan } from 'react-icons/go'\nimport '../css/Cart.css'\n\nimport CartItems from './delete/CartItems';\nimport Axios from 'axios';\n\nexport default function Cart({isVisible, setIsVisible}) {\n\n    const dispatch = useDispatch();\n\n    const cart = useSelector((state) => state.cart);\n    const { cartItems, shipping, payment, cookieItems} = cart;\n        \n    const totalCart = () => {\n        return cartItems.reduce((total, cartItems) => {\n            return total + (cartItems.price * cartItems.qty)\n        }, 0).toFixed(2)\n    }\n\n    const numbItemsInCart = () => {\n        return cartItems.reduce((total, cartItems) => {\n        return total + (1 * cartItems.qty)\n        }, 0)\n    }\n\n    const itemsNumb = numbItemsInCart();\n    const tva = ((Number(totalCart()) / 120) * 20).toFixed(2);\n    const shippingPrice = Number(totalCart()) > 50 ? 0 : 4.99;\n    const total = (Number(totalCart()) + Number(shippingPrice)).toFixed(2);\n    \n\n\n    useEffect(() => {\n        return () => {\n        }\n    }, [])\n\n    const removeCartItem = (product) => {\n        dispatch(removeFromCart(product))\n    }\n\n    return (\n        <div className=\"cart-component row flex-column align-items-center p-0\">\n            <h3 className=\"cart-title px-2 m-0 my-2 font-weight-normal col-12 text-left\">Votre panier <span>({numbItemsInCart()} article{numbItemsInCart() > 1 ? \"s\" : \"\"})</span></h3>\n            {\n            cartItems.length > 0 ?\n            <Fragment>\n            <table className=\"table table-bordered text-left m-0\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Produit{numbItemsInCart() > 1 ? \"s\" : \"\"} <span className=\"font-weight-light\">({itemsNumb} article{numbItemsInCart() > 1 ? \"s\" : \"\"})</span></th>\n                        <th scope=\"col\">Total</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {                \n                    cartItems.map((product) => ( \n                        product.qty > 0 &&\n                        <tr className=\"table-product-row\" key={product.cartItemId}>\n                            <td className=\"cart-product-title d-flex align-items-center justify-content-around\">\n                                <Link to={`/modele/${product.slug}/${product.faceNumber}-pers`} className=\"text-left text-uppercase\">{product.name}\n                                    <span className=\"font-weight-light text-lowercase\"><br/>- {product.faceNumber} pers.</span>\n                                </Link >\n                                <span className=\"span-qty font-weight-bold\">(x {product.qty})</span>\n                                <div className=\"cart-product-qty d-flex justify-content-around align-items-center p-0\">\n                                    <IoMdAdd size={40} className=\"add-icon\" onClick={() => dispatch(setQty(product.cartItemId, 1))}/>\n                                    <BiMinus size={40} className=\"minus-icon\" onClick={() => dispatch(setQty(product.cartItemId, -1))}/>\n                                </div>\n                            </td>\n                            <td className=\"p-0 text-center\">\n                                <span>{product.price}€</span>\n                                <GoTrashcan size={22} className=\"icon-close ml-3\" onClick={() => removeCartItem(product)} />\n                            </td>\n                        </tr>\n                        ))\n                    }\n\n                    <tr>\n                        <th scope=\"row\">Sous-total</th>\n                        <td>{Number(total - shippingPrice).toFixed(2)}€</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Expédition</th>\n                        <td>{Number(shippingPrice).toFixed(2)}€</td>\n                    </tr>\n                    <tr>\n                        <th className=\"table-total-th\" scope=\"row\">Total</th>\n                        <td className=\"table-total-td font-weight-bold\">{Number(total).toFixed(2)}€ <br/><span className=\"span-tva\">(dont {tva}€ TVA)</span></td>\n                    </tr>\n                </tbody>\n            </table>     \n            <div className=\"cart-total col-12 p-0\"><Link  to=\"/connexion?redirect=shipping\"  to=\"/commande\" onClick={() => setIsVisible(!isVisible)} className=\"btn btn-dark text-white rounded-0 p-3 text-uppercase col-12\">Valider mon panier</Link></div>\n            </Fragment>\n            :\n            <h4 className=\"empty-cart col-12 m-0 my-5 font-weight-light text-center\">Votre panier est vide.</h4>\n        } \n\n\n\n\n\n\n\n\n\n\n\n{/*         {\n            cartItems.length > 0 ?\n            <div className=\"col-12 p-0\">\n                <div className=\"cart-item-container p-0 mt-2 mb-3\">\n                    {                \n                        cartItems.map((product) => (    \n                        <CartItems product={product} key={product._id}/>\n                        ))\n                    }\n                </div>\n                <div className=\"cart-total col-12\"><h4 className=\"text-left font-weight-lighter\"><span className=\"font-weight-bold\">TVA : </span>{ tva }€</h4></div>\n                <div className=\"cart-total col-12\"><h4 className=\"text-left font-weight-lighter\"><span className=\"font-weight-bold\">Livraison : </span>{ shippingPrice }€</h4></div>\n                <div className=\"cart-total col-12\"><h4 className=\"text-left font-weight-lighter\"><span className=\"font-weight-bold\">Total : </span>{ total }€ TTC</h4></div>\n                <div className=\"cart-total col-12 p-0\"><Link  to=\"/connexion?redirect=shipping\"  to=\"/commande\" onClick={() => setIsVisible(!isVisible)} className=\"btn btn-dark text-white rounded-0 p-3 text-uppercase col-12\">Valider mon panier</Link></div>\n                </div>\n            :\n            <h4 className=\"empty-cart col-12 m-0 my-5 font-weight-light text-center\">Votre panier est vide.</h4>\n        } */}\n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Modele/Modeles_Page.js",["219","220","221"],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Modele/Modele_Page.js",["222","223","224","225"],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Modele/Modele_Card.js",["226","227","228","229"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/Modele_Card.css';\nimport { FiShoppingCart } from 'react-icons/fi'\nimport { useDispatch } from 'react-redux';\nimport { addToCart } from '../../actions/cartActions';\nimport { AiOutlineRight } from \"react-icons/ai\"\n\nexport default function Modele_Card({ product, setAdd }) {\n\n    const dispatch = useDispatch()\n    const handleAddToCart = () => {\n        addItem();\n        dispatch(addToCart(product._id, 1));\n    }\n    \n    const addItem = () => {\n        setAdd(true);\n        setTimeout(() => setAdd(false), 3000)\n    }\n\n    useEffect(() => {\n        return () => {\n        }\n    }, [])\n    \n    return (\n        <div className=\"mt-4 card card-product\">\n            <Link to={`/modele/${product.slug}/${product.faceNumber}-pers`}>\n            <div className=\"p-2 card-image row\">\n                 <img className=\"img\" alt=\"\" src={product.image}/> \n            </div>\n            <div className=\"card-content row\">\n{/*                 <div className=\"card-cart-button mx-auto col-9 d-flex justify-content-around align-items-center rounded p-2\" onClick={() => handleAddToCart()}>\n                    <FiShoppingCart className=\"cart-icon\" size={20} />\n                    <h6 className=\"add-to-cart text-uppercase m-0 border-left pl-2\">Ajouter au panier</h6>\n                </div> */}\n                <div className=\"card-title text-left text-capitalize my-2 row w-100 justify-content-between\">\n                    <h2 className=\"m-0 p-0 text-left card-product-name col-9\">{product.name}eeeeeeeeeeeee <span>- {product.category[0]}</span></h2>\n                    <h2 className=\"m-0 p-0 text-right card-price col-3\">{String(product.price).split('.')[0]}<span>.{String(product.price).split('.')[1]}€</span></h2>\n                </div>\n                <div className=\"card-description text-left col-12 p-0\">50x70cm</div>\n{/*                 <div className=\"card-infos row justify-content-between align-items-end w-100\">\n                    <div className=\"col-3 btn btn-warning mb-3 card-details-button d-flex align-items-center justify-content-center\" onClick={() => handleAddToCart()}><FiShoppingCart className=\"cart-icon text-white\" size={20} />Plus d'infos <AiOutlineRight className=\"ml-1\"/></div>\n               </div>\n                <div className=\"card-category d-flex justify-content-center\">\n                    {product.category.map((category, i) => (\n                        <span key={i} className=\"badge badge-warning rounded-0 m-1\">{category}</span>\n                    ))}\n                </div> */}\n            </div>\n            </Link>\n        </div>\n    )\n}","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Connexion/Connexion_Page.js",["230"],"import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux';\nimport RegisterPage from './Register_Page'\nimport SigninPage from './Signin_Page'\nimport '../css/Connexion_Page.css'\n\nexport default function Connexion_Page(props) {\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\n\n  useEffect(() => {\n      if (userInfo) {\n        props.history.push(redirect);\n      }\n      return () => {\n        //\n      };\n    }, [userInfo]);\n\n    return (\n      <div className=\"container-fluid d-flex justify-content-between w-100\">\n        <SigninPage/>\n        <RegisterPage/>\n      </div>\n    )\n}\n","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Connexion/Register_Page.js",["231"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register, signin } from '../../actions/userActions';\n\n\nexport default function Register_Page() {\n\n    const userRegister = useSelector(state => state.userRegister);\n    const { userInfo } = userRegister\n\n    const [email, setEmail] = useState('');\n    const [lastname, setLastname] = useState('');\n    const [firstname, setFirstname] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordConfirmation, setPasswordConfirmation] = useState('');\n    const [newsletter, setNewsletter] = useState(false);\n    \n    const dispatch = useDispatch();\n    \n    const registerUser = (e) => {\n        e.preventDefault();\n        if (password === passwordConfirmation) {\n            dispatch(register(lastname, firstname, email, password, newsletter))\n        }\n    }\n\n    useEffect(() => {\n        if (userInfo) {\n            dispatch(signin(userInfo.email, password)) \n        }\n        return () => {\n        }\n    }, [userInfo])\n\n    return (\n    <div className=\"div-register col-md-6 col-12\">\n        <form className=\"col-12 d-flex flex-column align-items-center justify-content-center py-5\" id=\"addContact\" onSubmit={registerUser}>\n            <div className=\"row\">\n                <h2 className=\"font-weight-bold mb-4 mx-auto\">Inscription</h2>\n            </div>\n            <div className=\"d-flex flex-column justify-content-center align-items-center col-md-8 col-10 my-1\">\n                    <label htmlFor=\"lastname\">Nom</label>\n                    <input  id=\"lastname\" type=\"text\" className=\"validate form-control text-center\" onChange={(e) => setLastname(e.target.value)}/>\n            </div>\n            <div className=\"d-flex flex-column justify-content-center align-items-center col-md-8 col-10 my-1\">\n                    <label htmlFor=\"firstname\">Prénom</label>\n                    <input  id=\"firstname\" type=\"text\" className=\"validate form-control text-center\" onChange={(e) => setFirstname(e.target.value)}/>\n            </div>\n            <div className=\"d-flex flex-column justify-content-center align-items-center col-md-8 col-10 my-1\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input  id=\"email\" type=\"email\" className=\"validate form-control text-center\" onChange={(e) => setEmail(e.target.value)}/>\n            </div>\n            <div className=\"d-flex flex-column justify-content-center align-items-center col-md-8 col-10 my-1\">\n                    <label htmlFor=\"password\">Mot de passe</label>\n                    <input id=\"password\" type=\"password\" className=\"validate form-control text-center\" onChange={(e) => setPassword(e.target.value)}/>\n            </div>\n            <div className=\"d-flex flex-column justify-content-center align-items-center col-md-8 col-10 my-1\">\n                    <label htmlFor=\"passwordConfirmation\">Confirmation du mot de passe</label>\n                    <input id=\"passwordConfirmation\" type=\"password\" className=\"validate form-control text-center\" onChange={(e) => setPasswordConfirmation(e.target.value)}/>\n            </div>\n            <div className=\"d-flex justify-content-center align-items-center col-md-8 col-10 my-1\">\n                    <label className=\"col-8\" htmlFor=\"city\">M'inscrire à la newsletter ?</label>\n                    <input type=\"checkbox\" className=\"col-4 \" id=\"validationDefaultUsername\" aria-describedby=\"inputGroupPrepend2\" onClick={() => setNewsletter(!newsletter)}/>\n            </div>\n            <div className=\"row mt-3\">\n                <button className=\"btn btn-primary mx-auto\" type=\"submit\" name=\"action\">Valider</button>\n            </div>\n        </form>\n    </div>\n    )\n}\n","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Connexion/Signin_Page.js",[],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Home_Page.js",["232","233","234"],"import React, { useEffect, useState } from 'react'\nimport { ImSpinner8 } from \"react-icons/im\"\nimport \"../App.css\"\nimport { FiCheckSquare } from \"react-icons/fi\"\nimport Axios from \"axios\";\nimport { resetListProducts } from '../actions/productActions';\nimport { useDispatch } from 'react-redux';\n\nexport default function Home_Page() {\n    const dispatch = useDispatch();\n    const [modal, setModal] = useState(false)\n    const [add, setAdd] = useState(false)\n    \n    const displayModal = () => {\n        setModal(!modal);\n    }\n\n    const addItem = () => {\n        setAdd(true);\n        setTimeout(() => setAdd(false), 2500)\n    }\n\n    const addProduct = async () => {\n        const product = {\n            name: \"Test3\",\n            slug: \"test-3\",\n            price: 69.99,\n            image: \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.ytimg.com%2Fvi%2F1xjsW3tgByU%2Fmaxresdefault.jpg&f=1&nofb=1\",\n            category: [\n                \"Pop art\"\n            ],\n            faceNumber:3,\n            description: \"Parfait pour offrir. 70/100cm. Idéal pour afficher dans votre salon. Vous rendrez jaloux vos amis.\",\n        };\n        const response = await Axios.post(\"http://localhost:5000/api/products/\", { product })\n        console.log(response)\n    }\n\n    useEffect(() => {\n        dispatch(resetListProducts());\n        return () => {\n        }\n    }, [add])\n    return (\n        <div className=\"min-vh-100\">\n            <h1>HOMEPAGE</h1>\n            { modal ? \n                <div className=\"modal-background\">\n                    <div className=\"modal-test m-auto rounded d-flex flex-column justify-content-center align-items-center p-3\">\n                        <h3>Votre commande a bien été validée !</h3>\n                        <div className=\"order-check-icon text-success my-3 d-flex justify-content-center w-100\"><FiCheckSquare size={60}/></div>\n                        <p>Veuillez patienter, vous allez être redirigé ...</p>\n                        <button className=\"btn btn-primary \" onClick={() => displayModal()}>Fermer</button>\n                    </div>\n                </div>\n                :\n                null\n            }\n            { add ? \n                <div className=\"add-test m-auto rounded d-flex flex-column justify-content-center align-items-center p-1\">\n                    <div className=\"add-border rounded border-success p-2\">\n                        <h5 className=\"text-success\">Ajouté au panier !</h5>\n                    </div>\n                </div>\n                :\n                null\n            }\n            <button className=\"btn btn-primary col-12 my-3\" onClick={() => displayModal()}>Afficher</button>\n            <button className=\"btn btn-primary col-12 my-3\" onClick={() => addItem()}>Ajouter</button>\n\n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/actions/orderActions.js",["235"],"import Axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { getInfos } from \"./userActions\";\n\nconst createOrder = (order) => async (dispatch, getState) => {\n    const { userSignin: { userInfo } } = getState();\n    dispatch({ type: \"ORDER_CREATE_REQUEST\", payload : {order: order, userInfo: userInfo} })\n    try {        \n        const { data: { data: newOrder } } = await Axios.post(\"http://localhost:5000/api/orders\", { order: order, userInfo: userInfo });\n        dispatch({ type: \"ORDER_CREATE_SUCCESS\", payload: newOrder });\n    } catch (error) {\n        dispatch({ type: \"ORDER_CREATE_FAIL\", payload: error.message });\n    }\n}\n\nconst resetOrder = () => (dispatch) => {\n    dispatch({ type: \"ORDER_RESET\" });\n} \n\n/* const recupUserOrders = (userId) => async (dispatch, getState) => {\n    dispatch({ type: \"ORDERS_USER_REQUEST\" })\n    try {        \n        const { data } = await Axios.get(`http://localhost:5000/api/orders/user/${userId}`);\n        dispatch({ type: \"ORDERS_USER_SUCCESS\", payload: data });\n    } catch (error) {\n        dispatch({ type: \"ORDERS_USER_FAIL\", payload: error.message });\n    }\n} */\n\nconst importImage = (userId, orderId, itemName, filesName) => async (dispatch, getState) => {\n    dispatch({ type: \"ORDER_PHOTO_REQUEST\" })\n    try {\n        const { data } = await Axios.put(`http://localhost:5000/api/orders/photoupload/${orderId}&${itemName}`, { filesName: filesName });\n        dispatch({ type: \"ORDER_PHOTO_SUCCESS\", payload: data });\n        dispatch(detailsOrder(orderId));\n        dispatch(getInfos(userId));\n    } catch (error) {\n        dispatch({ type: \"ORDER_PHOTO_FAIL\", payload: error.message });\n    }\n}\n\nconst detailsOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: \"ORDER_DETAILS_REQUEST\", payload : orderId })\n    try {\n        const { data } = await Axios.get(`http://localhost:5000/api/orders/${orderId}`);\n        dispatch({ type: \"ORDER_DETAILS_SUCCESS\", payload: data });\n    } catch (error) {\n        dispatch({ type: \"ORDER_DETAILS_FAIL\", payload: error.message });\n    }\n}\n\n/* const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  try {\n        dispatch({ type: \"ORDER_PAY_REQUEST\", payload: paymentResult });\n        const { data } = await Axios.put(\"http://localhost:5000/api/orders/\" + order._id + \"/pay\", paymentResult );\n        dispatch({ type: \"ORDER_PAY_SUCCESS\", payload: data })\n  } catch (error) {\n    dispatch({ type: \"ORDER_PAY_FAIL\", payload: error.message });\n  }\n}\n\nconst resetPayOrder = () => (dispatch) => {\n    dispatch({ type: \"ORDER_PAY_RESET\" })\n} */\n\nexport { createOrder, /* resetPayOrder, */  detailsOrder, resetOrder, importImage, /*recupUserOrders, listMyOrders, listOrders, deleteOrder  */};","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/reducers/orderReducers.js",[],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/Dashboard.js",["236"],"import React, { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Menu from './Menu'\nimport Account from './Account'\nimport UserOrders from './UserOrders'\nimport \"../css/Dashboard.css\"\nimport { Route } from 'react-router-dom'\nimport Infos from './Infos'\nimport OrderDetails_Page from './OrderDetails_Page'\nimport Upload_Photo from './Upload_Photo_Dashboard'\nimport { getInfos, resetInfos } from '../../actions/userActions'\nimport { ImSpinner8 } from \"react-icons/im\"\n\n\nexport default function Dashboard(props) {\n    \n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const userInfos = useSelector(state => state.userInfos)\n    const { loading, userDetails } = userInfos;\n\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        if (Object.keys(userDetails).length === 0) {\n            dispatch(getInfos(userInfo._id))\n        }\n        if (!userInfo) {\n            props.history.push(\"/\");\n        }\n        return () => {\n            dispatch(resetInfos())\n        }\n    }, [userInfo])\n\n    return ( loading ? <div className=\"col-8 loading-spinner-div d-flex justify-content-center align-items-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n        <div className=\"container col-12 d-flex justify-content-center\">\n            <div className=\"col-2 d-flex justify-content-center\">\n                <Menu props={props} />\n            </div>\n            { loading ? <div className=\"col-8 loading-spinner-div d-flex justify-content-center align-items-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n            <Fragment>\n                <Route path=\"/mon-compte\" exact component={Account} />\n                <Route path=\"/mon-compte/infos-perso\" component={Infos} />\n                <Route path=\"/mon-compte/mes-commandes\" exact component={UserOrders} />\n                <Route path=\"/mon-compte/mes-commandes/:id\" component={OrderDetails_Page} />\n                <Route path=\"/mon-compte/envoyer-photo\" component={Upload_Photo} />\n                <div className=\"col-2 d-flex justify-content-center\">\n                </div>\n            </Fragment>\n            }\n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/UserOrders.js",["237","238","239"],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/OrderDetails_Page.js",["240"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function OrderDetails_Page(props) {\n    useEffect(() => {\n        console.log(props)\n    }, [])\n    return (\n        <div className=\"col-8\">\n            <div className=\"row d-flex justify-content-between\">\n                <Link className={\"\"} to=\"/mon-compte/mes-commandes\">Retour</Link>\n                <h4>Commande n° {props.match.params.id}</h4>\n            </div>\n            \n\n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Cart/useVisible.js",[],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Order/Upload_Page.js",["241","242","243","244","245"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { detailsOrder, resetOrder } from '../../actions/orderActions'\nimport { ImSpinner8 } from \"react-icons/im\"\nimport '../css/Upload_Page.css';\nimport Upload_Part from './components/Upload_Part';\nimport { resetCart } from '../../actions/cartActions';\nimport { AiOutlineArrowRight } from 'react-icons/ai';\nimport { TiTick } from 'react-icons/ti';\nimport { ImCross } from 'react-icons/im';\nimport { CgDanger } from 'react-icons/cg';\nimport { getInfos } from '../../actions/userActions';\nimport { Link } from 'react-router-dom';\n\nexport default function Upload_Page(props) {\n\n\tconst orderDetails = useSelector(state => state.orderDetails);\n\tconst { loading, order } = orderDetails;\n\n\tconst [ orderPhotoToUpload, setOrderPhotoToUpload ] = useState(null)\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (order) {\n\t\t\tsetOrderPhotoToUpload(order.orderItems.filter( x => x.photoUpload === false))\n\t\t} else {\n\t\t\tdispatch(resetCart());\n\t\t\tdispatch(detailsOrder(props.match.params.id));\n\t\t}\n\t\tif (orderPhotoToUpload) {\n\t\t\tif (orderPhotoToUpload.length === 0) {\n\t\t\t\tsetTimeout(() => props.history.push('/mon-compte/mes-commandes'), 3000)\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t\tdispatch(resetOrder())\n\t\t}\n\t}, [orderPhotoToUpload])\n\n\treturn ( loading ? <div className=\"loading-spinner-div d-flex justify-content-center\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :  \n\t\t<div className=\"upload-container py-2 container d-flex flex-column align-items-center mb-5\">\n\t\t\t<div className=\"upload-advice d-flex w-100 align-items-around my-5\">\n\t\t\t\t<div className=\"d-flex flex-column justify-content-center align-items-center col-8\">\n\t\t\t\t\t<div className=\"bad-way-upload d-flex align-items-center justify-content-around pb-3\">\n\t\t\t\t\t\t<div className=\"bad-way-photo\">\n\t\t\t\t\t\t\t<img></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<AiOutlineArrowRight size={60} className=\"cross\"/>\n\t\t\t\t\t\t<ImCross size={40} className=\"sign-icon text-danger p-5\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"good-way-upload d-flex align-items-center justify-content-around\">\n\t\t\t\t\t\t<div className=\"good-way-photo\">\n\t\t\t\t\t\t\t<img src=\"https://cdn.pixabay.com/photo/2016/11/29/20/22/child-1871104__340.jpg\"></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<AiOutlineArrowRight size={60} className=\"cross\"/>\n\t\t\t\t\t\t<TiTick size={140} className=\"sign-icon text-success p-3\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"advice-list text-left col-4 d-flex flex-column justify-content-center\">\n\t\t\t\t\t<h3><CgDanger className=\"text-danger mr-1\"/>Rappel</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Evitez les photos sombres.</li>\n\t\t\t\t\t\t<li>Pas de photos floues.</li>\n\t\t\t\t\t\t<li>Tout votre visage doit être visible.</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{\n\t\t\t\torder.orderItems.map((item, i) => (\n\t\t\t\t\t<Upload_Part order={order} key={i} item={item} orderId={order._id} userId={order.user}/>\n\t\t\t\t))\n\t\t\t}\n\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t<Link to=\"/mon-compte/envoyer-photo\">Envoyer mes photos plus tard.</Link>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Order/PlaceOrder_Page.js",["246","247","248","249","250","251"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeFromCart, savePayment, saveShipping } from '../../actions/cartActions';\nimport { useForm } from \"react-hook-form\";\nimport {PayPalButton} from 'react-paypal-button-v2';\nimport \"../css/Order.css\"\nimport { CgDanger } from \"react-icons/cg\"\nimport { GoTrashcan } from 'react-icons/go'\nimport { createOrder, resetOrder } from '../../actions/orderActions';\nimport { CardNumberElement, CardExpiryElement, CardCvcElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport Axios from 'axios';\nimport { FiCheckSquare } from \"react-icons/fi\";\nimport { ImSpinner8 } from \"react-icons/im\"\n\nexport default function PlaceOrder_Page(props) {\n\n    const orderCreate = useSelector((state) => state.orderCreate);\n    const { order } = orderCreate;\n\n    const dispatch = useDispatch();\n    const [modal, setModal] = useState(false)\n    const [orderIsValidate, setOrderIsValidate] = useState(false);////// REMETTRE A FALSE\n\n/* CARTITEMS */\n    const cart = useSelector((state) => state.cart);\n    const { cartItems, shipping, payment } = cart;\n\n    const removeItemFromCart = (product) => {\n        dispatch(removeFromCart(product))\n    }\n    const cancelOrder = () => {\n        console.log(\"Annuler la commande\") ///////////////////\n    }\n/* ///////////////////////////// */\n/* SHIPPING */\n    const { register, handleSubmit, errors } = useForm();\n    const onSubmit = data => {\n        setOrderIsValidate(true)\n        //console.log(data)\n        dispatch(saveShipping({ address: data.address, city: data.city, postalCode: data.postalCode, country: data.country }));\n        //dispatch(savePayment({ paymentMethod }))\n    };\n/* ///////////////////////////// */\n/* ORDER */\n    const totalItemsInCart = () => {\n        return cartItems.reduce((total, cartItems) => {\n            return total + (cartItems.price * cartItems.qty)\n        }, 0).toFixed(2)\n    }\n    const numbItemsInCart = () => {\n        return cartItems.reduce((total, cartItems) => {\n        return total + (1 * cartItems.qty)\n        }, 0)\n    }\n    const itemsNumb = numbItemsInCart();\n    const tva = ((Number(totalItemsInCart()) / 120) * 20).toFixed(2);\n    const shippingPrice = Number(totalItemsInCart()) > 50 ? 0 : 4.99;\n    const total = (Number(totalItemsInCart()) + Number(shippingPrice)).toFixed(2);\n/* ///////////////////////////// */\n/* PAIEMENT STRIPE */\n    const stripe = useStripe();\n    const element = useElements();\n    const [isProcessingCard, setIsProcessingCard] = useState(false);\n    const [paymentMethod, setPaymentMethod] = useState(''); \n    const [checkErrorMessage, setCheckErrorMessage] = useState('');\n\n    const handlerErrors = (e) => {\n        if (e.error) {\n            return setCheckErrorMessage(e.error.message)\n        }\n        setCheckErrorMessage('');\n    }\n    \n    const onSubmitCheckout = async (e) => {\n        e.preventDefault();\n        setIsProcessingCard(true);\n\n        try {\n            //Got our client secret\n            const paymentIntent = await Axios.post('http://localhost:5000/api/orders/checkout', { amount: total * 100 })\n\n            //Create PaymentMethod Object\n            const paymentMethodObject = await stripe.createPaymentMethod({\n                type: \"card\",\n                card: element.getElement('cardNumber'),\n                billing_details: {\n                    name: \"Youssef\",\n                }\n            })\n\n            //Confirm Payment Method\n            const confirmPayment = await stripe.confirmCardPayment(paymentIntent.data, {\n                payment_method: paymentMethodObject.paymentMethod.id\n            })\n\n            if (confirmPayment) {\n                setIsProcessingCard(false);\n                dispatch(createOrder({\n                    orderItems: cartItems, \n                    shipping, \n                    payment : { paymentMethod : paymentMethod }, \n                    itemsNumb, \n                    tva, \n                    shippingPrice, \n                    total\n                }))\n                setModal(true)\n                //setTimeout(() => props.history.push(`/envoyer-photos/${order._id}`), 4000)\n            }\n        } catch (error) {\n            setIsProcessingCard(false);\n        }\n    }\n/* ///////////////////////////// */\n/* PAIEMENT PAYPAL */\n    const [isProcessingPaypal, setIsProcessingPaypal] = useState(false);\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const handleSuccessPayment = (paymentResult) => {\n        dispatch(createOrder({\n            orderItems: cartItems,\n            shipping, \n            payment : { paymentMethod : paymentMethod }, \n            itemsNumb, \n            tva, \n            shippingPrice, \n            total\n        }))\n        setModal(true)\n        \n    }\n    \n    const setPayment = () => {\n        setIsProcessingPaypal(true);\n    }\n\n    const cancelPayment = () => {\n        setIsProcessingPaypal(false); \n    }\n/* ///////////////////////////// */\n    \n    \n    useEffect(() => {\n        console.log(order)\n        const addPaypalScript = async () => {\n            const { data } = await Axios.get('http://localhost:5000/api/config/paypal');\n            const script = document.createElement('script');\n            script.type = \"text/javascript\";\n            script.src = `https://www.paypal.com/sdk/js?client-id=${data}&disable-funding=credit,card`;\n            script.async = true;\n            script.onload = () => {\n                setSdkReady(true);\n            };\n            document.body.appendChild(script);\n        }\n        if (!window.paypal) {\n            addPaypalScript();\n        } else {\n            setSdkReady(true)\n        }\n        if (order) {\n            if (Object.entries(order).length !== 0) {\n                setTimeout(() => props.history.push(`/envoyer-photos/${order._id}`), 4000)\n            }\n        }\n        return () => {\n        }\n    }, [orderIsValidate, sdkReady, order, cartItems])\n\n    return (\n        <div className=\"checkout-page container\">\n            { modal ? \n                <div className=\"modal-background\">\n                    <div className=\"modal-test m-auto rounded d-flex flex-column justify-content-center align-items-center p-3\">\n                        <h3>Votre commande a bien été validée !</h3>\n                        <div className=\"order-check-icon text-success my-3 d-flex justify-content-center w-100\"><FiCheckSquare size={60}/></div>\n                        <p>Veuillez patienter, vous allez être redirigé...</p>\n                    </div>\n                </div>\n                :\n                null\n            }\n            <h2 className=\"text-left\">Validation de la commande</h2>\n            <div className=\"cart-resume row align-items-start p-5\">\n                <table className=\"table table-bordered text-left\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\" ></th>\n                            <th scope=\"col\" >Produit</th>\n                            <th scope=\"col\" >Prix</th>\n                            <th scope=\"col\" >Quantité</th>\n                            <th scope=\"col\" >Total</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {                \n                        cartItems.map((product) => (  \n                            <tr key={product.cartItemId}>\n                                <td className=\"text-danger\"><GoTrashcan style={{cursor:\"pointer\"}} size={20} onClick={() => removeItemFromCart(product)}/></td>\n                                <td>{product.name}</td>\n                                <td>{product.price}€</td>\n                                <td>{product.qty}</td>\n                                <td>{(product.price * product.qty).toFixed(2)}€</td>\n                            </tr>\n                            ))\n                        }\n                    </tbody>\n                </table>\n                <div className=\"col-12 d-flex flex-column p-0\">\n                    <button className=\"py-3 text-uppercase btn btn-dark rounded-0 font-weight-light ml-auto\">Poursuivre mes achats</button>\n                </div>\n            </div>\n            <div className=\"order-content row mt-5\">\n                <div className=\"shipping-form col-7\">\n                    <form id=\"shipping-form\" className=\"d-flex flex-column\" onSubmit={handleSubmit(onSubmit)}>\n                        <h4 className=\"text-left px-3 font-weight-light\">Détails de livraison</h4>\n                        <div className=\"input-group row\">\n                            <div className=\"col-8 d-flex flex-column my-2\">\n                                <label htmlFor=\"lastName\" className=\"text-left\">Nom <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.lastName ? \"border-danger\" : \"\")}\n                                    defaultValue=\"\"\n                                    name=\"lastName\"\n                                    placeholder=\"\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.lastName && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre nom.</p></div>}\n                            </div>\n                            <div className=\"col-4 d-flex flex-column my-2\">\n                                <label htmlFor=\"firstName\" className=\"text-left\">Prénom <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.firstName ? \"border-danger\" : \"\")}\n                                    defaultValue=\"\"\n                                    name=\"firstName\"\n                                    placeholder=\"\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.firstName && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre prénom.</p></div>}\n                            </div>\n                        </div>\n                        <div className=\"input-group row\">\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"address\" className=\"text-left\">Numéro et nom de rue <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.address ? \"border-danger\" : \"\")}\n                                    defaultValue={ shipping.address ? shipping.address : \"\"}\n                                    name=\"address\"\n                                    placeholder=\"\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.address && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre adresse.</p></div>}\n                            </div>\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"addressDetails\" className=\"text-left\"></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.addressDetails ? \"border-danger\" : \"\")}\n                                    defaultValue=\"\"\n                                    name=\"addressDetails\"\n                                    placeholder=\"Appartement, bureau, etc. (optionnel) \"\n                                    ref={register}\n                                />\n                            </div>\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"postalCode\" className=\"text-left\">Code postal <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + (errors.postalCode ? \"border-danger\" : \"\")}\n                                    defaultValue={ shipping.postalCode ? shipping.postalCode : \"\"}\n                                    name=\"postalCode\"\n                                    type=\"number\"\n                                    ref={register({ required: true })}\n\n                                />\n                                {errors.postalCode && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de saisir votre code postal.</p></div>}\n                            </div>\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"city\" className=\"text-left\">Ville <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.city ? \"border-danger\" : \"\")}\n                                    defaultValue={ shipping.city ? shipping.city : \"\"}\n                                    name=\"city\"\n                                    placeholder=\"\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.city && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre ville.</p></div>}\n                            </div>\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"country\" className=\"text-left\">Ville <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.country ? \"border-danger\" : \"\")}\n                                    defaultValue={ shipping.country ? shipping.country : \"\"}\n                                    name=\"country\"\n                                    placeholder=\"\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.country && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre pays.</p></div>}\n                            </div>\n                        </div>\n                        <div className=\"input-group row\">\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"phone\" className=\"text-left\">Téléphone <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.phone ? \"border-danger\" : \"\")}\n                                    defaultValue=\"\"\n                                    name=\"phone\"\n                                    placeholder=\"\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.phone && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre numéro de téléphone.</p></div>}\n                            </div>\n                            <div className=\"col-12 d-flex flex-column my-2\">\n                                <label htmlFor=\"email\" className=\"text-left\">Adresse de messagerie <span className=\"text-danger\">*</span></label>\n                                <input\n                                    className={\"p-2 \" + ( errors.email ? \"border-danger\" : \"\")}\n                                    defaultValue=\"\"\n                                    name=\"email\"\n                                    type=\"email\"\n                                    ref={register({\n                                    validate: value => value !== \"\"\n                                    })}\n                                />\n                                {errors.email && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre adresse de messagerie.</p></div>}\n                            </div>\n                        </div>\n  \n                    </form>\n                </div>        \n                <div className=\"order-resume col-5\">\n                    <h4 className=\"text-left font-weight-light\">Votre commande</h4>\n                    <table className=\"table table-bordered text-left\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\" >Produit{numbItemsInCart() > 1 ? \"s\" : \"\"} <span className=\"font-weight-light\">({itemsNumb} articles)</span></th>\n                                <th scope=\"col\" >Total</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {                \n                            cartItems.map((product) => (  \n                                <tr className=\"table-product-row\" key={product.cartItemId}>\n                                    <td >{product.name} <span className=\"span-qty font-weight-bold\">(x {product.qty})</span></td>\n                                    <td >{product.price}€</td>\n                                </tr>\n                                ))\n                            }\n\n                            <tr>\n                                <th scope=\"row\">Sous-total</th>\n                                <td>{total - shippingPrice}€</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\">Expédition</th>\n                                <td>{shippingPrice}€</td>\n                            </tr>\n                            <tr>\n                                <th className=\"table-total-th\" scope=\"row\">Total</th>\n                                <td className=\"table-total-td font-weight-bold\">{total}€ <br/><span className=\"span-tva\">(dont {tva}€ TVA)</span></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    \n                    <div className=\"input-group row\">\n                        {\n                        orderIsValidate &&\n                        <div className=\"order-pay-div col-12 p-0\">\n                            <div onClick={() => setPaymentMethod(\"Paypal\")} className=\"paypal-button-div d-flex align-items-center p-3\">\n                                <div className=\"paypal-icons d-flex align-items-center justify-content-around w-100\">\n                                    <h6 className=\"m-0 mr-auto\">Paypal</h6>\n                                    {\n                                        isProcessingPaypal &&\n                                        <div className=\"loading-spinner-div d-flex justify-content-center mr-4\"><ImSpinner8 className=\"loading-spinner my-3\" size={40} /></div>\n                                    }\n                                    {\n                                    paymentMethod === \"Paypal\" &&      \n                                        sdkReady &&\n                                            <PayPalButton\n                                                amount={total}\n                                                shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\n                                                onClick={() => setPayment()}\n                                                onSuccess={handleSuccessPayment} \n                                                onCancel={cancelPayment}\n                                            />        \n                                    }\n                                </div>\n                            </div>\n                            <div onClick={() => setPaymentMethod(\"Carte bancaire\")} className=\"credit-card-button d-flex flex-column justify-content-center align-items-center p-3\">\n                                <div className=\"credit-card-icons d-flex align-items-center w-100\">\n                                    <h6 className=\"m-0 mr-auto\">Carte bancaire</h6>\n                                    <img src=\"../../../images/creditCards/mc.png\"/>\n                                    <img src=\"../../../images/creditCards/visa.png\"/>\n                                </div>\n                                {\n                                paymentMethod === \"Carte bancaire\" && \n                                    <div className=\"credit-card-input d-flex flex-wrap align-items-center justify-content-around my-3 w-100\">\n                                        <form className=\"d-flex flex-wrap align-items-center\" onSubmit={onSubmitCheckout}>\n                                        <div className=\"col-12\">\n                                            <p className=\"text-left px-0 mb-1\">Numéro de carte 4242 4242 4242 4242<span className=\"text-danger\">*</span></p>\n                                                <CardNumberElement  \n                                                className={\"border col-12 p-2 bg-white \" + (!checkErrorMessage &&  \"mb-4\")}\n                                                options={{\n                                                    style: {\n                                                        base: {\n                                                            fontSize: '16px',\n                                                            color: '#424770',\n                                                            '::placeholder': {\n                                                                fontWeight: \"200\",\n                                                                color: '#aab7c4',\n                                                            },\n                                                        },\n                                                        invalid: {\n                                                            color: '#9e2146',\n                                                        },\n                                                    },\n                                                }}\n                                                onChange={handlerErrors}\n                                                />\n                                            {checkErrorMessage && <div className=\"d-flex align-items-center text-danger mb-3 my-1\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">{checkErrorMessage}</p></div>}\n                                        </div>\n                                        <div className=\"d-flex flex-column col-6\">\n                                            <p className=\"text-left px-0 mb-1\">Date d'expiration <span className=\"text-danger\">*</span></p>\n                                                <CardExpiryElement\n                                                className=\"border col-12 p-2 mr-auto bg-white mb-3\"\n                                                options={{\n                                                    style: {\n                                                        base: {\n                                                            fontSize: '16px',\n                                                            color: '#424770',\n                                                            '::placeholder': {\n                                                                fontWeight: \"200\",\n                                                                color: '#aab7c4',\n                                                            },\n                                                        },\n                                                        invalid: {\n                                                            color: '#9e2146',\n                                                        },\n                                                    },\n                                                }}\n                                                />\n                                        </div>\n                                        <div className=\"d-flex flex-column col-6\">\n                                            <p className=\"text-left px-0 mb-1\">Cryptogramme visuel <span className=\"text-danger\">*</span></p>\n                                                <CardCvcElement\n                                                className=\"border col-12 p-2 bg-white mb-3\"\n                                                options={{\n                                                    style: {\n                                                        base: {\n                                                            fontSize: '16px',\n                                                            color: '#424770',\n                                                            '::placeholder': {\n                                                                fontWeight: \"200\",\n                                                                color: '#aab7c4',\n                                                            },\n                                                        },\n                                                        invalid: {\n                                                            color: '#9e2146',\n                                                        },\n                                                    },\n                                                }}\n                                                />\n                                        </div> \n                                        <div className=\"d-flex flex-column col-12\">\n                                            <button disabled={isProcessingCard} className=\"btn btn-dark rounded-0 col-12 my-3\" type=\"submit\">{!isProcessingCard ? \"Payer\" : \"Paiement en cours...\"}</button>\n                                        </div> \n                                        {\n                                            isProcessingCard &&\n                                            <div className=\"loading-spinner-div d-flex justify-content-center mr-4 col-12\"><ImSpinner8 className=\"loading-spinner my-3\" size={40} /></div>\n                                        }\n                                        </form>                                     \n                                    </div>\n                                }\n                            </div>\n                        </div>\n                        }\n                        <div className=\"col-12 d-flex flex-column p-0\">\n                            {\n                            orderIsValidate ?\n                            <button className=\"cancel-order-button py-3 mt-3 text-uppercase btn btn-outline-dark rounded-0 font-weight-light\" onClick={() => cancelOrder()} >Annuler ma commande</button>\n                            :\n                            <button form=\"shipping-form\" className=\"py-3 text-uppercase btn btn-dark rounded-0 font-weight-light\" type=\"submit\">Valider ma commande</button>\n                            }\n                        </div>\n                    </div> \n                </div>\n            </div>\n        </div>\n    )   \n}\n","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Cart/delete/CartItems.js",["252"],"import React, { useEffect } from 'react'\nimport '../../css/Cart.css'\nimport { Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { GoTrashcan } from 'react-icons/go'\nimport { removeFromCart, addToCart } from '../../../actions/cartActions'\nimport { IoMdAdd } from \"react-icons/io\"\nimport { BiMinus } from \"react-icons/bi\"\n\n\nexport default function CartItems({ product }) {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        console.log(product)\n        if (product.qty === 0) {\n            dispatch(removeFromCart(product))\n        }\n        return () => {\n        }\n    }, [dispatch, product.qty])\n\n    const removeCartItem = (product) => {\n        dispatch(removeFromCart(product))\n    }\n\n    return (\n        <div key={product._id} className=\"cart-component-content p-0 d-flex flex-wrap justify-content-around align-items-center\">\n{/*             <div className=\"cart-component-img col-4 p-0\"><Link to={'/modele/' + product._id}> <img className=\"img\" alt=\"\" src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fimage.jimcdn.com%2Fapp%2Fcms%2Fimage%2Ftransf%2Fdimension%3D1920x10000%3Aformat%3Djpg%2Fpath%2Fs5dde8bff85c81b2f%2Fimage%2Fi925f4c08f4884c52%2Fversion%2F1552946324%2Ftigre-de-sumatra-fiche-animaux-felins-animal-fact-wildcat-sumatran-tiger.jpg&f=1&nofb=1\"/> </Link></div>*/}  \n            <div className=\"cart-product-title d-flex align-items-center text-dark font-weight-lighter col-12 p-0 px-2 py-1\">\n                <Link to={`/modele/${product.slug}/${product.faceNumber}-pers`} className=\"text-left text-uppercase\">{product.name} <span className=\"font-weight-light text-lowercase\">- {product.faceNumber} pers.</span></Link >\n            </div>\n            <div className=\"cart-product-detail col-12 d-flex justify-content-between align-items-center p-0 px-2\">\n                <div className=\"cart-product-price col-4 text-left m-0 p-0\">{String(product.price).split('.')[0]}<span>.{String(product.price).split('.')[1]}€</span></div>\n                <div className=\"cart-product-qty col-4 d-flex justify-content-around align-items-center p-0\">\n                    <div className=\"cart-product-input text-center p-0 mx-3\">{product.qty}</div>\n                    <IoMdAdd size={40} className=\"add-icon\" onClick={() => dispatch(addToCart(product._id, 1))}/>\n                    <BiMinus size={40} className=\"minus-icon\" onClick={() => dispatch(addToCart(product._id, -1))}/>\n                </div>\n                <div className=\"cart-trash col-3 p-0\">\n                    <GoTrashcan size={22} className=\"icon-close\" onClick={() => removeCartItem(product)} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n/* \nexport default function CartItems({ product }) {\n\n    const [qty, setQty] = useState(product.qty);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(changeQty(product._id, qty))\n        return () => {\n        //\n        }\n    }, [qty])\n\n    const removeCartItem = (product) => {\n        dispatch(removeFromCart(product))\n    }\n\n    return (\n        <div key={product._id} className=\"cart-component-content col-12 d-flex justify-content-around align-items-center my-1\">\n            <div className=\"cart-component-img col-4\"><Link to={'/modele/' + product.name}> <img className=\"img\" alt=\"\" src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fimage.jimcdn.com%2Fapp%2Fcms%2Fimage%2Ftransf%2Fdimension%3D1920x10000%3Aformat%3Djpg%2Fpath%2Fs5dde8bff85c81b2f%2Fimage%2Fi925f4c08f4884c52%2Fversion%2F1552946324%2Ftigre-de-sumatra-fiche-animaux-felins-animal-fact-wildcat-sumatran-tiger.jpg&f=1&nofb=1\"/> </Link></div>\n            <div className=\"d-flex text-dark flex-column col-4\">\n                <div>{product.name}</div>\n                <div>{product.price}€</div>\n            </div>\n            <input className=\"form-input col-2 text-center p-0\" onChange={(e) => setQty(e.target.value)} value={product.qty}/>\n            <div className=\"col-2\"><GrClose onClick={() => removeCartItem(product)}/></div>\n        </div>\n    )\n}\n */","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Order/components/Upload_Part.js",["253","254","255","256","257","258","259","260","261","262","263"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport uniqid from 'uniqid';\nimport { GoTrashcan } from 'react-icons/go'\nimport { IoMdAdd } from \"react-icons/io\"\nimport {GoCloudUpload} from 'react-icons/go'\nimport Axios from 'axios';\nimport UploadBar from './UploadBar';\nimport { formatBytes } from '../../../helpers/formatBytes';\nimport { MdPhotoSizeSelectActual } from 'react-icons/md'\nimport { GrTextAlignLeft } from 'react-icons/gr';\nimport { FiCheckSquare } from 'react-icons/fi';\nimport { AiOutlineDash } from 'react-icons/ai';\nimport { detailsOrder, importImage } from '../../../actions/orderActions';\nimport { useDispatch } from 'react-redux';\nimport { getInfos, resetInfos } from '../../../actions/userActions';\nimport '../../css/Upload_Part.css'\n\n\nexport default function Upload_Part({order, item, orderId, userId}) {\n\n\tconst dispatch = useDispatch();\n/* FILES */\n\tconst [files, setFiles] = useState([]);\n\tconst [compteur, setCompteur] = useState(item.photoUpload === true ? 0 : item.faceNumber);\n\tconst [progress, setProgress] = useState(item.photoUpload === true ? 100 : 0);\n\tconst [test, setTest] = useState(false)\n\n\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({\n\t\taccept: \"image/*\",\n\t\tonDrop: (acceptedFiles) => {\n\t\t\tsetFiles(\n\t\t\t\tacceptedFiles.concat(files).map((file, i) => Object.assign(file, {\n\t\t\t\t\tpreview: URL.createObjectURL(file),\n\t\t\t\t\t_id: uniqid()\n\t\t\t\t}))\t\n\t\t\t)\n\t\t}\n\t})\n    const removeFile = (fileId) => {\n\t\tsetFiles(files.filter(file => file._id !== fileId));\n    }\n\n\tconst images = files.map((file, i) => (\n\t\t<div className=\"upload-zone-img d-flex justify-content-around align-items-center border-bottom\" key={i}>\n\t\t\t<img src={file.preview} className=\"col-4\"/>\n\t\t\t<div className=\"img-detail text-left col-6\">\n\t\t\t\t<h6 className=\"img-name\">Nom : {file.name}</h6>\n\t\t\t\t<h6 className=\"\">Format : {file.type.split('/')[1]}</h6>\n\t\t\t\t<h6>Taille : {formatBytes(file.size)}</h6>\n\t\t\t</div>\n\t\t\t<GoTrashcan size={24} className=\"icon-close col-2\" onClick={() => removeFile(file._id)} />\n\t\t</div>\n\t))\n\n\tconst sendFiles = async () => {\n\t\tconst itemName = `${item.name}-${item.cartItemId}`\n\t\tconst bodyFormData = new FormData();\n\t\tconst filesName = [];\n\t\tfiles.map(file => {\n\t\t\tfilesName.push(file.name)\n\t\t\tbodyFormData.append('image', file)\n\t\t})\n\t\n\t\ttry {\n\t\t\tconst { data } = await Axios.post(`http://localhost:5000/api/upload/${orderId}&${itemName}`, bodyFormData, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t},\n\t\t\t\tonUploadProgress: progressEvent => {\n\t\t\t\t\tsetProgress(parseInt(Math.round((progressEvent.loaded * 100) / progressEvent.total)));\n\t\t\t\t}\n\t\t\t});\n\t\t\tdispatch(importImage(userId, orderId, itemName, filesName))\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t}\n\n\tconst example = () => {\n\t\tconst myDiv = []\n\t\tfor (let i = 0; i < compteur; i++) {\n\t\t\tmyDiv.push(\n\t\t\t\t<div key={i} className=\"upload-zone-exemple d-flex align-items-center justify-content-around border-bottom\">\n\t\t\t\t\t<MdPhotoSizeSelectActual size={80} />\n\t\t\t\t\t<GrTextAlignLeft size={80} />\n\t\t\t\t\t<GoTrashcan size={24} />\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn myDiv\n\t}\n\tuseEffect(() => {\n\t\tif (!item.photoUpload) {\n\t\t\tsetCompteur(item.faceNumber - files.length)\n\t\t}\n\t}, [files/*,  progress, test */])\n\n\treturn (\n\t\t<Fragment>\n\t\t<div className=\"upload-part w-100 d-flex flex-column align-items-center justify-content-center p-0 mb-5 border-bottom\">\n{/* \t\t\t{ (progress === 100 || item.photoUpload === true) &&\n\t\t\t\t<div className=\"validate-mask d-flex align-items-center justify-content-around w-100\">\n\t\t\t\t\t<div className=\"validate-modal m-auto rounded d-flex flex-column justify-content-center align-items-center p-3\">\n                        <h3>{item.faceNumber > 1 ? \"Vos photos ont été envoyées !\" : \"Votre photo a été envoyée !\"}</h3>\n                        <div className=\"order-check-icon text-success my-3 d-flex justify-content-center w-100\">\n\t\t\t\t\t\t\t<FiCheckSquare size={60}/>\n\t\t\t\t\t\t</div>\n                    </div>\n\t\t\t\t</div>\n\t\t\t} */}\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"upload-part-order-resume d-flex w-100 p-3\">\n\t\t\t\t\t<div className=\"upload-part-order-resume-img \">\n\t\t\t\t\t\t<img src={item.image} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-7 p-3 order-infos d-flex flex-column justify-content-center text-left ml-3\">\n\t\t\t\t\t\t<h4>{item.name}</h4>\n\t\t\t\t\t\t<p className=\"order-number m-1\">Quantité : {item.qty}</p>\n\t\t\t\t\t\t<p className=\"order-number m-1\">Commande : {order._id}</p>\n\t\t\t\t\t\t<p className=\"order-statut m-1\">Statut : {!item.photoUpload ? <span className=\"text-danger\">En attente</span> : <span className=\"text-success\">Complet</span>}</p>\n\t\t\t\t\t\t<p className=\"order-date font-italic m-1\">{\"Le \" + order.created_at.split('T')[0] + \" à \" + order.created_at.split('T')[1].split('.')[0]}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\titem.photoUpload &&\n                        <div className=\"order-check-icon text-success my-3 d-flex justify-content-center align-items-center\">\n\t\t\t\t\t\t\t<FiCheckSquare size={60}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t!item.photoUpload &&\n\t\t\t\t<div className=\"upload-part-content d-flex align-items-center justify-content-between w-100 mx-0 my-5\">\n\t\t\t\t\t<div {...getRootProps()} onSubmit={() => console.log(\"submit\")} className=\"upload-zone col-md-5 m-0 d-flex flex-column align-items-center justify-content-center\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t{ compteur === 0 ?\n\t\t\t\t\t\tprogress === 0 ?\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<GoCloudUpload size={80} className=\"\"/>\n\t\t\t\t\t\t\t<button className=\"btn btn-dark p-2 text-uppercase rounded-0 mt-3\" onClick={(e) => {e.preventDefault(); sendFiles()}}>Envoyer</button>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<UploadBar progress={progress}/>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<input {...getInputProps()} className=\"\"/>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisDragActive ?\n\t\t\t\t\t\t\t<p>Déposez {item.faceNumber > 1 ? \"vos photos\" : \"votre photo\"} ici.</p> :\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<IoMdAdd size={80} className=\"\"/>\n\t\t\t\t\t\t\t\t<p>Cliquez ou déposez {item.faceNumber > 1 ? \"vos photos\" : \"votre photo\"} ici.</p>\n\t\t\t\t\t\t\t\t<p>Photo{files.length > 1 && \"s\"} : {files.length}/{item.faceNumber}</p>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"upload-details d-flex flex-column col-md-6 p-0\">\n\t\t\t\t\t\t<div className=\"upload-title text-white p-2  bg-dark d-flex justify-content-between align-items-center\">\n\t\t\t\t\t\t\t<h2 className=\"text-uppercase font-weight-lighter\">{item.name} <span className=\"span-number-file text-lowercase\">{item.faceNumber > 1 ? `- (${item.faceNumber} photos)` : `- (${item.faceNumber} photo)` }</span></h2>\n\t\t\t\t\t\t\t<h6 className={\"m-0 \" + (item.photoUpload ? \"text-success\" : \"text-danger\")}>{ item.photoUpload ? \"Complet\" : \"En attente\"}</h6>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"upload-img-container d-flex flex-column align-self-stretch\">\n\t\t\t\t\t\t\t{images}\n\t\t\t\t\t\t\t{example()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</Fragment>\t\t\n\t\t</div>\n\t\t\n\t\t</Fragment>\n\t)\n}\n","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Order/components/UploadBar.js",["264"],"import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux';\n\nexport default function UploadBar({progress}) {\n\n    useEffect(() => {\n        return () => {\n        }\n    }, [progress])\n\n    return (\n        <div className=\"w-100\">\n            {\n                progress > 0 ? \n                <div className=\"progress-bar-div w-75 m-auto\">\n                    <div style={{ width: `${progress}%` }} className=\"progress-bar-span p-2 bg-primary text-center text-white\">{progress}%</div>\n                </div>\n                :\n                null\n            }\n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/helpers/formatBytes.js",["265"],"function formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nfunction formatSeconds(timeStamp) {\n    let time = timeStamp;\n    if (time < 60) {\n        time = parseFloat(timeStamp).toFixed(0);\n        return time + ' ' + 's';\n    }\n    else {\n        time = parseFloat(timeStamp / 60).toFixed(2);\n        const mn = time.split('.')[0];\n        const s = (time.split('.')[1] / 10) * 60\n        return mn + 'mn ' + s + 's'\n    }\n}\n\nexport { formatBytes, formatSeconds}","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/Menu.js",["266"],"import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { logout } from '../../actions/userActions';\n\nexport default function Menu({props}) {\n\n    const dispatch = useDispatch();\n    \n    const handleLogout = () => {\n        dispatch(logout());\n    }\n\n  const checkActive = (url) => {\n    console.log(props.location.pathname.split('/'))\n        if (props.location.pathname.split('/')[2] === url) {\n            return true\n        } \n        return false\n    }\n\n  useEffect(() => {\n    }, [])\n\n    return (\n        <div className=\"dashboard-menu col-12 d-flex align-items-center\">\n          <div className=\"dashboard-menu-links w-100 h-100\">\n            <ul className=\"d-flex flex-column justify-content-center align-items-center h-100 w-100 py-5 p-0\">\n              <li className=\"d-flex border-top w-100\">\n                <Link className={\"py-2 text-left w-100 \" /* + (checkActive(\"compte\") ? \"active\" : \"\") */} to=\"/mon-compte\">Mon compte</Link>\n              </li>\n              <li className=\"d-flex border-top w-100\">\n                <Link className={\"py-2 text-left w-100 \" /* + (checkActive(\"infos-perso\") ? \"active\" : \"\") */} to=\"/mon-compte/infos-perso\">Mes infos</Link>\n              </li>\n              <li className=\"d-flex border-top w-100\">\n                <Link className={\"py-2 text-left w-100 \" /* + (checkActive(\"mes-commandes\") ? \"active\" : \"\") */} to=\"/mon-compte/mes-commandes\">Mes commandes</Link>\n              </li>\n              <li className=\"d-flex border-top w-100\">\n                <Link className={\"py-2 text-left w-100 \" /* + (checkActive(\"envoyer-photo\") ? \"active\" : \"\") */} to=\"/mon-compte/envoyer-photo\">Envoyer mes photos</Link>\n              </li>\n              <li className=\"d-flex border-top w-100\">\n                <Link className={\"py-2 text-left w-100 \"} to=\"#\" onClick={handleLogout}>Déconnexion</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/Account.js",["267","268","269","270"],"import React, { useEffect, useState } from 'react';\nimport {BsPencil} from \"react-icons/bs\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { checkPassword, getInfos, passwordCheckReset, resetUpdateUserName, signin, updatePassword, updateUserName } from '../../actions/userActions';\nimport { ImSpinner8 } from 'react-icons/im';\nimport { useForm } from 'react-hook-form';\nimport { CgDanger } from 'react-icons/cg';\nimport { Link } from 'react-router-dom';\n\nexport default function Account() {\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n\n    const userInfos = useSelector(state => state.userInfos)\n    const { loading, userDetails } = userInfos;\n\n    const checkPasswordState = useSelector(state => state.checkPassword)\n    const { error: passwordVerifyError, validate } = checkPasswordState;\n\n    const updateUsernameState = useSelector(state => state.updateUserName)\n    const { error: usernameAlreadyUse, success } = updateUsernameState;\n\n    const dispatch = useDispatch();\n\n    const { register, handleSubmit, errors } = useForm();\n    const { register: register1, handleSubmit: handleSubmit1, errors: errors1 } = useForm(); \n\n    const [updateUsername, setUpdateUsername] = useState(false)\n    const [successUsernameUpdate, setSuccessUsernameUpdate] = useState(\"\")\n    const [errorUsernameUpdate, setErrorUsernameUpdate] = useState(\"\")\n    const [errorPassword, setErrorPassword] = useState(\"\")\n    const [successPassword, setSuccessPassword] = useState(\"\")\n    const [passwordCheck, setPasswordCheck] = useState(\"\")\n    const [newPassword1, setNewPassword1] = useState(\"\")\n    const [newPassword2, setNewPassword2] = useState(\"\")\n\n    const onSubmitUsername = data => {\n        console.log(data)\n        dispatch(updateUserName(userInfo._id, data.email))\n    };\n\n    const onSubmitPassword = data => {\n        console.log(data)\n        if (data.newPassword1 === data.newPassword2) {\n            console.log(\"OK\")\n            dispatch(checkPassword(userInfo._id, data.passwordCheck))\n        } else {\n            setErrorPassword(\"Merci de saisir deux mots de passe identiques.\")\n        }\n    };\n\n    useEffect(() => {\n        if (!userDetails) {\n            dispatch(getInfos(userInfo._id))\n        }\n        if (passwordVerifyError) {\n            setErrorPassword(\"Mot de passe incorrect.\")\n        }\n        if (validate) {\n            dispatch(updatePassword(userInfo._id, newPassword2))\n            dispatch(passwordCheckReset())\n            setSuccessPassword(\"Votre mot de passe a été mis à jour.\")\n            setPasswordCheck(\"\")\n            setNewPassword1(\"\")\n            setNewPassword2(\"\")\n            setTimeout(() => setSuccessPassword(\"\"), 4000)\n        }\n        if (success) {\n            setErrorUsernameUpdate(\"\");\n            setSuccessUsernameUpdate(\"Votre identifiant a été mis à jour.\");\n            setUpdateUsername(!updateUsername);\n            setTimeout(() => setSuccessUsernameUpdate(\"\"), 4000)\n        }\n        if (usernameAlreadyUse) {\n            setErrorUsernameUpdate(\"L'identifiant est déjà utilisé.\");\n        }\n        return () => {\n        }\n    }, [validate, passwordVerifyError, usernameAlreadyUse, success, userInfo])\n\n    return ( loading ? <div className=\"col-8 loading-spinner-div d-flex justify-content-center align-items-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n        <div className=\"user-account-page col-8\">\n            <div className=\"form d-flex flex-column justify-content-start align-items-center col-12\">\n                <h4 className=\"text-left font-weight-light align-self-start\">Mon compte</h4>\n                <form id=\"username-update-form\" className=\"d-flex flex-column col-8\" onSubmit={handleSubmit1(onSubmitUsername)}>\n                    <div className=\"input-group row flex-column align-items-center\">\n                        <div className=\"col-8 d-flex flex-column my-2\">\n                            <label htmlFor=\"email\" className=\"text-left\">Identifiant de connexion<span className=\"text-danger\">*</span></label>\n                            <input\n                                className={\"p-2 \" + ( errors1.email ? \"border-danger\" : \"\")}\n                                defaultValue={userDetails.email}\n                                name=\"email\"\n                                disabled={updateUsername ? false : true}\n                                onChange={() => { setSuccessUsernameUpdate(\"\"); setErrorUsernameUpdate(\"\")}}\n                                placeholder=\"\"\n                                ref={register1({\n                                validate: value => value !== \"\"\n                                })}\n                            />\n                            {errors1.email && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de renseigner votre nom.</p></div>}\n                        </div>\n                    </div>\n                    {successUsernameUpdate && <div className=\"row my-2 pt-1 text-success \"><p className=\"m-auto\">{successUsernameUpdate}</p></div>}\n                    {errorUsernameUpdate && <div className=\"row my-2 pt-1 text-danger \"><p className=\"m-auto\">{errorUsernameUpdate}</p></div>}\n                    {\n                        updateUsername &&\n                        <div className=\"submit-update-username col-12 mt-4 mb-4\">\n                            <button form=\"username-update-form\" className={\"submit-update-username btn btn-outline-dark rounded-0 p-2 col-8\"}>Modifier l'identifiant de connexion.</button>\n                        </div>\n                    }\n                    <Link className=\"mt-2\" to=\"#\" onClick={() => { setUpdateUsername(!updateUsername); setSuccessUsernameUpdate(\"\")}}>{updateUsername ? \"Annuler la modification.\" : \"Modifier l'identifiant de connexion.\"}</Link>\n                </form>\n                <form id=\"password-update-form\" className=\"d-flex flex-column col-8 px-4 py-2 mt-4\" onSubmit={handleSubmit(onSubmitPassword)}>\n                    <h6 className=\"font-weight-bold mb-3\">Modifier mon mot de passe</h6>\n                    <div className=\"input-group row flex-column align-items-center\">\n                        <div className=\"col-8 d-flex flex-column my-2\">\n                            <label htmlFor=\"passwordCheck\" className=\"text-left\">Mot de passe actuel<span className=\"text-danger\">*</span></label>\n                            <input\n                                className={\"p-2 \" + ( errors.passwordCheck ? \"border-danger\" : \"\")}\n                                name=\"passwordCheck\"\n                                type=\"password\"\n                                value={passwordCheck}\n                                onChange={(e) => { setPasswordCheck(e.target.value); setErrorPassword(\"\"); setSuccessPassword(\"\"); }}\n                                placeholder=\"\"\n                                ref={register({\n                                validate: value => value !== \"\"\n                                })}\n                            />\n                        </div>\n                        <div className=\"col-8 d-flex flex-column my-2\">\n                            <label htmlFor=\"newPassword1\" className=\"text-left\">Nouveau mot de passe<span className=\"text-danger\">*</span></label>\n                            <input\n                                className={\"p-2 \" + ( errors.newPassword1 ? \"border-danger\" : \"\")}\n                                name=\"newPassword1\"\n                                type=\"password\"\n                                value={newPassword1}\n                                onChange={(e) => { setNewPassword1(e.target.value); setErrorPassword(\"\"); }}\n                                ref={register({\n                                validate: value => value !== \"\"\n                                })}\n                            />\n                            {errors.newPassword1 && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de saisir un mot de passe dans les deux champs.</p></div>}\n                        </div>\n                        <div className=\"col-8 d-flex flex-column my-2\">\n                            <label htmlFor=\"newPassword2\" className=\"text-left\">Confirmation du nouveau mot de passe<span className=\"text-danger\">*</span></label>\n                            <input\n                                className={\"p-2 \" + ( errors.newPassword2 ? \"border-danger\" : \"\")}\n                                name=\"newPassword2\"\n                                type=\"password\"\n                                value={newPassword2}\n                                onChange={(e) => { setNewPassword2(e.target.value); setErrorPassword(\"\");}}\n                                ref={register({\n                                validate: value => value !== \"\"\n                                })}\n                            />\n                            {errors.newPassword2 && <div className=\"d-flex align-items-center pt-1 text-danger\"><CgDanger  size={20}/><p className=\"m-0 ml-1\">Merci de saisir un mot de passe dans les deux champs.</p></div>}\n                        </div>\n                        {errorPassword && <div className=\"d-flex align-items-center mt-2 pt-1 text-danger\"><CgDanger size={20} /><p className=\"m-0 ml-1\">{errorPassword}</p></div>}\n                        {successPassword && <div className=\"d-flex align-items-center mt-2 pt-1 text-success\"><p className=\"m-0 ml-1\">{successPassword}</p></div>}\n\n                        <div className=\"col-12 mt-4 mb-4\">\n                            <button form=\"password-update-form\" className={\"btn btn-outline-dark rounded-0 p-2 col-8\"}>Modifier le mot de passe.</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/Infos.js",["271"],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/delete/Password_Update.js",["272"],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Dashboard/Upload_Photo_Dashboard.js",["273","274","275","276","277","278","279"],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Admin/Admin_dashboard.js",["280"],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Admin/Menu.js",[],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Admin/Users.js",[],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Admin/Products.js",["281","282","283","284"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { countCollection } from '../../actions/dataActions';\nimport { listProducts, resetListProducts } from '../../actions/productActions';\nimport Pagination from '../Pagination';\nimport { ImSpinner8 } from \"react-icons/im\";\nimport '../css/Admin.css'\nimport { Link } from 'react-router-dom';\n\nexport default function Products(props) {\n\n    const productList = useSelector(state => state.listProducts);\n    const { error, loading, products } = productList;\n    const [add, setAdd] = useState(false)\n\n    /** Pagination */ \n    const countDb = useSelector(state => state.countData)\n    const { count } = countDb;\n    const totalProductsInDb = count.count;\n    const page = props.match.params.page ? props.match.params.page.split(\"=\")[1] : 1;    \n    const per_page = 8;\n    const skip = (page * per_page) - per_page\n\n    const dispatch = useDispatch();\n    \n\tuseEffect(() => {\n        dispatch(countCollection(\"products\"));\n        dispatch(listProducts(skip, per_page));\n        return () => {\n        dispatch(resetListProducts());\n        };\n\t}, [page]);\n\t\n\treturn (\n\t\t<div className=\"col-8 d-flex flex-column products-page\">\n\t\t\t<div className=\"d-flex justify-content-between align-items-center mb-5\">\n\t\t\t\t<h4 className=\"text-left m-0\">Liste produits</h4>\n\t\t\t\t<button className=\"btn btn-primary my-auto\">Ajouter</button>\n\t\t\t</div>\n\t\t\t{\n            \tloading ? <div className=\"loading-spinner-div d-flex justify-content-center w-100\"><ImSpinner8 className=\"loading-spinner my-3\" size={60}/></div> :\n\t\t\t\t<table className=\"table table-striped\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"col\">#</th>\n\t\t\t\t\t<th scope=\"col\">_id</th>\n\t\t\t\t\t<th scope=\"col\">Montant</th>\n\t\t\t\t\t<th scope=\"col\">Nom</th>\n\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{\n\t\t\t\t\t\tproducts.map((product, i) => (\n\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t<th scope=\"row\">{i + 1}</th>\n\t\t\t\t\t\t<td>{product._id}</td>\n\t\t\t\t\t\t<td>{product.price}</td>\n\t\t\t\t\t\t<td>{product.name}</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<Link to={`/admin/liste-produits/produit/id=${product._id}`} className=\"btn btn-outline-dark\">Détails</Link >\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button className=\"btn btn-outline-danger\">Supprimer</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t}\t\n            <Pagination pageName={\"admin/liste-produits\"} page={page} totalProductsInDb={totalProductsInDb} per_page={per_page}/>\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Admin/Stats.js",[],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Admin/Orders.js",[],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Pagination.js",[],"/Users/seghrouchni/Desktop/E-commerce Portfolio/frontend/src/components/Admin/Product_page.js",["285","286","287","288","289"],{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","severity":1,"message":"295","line":11,"column":21,"nodeType":"296","messageId":"297","endLine":11,"endColumn":29},{"ruleId":"294","severity":1,"message":"298","line":14,"column":8,"nodeType":"296","messageId":"297","endLine":14,"endColumn":25},{"ruleId":"299","severity":1,"message":"300","line":46,"column":6,"nodeType":"301","endLine":46,"endColumn":19,"suggestions":"302"},{"ruleId":"294","severity":1,"message":"303","line":71,"column":13,"nodeType":"296","messageId":"297","endLine":71,"endColumn":17},{"ruleId":"294","severity":1,"message":"303","line":86,"column":13,"nodeType":"296","messageId":"297","endLine":86,"endColumn":17},{"ruleId":"294","severity":1,"message":"304","line":1,"column":10,"nodeType":"296","messageId":"297","endLine":1,"endColumn":18},{"ruleId":"305","severity":1,"message":"306","line":36,"column":29,"nodeType":"307","messageId":"308","endLine":49,"endColumn":26},{"ruleId":"294","severity":1,"message":"309","line":4,"column":26,"nodeType":"296","messageId":"297","endLine":4,"endColumn":35},{"ruleId":"294","severity":1,"message":"310","line":10,"column":8,"nodeType":"296","messageId":"297","endLine":10,"endColumn":17},{"ruleId":"294","severity":1,"message":"311","line":11,"column":8,"nodeType":"296","messageId":"297","endLine":11,"endColumn":13},{"ruleId":"294","severity":1,"message":"312","line":18,"column":24,"nodeType":"296","messageId":"297","endLine":18,"endColumn":32},{"ruleId":"294","severity":1,"message":"313","line":18,"column":34,"nodeType":"296","messageId":"297","endLine":18,"endColumn":41},{"ruleId":"294","severity":1,"message":"314","line":18,"column":43,"nodeType":"296","messageId":"297","endLine":18,"endColumn":54},{"ruleId":"315","severity":1,"message":"316","line":98,"column":94,"nodeType":"317","endLine":98,"endColumn":108},{"ruleId":"294","severity":1,"message":"318","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":14},{"ruleId":"299","severity":1,"message":"319","line":33,"column":8,"nodeType":"301","endLine":33,"endColumn":14,"suggestions":"320"},{"ruleId":"321","severity":1,"message":"322","line":58,"column":29,"nodeType":"323","endLine":58,"endColumn":77},{"ruleId":"294","severity":1,"message":"324","line":3,"column":26,"nodeType":"296","messageId":"297","endLine":3,"endColumn":43},{"ruleId":"294","severity":1,"message":"325","line":13,"column":43,"nodeType":"296","messageId":"297","endLine":13,"endColumn":48},{"ruleId":"299","severity":1,"message":"326","line":32,"column":8,"nodeType":"301","endLine":32,"endColumn":39,"suggestions":"327"},{"ruleId":"328","severity":1,"message":"329","line":52,"column":21,"nodeType":"323","endLine":52,"endColumn":154},{"ruleId":"294","severity":1,"message":"295","line":1,"column":28,"nodeType":"296","messageId":"297","endLine":1,"endColumn":36},{"ruleId":"294","severity":1,"message":"330","line":4,"column":10,"nodeType":"296","messageId":"297","endLine":4,"endColumn":24},{"ruleId":"294","severity":1,"message":"331","line":7,"column":10,"nodeType":"296","messageId":"297","endLine":7,"endColumn":24},{"ruleId":"294","severity":1,"message":"332","line":12,"column":11,"nodeType":"296","messageId":"297","endLine":12,"endColumn":26},{"ruleId":"299","severity":1,"message":"333","line":20,"column":8,"nodeType":"301","endLine":20,"endColumn":18,"suggestions":"334"},{"ruleId":"299","severity":1,"message":"335","line":33,"column":8,"nodeType":"301","endLine":33,"endColumn":18,"suggestions":"336"},{"ruleId":"294","severity":1,"message":"337","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":20},{"ruleId":"294","severity":1,"message":"338","line":23,"column":11,"nodeType":"296","messageId":"297","endLine":23,"endColumn":21},{"ruleId":"299","severity":1,"message":"300","line":43,"column":8,"nodeType":"301","endLine":43,"endColumn":13,"suggestions":"339"},{"ruleId":"294","severity":1,"message":"340","line":2,"column":8,"nodeType":"296","messageId":"297","endLine":2,"endColumn":14},{"ruleId":"299","severity":1,"message":"341","line":35,"column":8,"nodeType":"301","endLine":35,"endColumn":18,"suggestions":"342"},{"ruleId":"294","severity":1,"message":"343","line":10,"column":22,"nodeType":"296","messageId":"297","endLine":10,"endColumn":33},{"ruleId":"294","severity":1,"message":"344","line":12,"column":11,"nodeType":"296","messageId":"297","endLine":12,"endColumn":19},{"ruleId":"328","severity":1,"message":"329","line":29,"column":33,"nodeType":"323","endLine":29,"endColumn":74},{"ruleId":"299","severity":1,"message":"345","line":7,"column":8,"nodeType":"301","endLine":7,"endColumn":10,"suggestions":"346"},{"ruleId":"294","severity":1,"message":"347","line":12,"column":10,"nodeType":"296","messageId":"297","endLine":12,"endColumn":18},{"ruleId":"299","severity":1,"message":"348","line":39,"column":5,"nodeType":"301","endLine":39,"endColumn":25,"suggestions":"349"},{"ruleId":"328","severity":1,"message":"329","line":47,"column":8,"nodeType":"323","endLine":47,"endColumn":13},{"ruleId":"328","severity":1,"message":"329","line":54,"column":8,"nodeType":"323","endLine":54,"endColumn":89},{"ruleId":"321","severity":1,"message":"350","line":71,"column":6,"nodeType":"323","endLine":71,"endColumn":94},{"ruleId":"294","severity":1,"message":"351","line":3,"column":26,"nodeType":"296","messageId":"297","endLine":3,"endColumn":37},{"ruleId":"294","severity":1,"message":"352","line":9,"column":23,"nodeType":"296","messageId":"297","endLine":9,"endColumn":33},{"ruleId":"294","severity":1,"message":"313","line":26,"column":34,"nodeType":"296","messageId":"297","endLine":26,"endColumn":41},{"ruleId":"299","severity":1,"message":"353","line":168,"column":8,"nodeType":"301","endLine":168,"endColumn":53,"suggestions":"354"},{"ruleId":"328","severity":1,"message":"329","line":400,"column":37,"nodeType":"323","endLine":400,"endColumn":84},{"ruleId":"328","severity":1,"message":"329","line":401,"column":37,"nodeType":"323","endLine":401,"endColumn":86},{"ruleId":"299","severity":1,"message":"355","line":22,"column":8,"nodeType":"301","endLine":22,"endColumn":31,"suggestions":"356"},{"ruleId":"294","severity":1,"message":"357","line":13,"column":10,"nodeType":"296","messageId":"297","endLine":13,"endColumn":23},{"ruleId":"294","severity":1,"message":"358","line":14,"column":10,"nodeType":"296","messageId":"297","endLine":14,"endColumn":22},{"ruleId":"294","severity":1,"message":"347","line":16,"column":10,"nodeType":"296","messageId":"297","endLine":16,"endColumn":18},{"ruleId":"294","severity":1,"message":"359","line":16,"column":20,"nodeType":"296","messageId":"297","endLine":16,"endColumn":30},{"ruleId":"294","severity":1,"message":"360","line":27,"column":9,"nodeType":"296","messageId":"297","endLine":27,"endColumn":13},{"ruleId":"294","severity":1,"message":"361","line":27,"column":15,"nodeType":"296","messageId":"297","endLine":27,"endColumn":22},{"ruleId":"328","severity":1,"message":"329","line":46,"column":4,"nodeType":"323","endLine":46,"endColumn":47},{"ruleId":"362","severity":1,"message":"363","line":60,"column":18,"nodeType":"307","messageId":"364","endLine":60,"endColumn":20},{"ruleId":"294","severity":1,"message":"303","line":66,"column":12,"nodeType":"296","messageId":"297","endLine":66,"endColumn":16},{"ruleId":"299","severity":1,"message":"365","line":98,"column":5,"nodeType":"301","endLine":98,"endColumn":34,"suggestions":"366"},{"ruleId":"328","severity":1,"message":"329","line":116,"column":7,"nodeType":"323","endLine":116,"endColumn":31},{"ruleId":"294","severity":1,"message":"367","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":21},{"ruleId":"368","severity":1,"message":"369","line":14,"column":27,"nodeType":"370","messageId":"371","endLine":14,"endColumn":28},{"ruleId":"294","severity":1,"message":"372","line":14,"column":9,"nodeType":"296","messageId":"297","endLine":14,"endColumn":20},{"ruleId":"294","severity":1,"message":"373","line":2,"column":9,"nodeType":"296","messageId":"297","endLine":2,"endColumn":17},{"ruleId":"294","severity":1,"message":"374","line":4,"column":55,"nodeType":"296","messageId":"297","endLine":4,"endColumn":74},{"ruleId":"294","severity":1,"message":"375","line":4,"column":76,"nodeType":"296","messageId":"297","endLine":4,"endColumn":82},{"ruleId":"299","severity":1,"message":"376","line":80,"column":8,"nodeType":"301","endLine":80,"endColumn":78,"suggestions":"377"},{"ruleId":"299","severity":1,"message":"378","line":37,"column":8,"nodeType":"301","endLine":37,"endColumn":30,"suggestions":"379"},{"ruleId":"299","severity":1,"message":"380","line":65,"column":8,"nodeType":"301","endLine":65,"endColumn":59,"suggestions":"381"},{"ruleId":"294","severity":1,"message":"352","line":3,"column":10,"nodeType":"296","messageId":"297","endLine":3,"endColumn":20},{"ruleId":"294","severity":1,"message":"318","line":5,"column":10,"nodeType":"296","messageId":"297","endLine":5,"endColumn":14},{"ruleId":"294","severity":1,"message":"347","line":7,"column":10,"nodeType":"296","messageId":"297","endLine":7,"endColumn":18},{"ruleId":"294","severity":1,"message":"343","line":12,"column":19,"nodeType":"296","messageId":"297","endLine":12,"endColumn":30},{"ruleId":"294","severity":1,"message":"344","line":16,"column":11,"nodeType":"296","messageId":"297","endLine":16,"endColumn":19},{"ruleId":"299","severity":1,"message":"382","line":28,"column":5,"nodeType":"301","endLine":28,"endColumn":7,"suggestions":"383"},{"ruleId":"321","severity":1,"message":"350","line":39,"column":7,"nodeType":"323","endLine":39,"endColumn":95},{"ruleId":"299","severity":1,"message":"341","line":34,"column":5,"nodeType":"301","endLine":34,"endColumn":15,"suggestions":"384"},{"ruleId":"294","severity":1,"message":"325","line":13,"column":13,"nodeType":"296","messageId":"297","endLine":13,"endColumn":18},{"ruleId":"294","severity":1,"message":"385","line":14,"column":12,"nodeType":"296","messageId":"297","endLine":14,"endColumn":15},{"ruleId":"294","severity":1,"message":"386","line":14,"column":17,"nodeType":"296","messageId":"297","endLine":14,"endColumn":23},{"ruleId":"299","severity":1,"message":"319","line":32,"column":5,"nodeType":"301","endLine":32,"endColumn":11,"suggestions":"387"},{"ruleId":"294","severity":1,"message":"388","line":11,"column":9,"nodeType":"296","messageId":"297","endLine":11,"endColumn":15},{"ruleId":"294","severity":1,"message":"389","line":11,"column":17,"nodeType":"296","messageId":"297","endLine":11,"endColumn":26},{"ruleId":"294","severity":1,"message":"325","line":14,"column":31,"nodeType":"296","messageId":"297","endLine":14,"endColumn":36},{"ruleId":"299","severity":1,"message":"390","line":37,"column":5,"nodeType":"301","endLine":37,"endColumn":7,"suggestions":"391"},{"ruleId":"328","severity":1,"message":"329","line":152,"column":8,"nodeType":"323","endLine":152,"endColumn":35},"no-native-reassign",["392"],"no-negated-in-lhs",["393"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'OrderDetails_Page' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["394"],"'data' is assigned a value but never used.","'DataSync' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'payload', 'payload', 'payload'.","ArrowFunctionExpression","unsafeRefs","'addToCart' is defined but never used.","'CartItems' is defined but never used.","'Axios' is defined but never used.","'shipping' is assigned a value but never used.","'payment' is assigned a value but never used.","'cookieItems' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'skip'. Either include them or remove the dependency array.",["395"],"react/jsx-pascal-case","Imported JSX component Modele_Card must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'resetListProducts' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.slug'. Either include them or remove the dependency array.",["396"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'FiShoppingCart' is defined but never used.","'AiOutlineRight' is defined but never used.","'handleAddToCart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["397"],"React Hook useEffect has missing dependencies: 'dispatch' and 'password'. Either include them or remove the dependency array.",["398"],"'ImSpinner8' is defined but never used.","'addProduct' is assigned a value but never used.",["399"],"'Cookie' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.history', and 'userDetails'. Either include them or remove the dependency array.",["400"],"'userDetails' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["401"],"'getInfos' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'order', 'props.history', and 'props.match.params.id'. Either include them or remove the dependency array.",["402"],"Imported JSX component Upload_Part must be in PascalCase or SCREAMING_SNAKE_CASE","'savePayment' is defined but never used.","'resetOrder' is defined but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["403"],"React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array.",["404"],"'AiOutlineDash' is defined but never used.","'detailsOrder' is defined but never used.","'resetInfos' is defined but never used.","'test' is assigned a value but never used.","'setTest' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'item.faceNumber' and 'item.photoUpload'. Either include them or remove the dependency array. If 'setCompteur' needs the current value of 'item.faceNumber', you can also switch to useReducer instead of useState and read 'item.faceNumber' in the reducer.",["405"],"'useSelector' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'checkActive' is assigned a value but never used.","'BsPencil' is defined but never used.","'resetUpdateUserName' is defined but never used.","'signin' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'newPassword2', 'updateUsername', and 'userDetails'. Either include them or remove the dependency array. You can also do a functional update 'setUpdateUsername(u => ...)' if you only need 'updateUsername' in the 'setUpdateUsername' call.",["406"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userInfo._id'. Either include them or remove the dependency array.",["407"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["408"],"React Hook useEffect has missing dependencies: 'photoToUpload' and 'userOrders'. Either include them or remove the dependency array. You can also do a functional update 'setPhotoToUpload(p => ...)' if you only need 'photoToUpload' in the 'setPhotoToUpload' call.",["409"],["410"],"'add' is assigned a value but never used.","'setAdd' is assigned a value but never used.",["411"],"'colors' is assigned a value but never used.","'setColors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array.",["412"],"no-global-assign","no-unsafe-negation",{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"425","fix":"445"},{"desc":"415","fix":"446"},{"desc":"447","fix":"448"},"Update the dependencies array to be: [cookieItems, dispatch]",{"range":"449","text":"450"},"Update the dependencies array to be: [dispatch, page, skip]",{"range":"451","text":"452"},"Update the dependencies array to be: [dispatch, props.match.params.faceNumber, props.match.params.slug]",{"range":"453","text":"454"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"455","text":"456"},"Update the dependencies array to be: [dispatch, password, userInfo]",{"range":"457","text":"458"},"Update the dependencies array to be: [add, dispatch]",{"range":"459","text":"460"},"Update the dependencies array to be: [dispatch, props.history, userDetails, userInfo]",{"range":"461","text":"462"},"Update the dependencies array to be: [props]",{"range":"463","text":"464"},"Update the dependencies array to be: [dispatch, order, orderPhotoToUpload, props.history, props.match.params.id]",{"range":"465","text":"466"},"Update the dependencies array to be: [orderIsValidate, sdkReady, order, cartItems, props.history]",{"range":"467","text":"468"},"Update the dependencies array to be: [dispatch, product, product.qty]",{"range":"469","text":"470"},"Update the dependencies array to be: [files, item.faceNumber, item.photoUpload]",{"range":"471","text":"472"},"Update the dependencies array to be: [validate, passwordVerifyError, usernameAlreadyUse, success, userInfo, userDetails, dispatch, newPassword2, updateUsername]",{"range":"473","text":"474"},"Update the dependencies array to be: [userDetails, success, dispatch, userInfo._id]",{"range":"475","text":"476"},"Update the dependencies array to be: [userInfo, passwordCheck, validate, error, success, dispatch, props.history]",{"range":"477","text":"478"},"Update the dependencies array to be: [photoToUpload, userOrders]",{"range":"479","text":"480"},{"range":"481","text":"462"},{"range":"482","text":"452"},"Update the dependencies array to be: [dispatch, props]",{"range":"483","text":"484"},[1804,1817],"[cookieItems, dispatch]",[1214,1220],"[dispatch, page, skip]",[1031,1062],"[dispatch, props.match.params.faceNumber, props.match.params.slug]",[576,586],"[props.history, redirect, userInfo]",[1055,1065],"[dispatch, password, userInfo]",[1381,1386],"[add, dispatch]",[1092,1102],"[dispatch, props.history, userDetails, userInfo]",[189,191],"[props]",[1306,1326],"[dispatch, order, orderPhotoToUpload, props.history, props.match.params.id]",[5951,5996],"[orderIsValidate, sdkReady, order, cartItems, props.history]",[619,642],"[dispatch, product, product.qty]",[3248,3277],"[files, item.faceNumber, item.photoUpload]",[3168,3238],"[validate, passwordVerifyError, usernameAlreadyUse, success, userInfo, userDetails, dispatch, newPassword2, updateUsername]",[1194,1216],"[userDetails, success, dispatch, userInfo._id]",[2216,2267],"[userInfo, passwordCheck, validate, error, success, dispatch, props.history]",[820,822],"[photoToUpload, userOrders]",[1050,1060],[1155,1161],[1019,1021],"[dispatch, props]"]